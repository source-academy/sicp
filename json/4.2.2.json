[{"id":"/sicpjs/4.2.2","tag":"TITLE","body":"4.2.2  \n    An Interpreter with Lazy Evaluation"},{"tag":"TEXT","id":"#p1","child":[{"body":"\n    In this section we will implement a normal-order language that is\n    the same as\n    JavaScript\n    except that compound\n    functions\n    are non-strict in each argument.  Primitive\n    functions\n    will still be strict. It is not difficult to modify the evaluator of\n    section ","tag":"#text"},{"tag":"REF","body":"4.1.1","href":"/sicpjs/4.1.1"},{"body":" so that the language it\n    interprets behaves this way.  Almost all the required changes center around\n    function\n    application.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p2","child":[{"body":"\n    The basic idea is that, when applying a\n    function,\n    the interpreter must determine which arguments are to be evaluated and which\n    are to be delayed.  The delayed arguments are not evaluated; instead, they\n    are transformed into objects called \n    ","tag":"#text"},{"tag":"EM","child":[{"body":"thunk","tag":"#text"}]},{"body":"s.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-1","body":"1","href":"/sicpjs/4.2.2#footnote-1"},{"body":"\n    The thunk must contain the information required to produce the value\n    of the argument when it is needed, as if it had been evaluated at\n    the time of the application.  Thus, the thunk must contain the\n    argument expression and the environment in\n    which the\n    function\n    application is being evaluated.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p3","child":[{"body":"\n    The process of evaluating the expression in a thunk is called \n    ","tag":"#text"},{"tag":"EM","child":[{"body":"forcing","tag":"#text"}]},{"body":".","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-2","body":"2","href":"/sicpjs/4.2.2#footnote-2"},{"body":"\n    In general, a thunk will be forced only when its value is needed:\n    when it is passed to a primitive\n    function\n    that will use the value of the thunk; when it is the value of a predicate of\n    a conditional; and when it is the value of\n    a function expression\n    that is about to be\n    applied as a\n    function.\n    One design choice we have available is whether or not to \n    ","tag":"#text"},{"tag":"EM","child":[{"body":"memoize","tag":"#text"}]},{"body":" thunks, similar to the optimization for streams in\n    section ","tag":"#text"},{"tag":"REF","body":"3.5.1","href":"/sicpjs/3.5.1"},{"body":".  With memoization, the first\n    time a thunk is forced, it stores the value that is computed.  Subsequent\n    forcings simply return the stored value without repeating the computation.\n    We'll make our interpreter memoize, because this is more efficient for\n    many applications.  There are tricky considerations here,\n    however.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-3","body":"3","href":"/sicpjs/4.2.2#footnote-3"}]},{"tag":"SUBHEADING","id":"#h1","child":[{"body":"Modifying the evaluator","tag":"#text"}]},{"tag":"TEXT","id":"#p4","child":[{"body":"\n    The main difference between the lazy evaluator and the one in\n    section ","tag":"#text"},{"tag":"REF","body":"4.1","href":"/sicpjs/4.1"},{"body":" is in the handling of\n    function\n    applications in\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":".\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p5","child":[{"body":"\n\tThe ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"is_application"},{"body":"\n\tclause of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":" becomes\n      ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":1,"eval":true,"prependLength":473,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQCZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMfeMAHcqFABahWNACZUCVMgENqdRgRpNQAG0UAvAJ6gApgDdFWostolBoRWTIbZJAOagKNDnETJ0WDLjE5CokdpSWWgD6ZhZGABRGAB4ADgA0xiQmAJSgAN7YoKBMRhRETKHqTGRGkaIJMZYU8UlpGdlZANzYAL6BpJTW2lT0FJE0BJGKTC7R5kRG9Akp9OlGmTm5AJAFRSVloayKyUvJoAC8AHxhpeazsSer66vLnT3YQQN0QyNjE9JGOn0Rmkk2mixaKzaG22hWKpXKkiOJ3OV3+gNqFAeUOeyXor16736ITsyWSWn0cSC6SmLkha2yeR2clAcWGkWSTCorFEVBMNQ+IUppCyGx2hVhewRRzJ+nZnO51D5kQF1jiYvFGs1hSpoHVWv1WmGo3GoJmDQWcRpdPWnX1+vwZDEilcwJ23WMWnoRlAzNZ9EijlYyRopBBKroQpIIsZWscDAou3oRC0CbOxgayniertOfF4ZIkQARjIKUEsqls7mc0kmiQQfSqCwSKw1pjK1Wq-n2VNFC2mkxFmWKx2RxrDT8TWjFECQVbLWDHtl0g6nS7pO3R3midZIg2my2SJiyyKulq4fsff7z+U7vM4sUkymshuNQB+XbwgvmgN0WuYh-JhQz4jgAXKAoZGPIJDAqeoDugCXoxpqRhMCwTCRukABEpAANYkDQQgVNuXwUPoyTegAtBRJIyphryFL0BL5umtxxrIITmHEgbBtBh6LtCOzXqEbIUEwRDiBS9g3FE5pcXQ7HWLcHLAgomZyUGdCtuWULAXa76mHMalsTydCsaoRgAI7zIe6k8Vp-EbmBBkWEZ8kmSQtzmP2HmKvE3GaYe2n0vifTBIMzmRF6VlrNUcQjKwFDWgy+Qar6bJGEGpGRZZ1mxfFiXRil+pCeBdaQVQ0HSLBDEeohaX+joPwjJmB6YvleKinaJXOY08TyAOozNU0rVxRQCV4vx1VwbV3pFbGqgJv1TVjaM5rnLqHY9WpS2DRQLWtqN41BesU2pQQLJskJt59Y2y0JddhUvhKn6ELdu33eap3ivBnqzU9H4XhFUW5fED67fth6LO1x3ZF9DHqoxoWfKE9BKAWIajP8ZA6EwViqLZAVAUhz0XmywMxX5bB2YFT3vvYZBEKwyZqdKazSMOm52iQyZaBznNaocxyo86YziZEWM43jDB8-zdrk+QNRDRlraLP5vFASKT1gWyEs9oKatabT3yYrruMhJF+isMWWgE+rmtVmB3NaFoXRMcRoQRYWWg0GQOG262-HE6AcYjKAxbSIYaZez7OFFiW-uBVNIcJt7Sieutwvo2LptS4s4f6PR4rJ6Vij0PQVAuJVjBpuOxoTKQpfl5XwJxKn5h4lN3UZk0cT588tb1pkjZ0CNbeejLsuTxqDdlxXVfpP9U8jsFIXMbXvyRDPTeVXFlvW3iQclYLu9WzQWgoqAmEAFRb3PwJX5h6T0HvZ8d28hJhV8EVXUrI0G3xUJD6SgOIoHCNQrqyS2j3K6LQHzlwjP-ICE8l6bRtK7JGxIIqNznn-KmhNA5zWDgtUAa00xQPiNgyurVrq7hSHA1UiDyyL1HMFKalCCzP1PjJOYFDZ5UNbBbLhCckEkJ4ZNdUJVPrv2YhFHO+s8HqwIeqdhgjrbXTVHaORO5OHW2Edpds5C4haLoDQ2BCx4EkD0fxZBhRWESOAaVf4UEYLSPdpeXc3dgSRHELhOINBCwACtOrihKiJRQLgXBeNrn4wJWFyEgh8SQHCdF0HMUSbHSBniEliFwhsDaISHFiCMIoaQcQ9pUBtvE7xOSkknlcZ-CoGhqgYhiUEoO9Vqm+P8UE4J814yJkAutKSER1HpNoccbp2kxn0laXUuWJRIhFJKa0uJWTOlJJSe2L0owlmlPKTbSZ6QAJPg6IUfAxQyT2G9C0UAIhxA+kSqI2IWyFn7LKYoCpsz0hOy0LacU+BKiRITKQaCwJgRtHbCVY5FAOgwm+jNH050-QeMMk0bJXTAmPS6g4sZslJlTR+ohQhGoSrdIJfU5GoApyyjqC0AhcKSYImiZhdJj9jApHEb0ZiIkal+0mXkDU9iXphIiVEo0KzL6stXm46ZKQym8rySVXZ7zPnpJPHBDBgxpmZHlbkgVSril7I+TbN5ar1UEgBe7NQLB2BQG8NwdA-AAgf0pSKyJIJomIPSOIGoe0XC9IBgiNkyQPnoUYaAAAZBG0Ayrw1nHje4Ip3jwnoJdcSNkhp+ycXDYQ0J-o-XusiJ6hRAdL6ZpQuYTZXK3Hltxtw+4ObBUksKYalVNtGEhTTYMQ4YCi2iArTbc0AaSrMtrZW9IQ7U3cv9B5FseigHCvzeEwtxaNKKMvrOowVbNVfB7TUTdJ9rbDoccyzdbKdFn07cxC9UQTQHpzUKi8yq3kdqnW4tk7DcFrq0gu0mS7RUevFV6y+n7WzbuYqBw8qiz7ztzS25Zbzn3Gr0SKaVDS7B8ObAI78ZjZ4IJLYFX9CIkOquQx2q977-TGMsQ+5ti7k0Ab7SMYRWFk7OkxkYbGetrB0VAAAHz409N1YrmPAcwmYTkigvY1Go7xgTQn-0rqAwRigWEuyyYo+h6j0H20qePS9G9G8D0kd09+wKdTq1ac45Lc2OG6HmIYXpojoQTNtpQ5pyle6fzxnY+Laz3GIybonTw8Z9C6D6YvMytjUHZPfN7EYYLsRQsOfC2+9DGbeyFmkIoZLeGaNObg-RgtInMRiZ0FbbLuWLHgZrZlyrIbcZ9hQjp1WBXH0ImPoZu98X0iufI6k2rFWcv51g+1lzrbTVkb0xZndIDe3layzl3DFi4gNfi-2SE+cItMvFZhBblXls8fSGtprA50hbbS66-06n-Nm0c2ZomWwm0FKK8ukrLHL43a43dugNX0NfZszue9bW6ORaNJEYoBAPu8DQ5SgHAWCwnZKChVrD3tuhHXpDj7GBYfEnhz9gsI3aMvbBz8LHwGADMuPBgA+8TQbzzUYvWdG6DjroCajRY499qWGjRz46lpEYHaObF2i8-tpb9m8u8-5vz82SONtWOYZqWXO4ifTY8+mq8wDIp7WGgdYngbhKKfe2Jn+uvlaHj+5SmBkuVsG4NQhqbaONeDDZMZDipnqaPbG+44rgHRMqdY25D3VWeM5Hk1WYT-vSuB8vu7xSURf5gep18ePpkojKVkEoHu9uT3g-J7HmHA30Np48lEEOOV9cg8ZRj-PkFscp9CKXzyKYUI+V5JTNHxMR116h5Tl3XwyaV4Vodb3JOg3G+j6PrC8tqhW+JLPxW5vWpQxWnkwoYoHdGs+flGbzEdo64hm1FaB85pb9H2-Sz1uFjgz15DC-vSSpvOhsXq7u5MqykXw-7vDi2Q-If6-prkWqXLfhbsfkdD-vRv-s-ifjNl2oPv6NHL7CzuPkbgxkpgHg9lhEgcko3mHKnLHGrl3oVk+hNk7l7nvm4l5jgaNEfujsbHEJhDgeesvlpJdkATQORGbBoD+FbBVDzjmpsM9jXu4g3EwLKJwRWh4EwLwYWPwfIl3hHrmGyHIR5OIWMFwcoDwYGKoQIXpoAa7v6GIRIZodIbIfIfdhQXkEIeKD7lHkxjHlgZfMYRoVIdoWwLoSEPPoYUWPweoZIdwTIToRYfhsQTYRvqzmgX7g4R9kwX4SYW4UER4SESQN4V8AEVoTITeigSIZjvXsBkXm8Pvm9K4bjHWDkYbsbBDvkbHjjgYV8F6GxKUc6KUgbpUXkX3rHlTuwd2uzpMKSIaNnqqF2IdnQNSNMIzAIqMQwPQcytKIMVLI-EroQO7KHmMXYBMdQtMZfrNqABkWYcEe3iYh4P0WSKpAoVYYQsXPsRoOtDcVkS-J7oTIXCIWyC4fceYUcflmjkbF5vMecaqF5gevcUwignaNEgfhkeUeRlrIiL2v8UMRGECfFn4qYRoKCWCVqBCSUVCa0XpiLpieKI0fJM0dCerj0QgacQsRcc8ZAX+ugSbrHphAiYsXgSMbbpYbSWfvBtvk8XbHgTSGsQwDkefpNp8v1u-Jag0tamwF4FwL4HwGgBTrsSJGJBJHEIkPQSoTQGfMUpYpqfkjmO+IkLCShGhBqdgTqVoHqeyuRJQMCEcpxkYB3tIGkWgQQO3BSAabkJUQAIS+5qliBem2huzoZeb5irY9inabYlhKKREMGYT+ShjKjuxsry4o7naxlQj1FoFJl1gpkNKUhamT4xEEBB4aTJn5hukrENLdiNbI4DhFn6p55k715lmgBF4arwFES1kjYECKotmjBY7tl1Fdn76rF7gjwHT9nNkvQdGUjpDdFjlUF9EQI8JySHg-okE7bMaYRrmxBspxh-h4GXTa6yRDrOa+5vZT7mhYT7nzDVn3kc6-gHQXnbnjaO6fJDoD4ezkDezlyuC7hDz7gHTBSzkXhvKsLLn-YlEED1kJDrDgXEatpQUEjFw+rv7JBZSTlYaHjrQ-JdDdlwn8jwU3qQjmin6VEhqNiHqvyJbzAdzQVw71ktaUj1kDkvTKpwXxYhm7HcUtjXSDjsVIWhBvL8VGC8VEU1hsxAUmDDy4VtSPHkXtznalw1BgXvnaBrAuDiC0Weg5Dxo1zaW6UxB4hGzUXoThmkVKWJYTRhxqWyW6Q5hgTWmuC6VkU5AAA8WlblYgcQplTlekxgqEGgjBHgnghwJAhgNIkxkMoASYAxVAwIYEmEoAAA1IaZzCMJyK4HIBSB5elZfFhIVcsUSaJBVC4Hlf5e3PbLmE5CFehCyjqYQEYEIBsS4LFY8glWcclZfCVZPNlRVVVQVRlWyqlRlaVYUINblQQBSAFT+doDqThEQMkDpuojenGVuOhvSEWjqccBpe2NemjHpcpfpUHNilATzCdYFZuPpJkLtZwQhdjDQABTMDhSNCvJNaAGBDeucAmsqh5V9e+MqgFV9T9cdc-kpVMshvNXDBqnaL6PSH9WmBhRlFhbKO9Vuf9GaaFRtc4SQMWKGKAGei8ZqISn9B2MXOJetAfuJQhbDP9CVJnGxfFqxeJdpOJYJSzS2HMvqL0BqPzagW0A9ftSdBSsSCooZrJHjTEJtdqG4jtd7I9QdXaEdc6CdbZQGhdfSf-oDZPHdSYCLU9f+RVbJfJR9TaGDfFY8cjTGq2nrbLO+Nsosq2qZYljdaOODerZDVwnZW8rDe2O6O2IjZkLbajR-mbSBYRsSvqDjehHjdhATSGHWMTfFqAFRBhtvK1JsnaOTedfqFTfWTTbBfBXYh2EzcdZzWRdzRJekJzRRTXbzVqILfDPGYrXtfTZ2lKcjDKbapwD4DwPwCgCqf6ByFyDyEqBGWWJefYRCaQFhGPQqB3tukRYvRPTUFyGSGATztPT6aKchseKcmhcQmvb5AWT3etNEpWMyrsmyuKLsiOBiZqMyvsnfYUPso-TYsyhZW-aABZZ-dfbtrXL-bXAAwaLtn-jzGypA87LmE-WOLtrIPQJcvoGykgyg3A1-btnHW-XHR2PA+KMyocOIJMIWPQI-MQ2IKQ4wHaAQ4UMymlb-eKBaaAAXBfIkIVYYKAHQwmRREw4UCw2w5cKABw9RFwzw8yhRMYW-RwxqMI4UNRLIxI7tg-OkFqIIwZVcBw1fKw4UMo7ucAPwyyIkOkEI1o6AGAOI1g7uQAKRGMaPsOgA2O6PcPWOYiYSGVMMOPCMcOGWsP6PuO+nxpeMmP+OONBNpgFxuOMGeX2OhNmMiOgDeWFBROAO7meVnD8PePmMZMpMBOMEXBxOmOaOJNXB5PROYQXCZNqMajZOlNpj+MVO+lGOJNyNlOgD+mFCamVivDFyn0d7n3mxkXnDqjHy7LHbyjr2DPWBvx9OTNn1djdKcaPJnCjNIhBAXzf3zPL29ZkGfLHg8N-3bOT1WqvDYBzPj1n2c7VwMHMoQTOKunpD3MVTAiHOEnMqQAkBQSiCoNqOfPfOkRvOYlEPKBUOwCQBv2UORDgtAtgkgskMACiv9ULCLsLKCzKAAcooBi0Y1ixix7YSdw10Bc0vUqJzi1iMxqMfGQBfLGtpP02SwtOxrMyfcc8+T5lBhRZS+KNS7S3s+2iKBM5cwM9c2cxBgMbKAy-yO7BhO1bXPQfMTSgWBBEwOSKbQEooGYKjJyFhdLh2FK7UEGNaa1DvcKOMS4PKxSSjHsKtZjTZPQdJfmXa5iKzOUQa12GRQSYS4UAa+Sx5V61PK66Uu66sUs5QJCF9bLL60y5yzwhNJG7mOHejZHVOYnO-OhUmha-4rcM6xnDaymwpXEGKwrZ4h9ira8Q1P2nWnoi+O+GOvWneIwi+NrDOiiU27mHW0tStWtdLY8UZm2-iVCM2+4iyTSXbLWzROSJaOELcLJOycpFLowtYpNYKdsVYkO3Ve4h8YcXoT8R2yxC5D3Nu8kV8XTlSQCaERQQ5Ju27sHgnjW-uxFM3nyaWsFMOxlkNkKQ+0acRdMxGOLnWets1tXUuwm8-XVsNvHEuxu85e4l-u2z+0DMPnlMh0vkfqjlezB3aC20WAQd+0FZ7Hh8Bm+ze1rp+Ifnfo4RQRO9-NrknjZMR+sO+9dqsdRvh-qPpKW7TiceSxLOuyR7BzrLdru9R4+zEH5tzmO6+0x6R5MJhl+qJ4h+J5BlR-glh-qPVeaWJrhPhIRNbYeIoKI9ROQivcXKwJKywC4I1utA1l6IwbwKcj6aJPMKchTkfZsoYuZ3KDQFZ72N6kmmjdhcBam0BB0EAA","body":": is_application(component)      \n? apply(actual_value(function_expression(component), env),\n        arg_expressions(component), env) "},{"body":"\n    This is almost the same as the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"is_application"},{"body":"\n    clause of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    in section ","tag":"#text"},{"tag":"REF","body":"4.1.1","href":"/sicpjs/4.1.1"},{"body":".  For lazy evaluation,\n    however, we call ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":" with the\n    argument\n    expressions, rather than the arguments produced by evaluating them. Since\n    we will need the environment to construct thunks if the arguments are to be\n    delayed, we must pass this as well.  We still evaluate the\n    function expression,\n    because\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":" needs the actual\n    function\n    to be applied in order to dispatch on its type (primitive versus compound)\n    and apply it.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p6","child":[{"body":"\n    Whenever we need the actual value of an expression, we use\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":2,"eval":true,"prependLength":499,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQCZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMfeMAHcqFABahWNACZUCVMgENqdRgRpNQAG0UAvAJ6gApgDdFWostolBoRWTIbZJAOagKNDnETJ0WDLjE5CokxmYWykYAFI6sAA50RiQUADTGJCYAlKAA3tigBUxGFERMoVT0APpaokZM5jFsCSRJFJn5BZ1dAPzatfValeFE0bHNre1dU6AAXKAVlSSKrKNNicmT0529WjQ0ANZEcZX0+qwARjSDw9GnF1eVNASLy6vx621pSVkdW7PzVUUcTiNSUIUa7xaG1+W16QJB+ii9hK5iG5hGUSClGslSMAA84kV6PRrBDxhsvhlMikYX9poomC5cQSiSTVGSPtT0j86f8FjQ4nVlBpKrFzlQluCxpzaVNeqZ0ZEogKhR4mKK2OLJTiPJV4aCrHQOVDPtzNn85gtHCRZCEGtKTebYWFUdbbdZ7WsTZSeXTLVUdBdpIpmYSjMTSQ6JrKepJFPsjJUseDA+dg5U4gzXhQ6iczpctPRjRMabyy1NU+nLtJEVGKWaY51-ScjABHEbkN7ktqNgry8It9tJMi3NsdkcnCiRFbJIt103fJ3TZvnXZkfbF6G8-uo1c0deb1IN3nNoolMqT6etQ9LuUuwZn0okS85mcUQ8+29dZvJnHSIxkDo9RSl60bbvelg5pipDYnQlT-oBlS6ta9BTsk8EAVoN6fr2fJVAhQGGiQN64TugwEVmIGQq0OEngCeoRi4JBviR4EKoMiiMcx17zrRfrGEwLBMB+oAAESkPsJA0EIoSnMkih4qAAC0SkQZEomZAA3NgAC+gQwSEfSoY8zwMkyNxFvicT0J+uQAJAdI+ZRxnEURWaAAC8AB8diUJY1zotEVmfl8BL0FpunYL+dBGRQJkYTo+hGNIeqMpZYW2TkDmFMUT4uW5BKeT5-6JZUogFXEIXGGFEV6VFBnWHYwJaIiQRpGZNlmrkHRyKAUQLISVCsKIVAmIm0XEUEmTZHk0xOaE+r6BmTBDSNY1Jg1Rq4VsbWgNt0w1MZTypeZgVFh1n5aeWBT4GQYiKK4yUdDpxiFkY8wEH1VprKQKUTdBJDTd10woRQoBEkQWhgx5alQft10TZU1ataQ1Lw+W+I5jauIZFQLDcckUTo9dBSI5m9QrDmTBFlNpYkyTh1xcdJWKElKUdUiaVVbd92PdIxO8oj3x43QLFTdN2lzblzkLPNaIWNEENQ1+0y9HLNwask15Kz211zL9RjyC00iS6AL1GG9wNTHUQkA2k4kkJJ0mhBN7j6IKymqYtGmm3pdWu+xmvunQnrUckmXZeD0vlFUFBMEQ4iIsi-nyxibojSHgxhrIYJdpyl29mRkGrDaGdLIMKFjjxoH1ouvZzOxxeNKXdocVDdTamN2Fmtp-ubaEgf0FXnZRKhrAUJ1i5WwUvX9VURjxBQS1D0OI9jxPQOzVs82gAbRvJabBTm5bs8LDoxmoVehPr+FM2NjvjdKvI1NxZfr7XjfXKLofZuvUP09TFBoQPGF8KDj1Tu9GG+1H5QWfqAq+75P6fh-l0U+VR1aBUxCA1+YC4o3E3vtHecCcHgJuCgzox9-5b15A-AcK9xyK3DDghBRYkE90bHpLoft9LBEavQJQz4aAJwwoBSi1g5w1zaAAneCx6HDjzo6bacIHBEFYJDJU8IkjSDpvTLYJBIZaB0boqYrAgSjwEY8YRFFgLiKMcYrYcjOwvgXq0CRYc2jTW2s2axRFWLgUZlEHxIQ8z3CwvOTxZY5j6K0FoXuPDYIDwHHuA8vEurUNAEA5GnlQDJP2EjGQtZJERS6EAtc5hGAw34Q9SxcUgniKiMjYpnQgGkE4iSJiyUKmxXiq0riyUohlMLE0nK55EmKigsjUKWMUrC3xixQZNkBb2LLL09pxtOpLOWXSRctV6q8JiozHpSw+nSFHvmK44VpHR3yncAsRUxIACpVlUA6dIB5ok0i3IubsvZCT7yVDlm-FxhNUlT3STvUxCYAXRwgW5YYSo5ZWVZJGIpditnXR2XE35hlA5tJeQTd8oKqQAKATcbJMDoh4qYm+CBoZkVGnCWi9F38YRUufF8gKCskRcRpRy7uNxkEwh3mQyK2LGqBzqQyyRmVWVcRCQWWFjZJXsvOWE1Fe0-gUsCZhMRcENZIvDGyYijKzRMvYV0Hee8JQH1Fa7BYFKUriAksqc4AArO+FrrkLCnC4FwyVqgVHfDQN19sHVITEBJH2kVXZOsdrCsNsb9gzQ1Z0HeYgjCKFOVOKgWEE0RsdhLW1-dCAaAnOVYN7qAFoPDc6itBC-hAJ1tk5OqIbhRETaGF17q0gdu+F2wtfwh5xXTZmrtob4U5kdfm-YUbB3FEqCOrNigc39rSDrK6oB8BFBBPYd67kRDiHmBPUANxGxDqQsurC2asJ1rSNErQG6bpgHUIyYou8SAtGSslbk99rk600pHI+f93rVrzbWt19bt7XI7W2utP9KHvXSZ60ZoAK3waLfs0ILMlrlWCmkwDUcUMBNEomj51VKrsL0na2O07+25C6EKr1sdFC+v9QEit9tSO7JjdOztibk1pozUuld-Grp90w+4Xjfb+P0cE6O697bL3tundNMTuB8ATTUCwdgUBvDcHQPwAIYqYrepY36lKATUniETD6j1qamMZmXcJcJoAABkrnQCLpvJ5DyMNrMXpcFi6jAaqah27HZkZeVTOsYs4GkSokaiha0FGqjxbEtCk5WnIp9HOiMZQ15hT4Sfmu0hYmdLAwoj4KuURuLCX+jmDI-goLxaFhLBWN58FDmfXmYDaheLbWjApfiYZUrLx2scoi4RvKxGBtkYm81iTHL4oDY63lvKBWlNFYW38hYbKWIuc6yh6LPXLPSrEnt1oQ3XYXfQnyg7a3nIbZXU9tV7jVPceLTdvBgU6WGpRW96r62hOKZE5tophbxM7fwjqmxUqAeHai8xmLvXCVndEqDB6tSYdEQ0qAAAPnj7ax22NxdSaJMwK1FCrkTMq3HBOidI5O6TtHiNafFeLcq+VVxVvIbykt46K2Xs3gh8ZrD2Pgn6pZH9uH4XAePeBwpwr4P2cSdGxj9CyqogDbSJLsMEY6CTZ3sR9XWPRGw5IGR7XJ6fsGv14Dbbhkz7LDTCGW3Rqef2aO4zknfWyeVld1Lu3V20vO-TOTbMuYOVuNlwj5ypjXL8+eFboXRWPsSf9-kmsHvIvy-k0ppXb2Rei7jFCjPbvSTh8pnUTqjS5ehGI2XwPRqyOV+KNXtIjSHeNQWKz8X-2Y92QY7zmW3vYu+5Z-3ERhEQjB4k73s3RExsKImHX7pRQCAiV4Gnv58-p84lb1TaPnJV+HPXyJDA2-DK791c+ZG2epvOVP4bESABmS-jVd9IRoJrS+GvML34hXjETBNynxvyJnpmv3NyX2wmJlG0bz13d02UIEn05wP2rxgOWUgMXzv1Ty7xM3QRhSBX22y2oRkVHxR3i0BSnHfmSFnz+URSb372P1IOuRT3BzwJjiDjLjC2YIe04O6x91R3cXtnTlbl+yD2yHpzLGJzHyEO7BELoGDnLmcTfDoMMlEI9CziKBziVHu092m0DWhQ31SS3ziVdg0Mzh-2HjkN4P0Mf0MLP1SQvzMOLQsOUPMCpk7mXw2GniNwcOf1STfw4PokcRHFHlwQizIICyZz63XntlCMG3fxigSJUNcXCPHmTQKF+Dk2EywnXhF1dmIVSOvlwUuRYPy2B0-hcIkyJGYRoInnSI3l8OgyUyqOjRa3nkXmXmHjCM-maK90WAMUaPCmqKh2qE4jqOBUQVKMiIc3vRBzyJmJVzGNyQAK6zM0EPi1yTUMalyUz0KXhz4M8wVzB0L1GJGyAKRjXA3CIJX1j3r1q22M+WoKmOWMdyqBVGAhFDFAlF8QO0H1y2H04NaSYCWk+OFHVB+O1Bl2PykN5AWC1AZDBMFC+MhM1F+KonC3OO7yqBBORNVG+PROhONRIIBKyKBPogENkPizxMeBRIhI1AuAxOsB2PwKRl+NBLpIJLRKZOJI6zJJTRz34I2OpLJ0RM5PBLVEZMRJnySNCElJFDuxIKOKf2MLO1MPaLn2wS5PqBtDWJq2MkcLO2cM1L+SHjdB1IelOT0LsIeMNICLOyCIwz+VG31AUF8SFkYLoHakZFUVaHEKNTKJVNqzdLBBZLNT+E9IQOsB9JcD9PQnL1UDeMagVJ5JlJ1G-1DL+OVJKVUDBlTOyVTK51eyxKOIWFpKLKhOzLeyURL0TCzPBFGxW1TLRnRTpACSKPBL1NTy8TrL1GandMbMuObPpLVFbLbK2A7O1K7OtNRSQN0XNMUMtO7OV2CN2wHLDJhMdH6MR2iM2LJwbJZLlOQMwwDKYO3PKKBzzxXS21NMMjMjPPZBtIf1CCFwL3CyLw037i0zYC8C4F8D4DQBf2GxxKQnjkTiiDxENwc0uCuAzWIigsFL+F6DxF7Jtg0Egvtlgq0HgvIwAknTXQAiMFGmSlZM4IIHKUREQpyBfNAAAEJKTwKxAqK1Ni9Rt-o0DqYO8CkZUKTjcfpsYJoW8swq8uKckeLKNi9vp3hfoNpMNMRoKBiqSKCCAFCZLBL+4yKTyElHMKY29qYFLZNrlVTMQ0hTCzYQKYpEY78CABNjL-CN9VLQBnCLLi8hZcY5lrxbKjKDS4oz8nKgjXKStLiMEuVrQsYpF7jYoohRJQqRgyNwqJhsS2S4rogqsoqZCKCBUxJUqtLUrNYIrKtApFKrzciiqFYi8A5yBdgSRXAcYTARYCU3JiUaKd4FNv4gri0iiCA9LmqsgfLSq+rWKgF-MF44gl56rGq3xsl71tI2LLierXgzlQlOoLI7KUNMw8ZlqCxVqzpWLCi9LiyaY9L1rBrFqVh9qurDqLJMQTqBrnIFNzqjBLqJNMYtFJrPLr5VVdrCwO9OJEwwUVSkgXBxBtrvkfMYYcLXBQbwhwpazNrhJ2Leqo8ddykuRzh-r6qVYmxtBgbQao9sgAAeXG6GsQcquGsseUQSDCkjPYOMEgQwMyeM49egI4EEKgZKOYUSUAAAaiQvplQhWlcDkERAJt5rEntnFqQMFolBcBFvJoiTonQuElps8AICMCEDsF9LfEYFZoHM5rEiluWRluFoIFFu+uyD5rI25r5ulrjllvlthsqrSz2EOGOCWzbQ5V4s6CqpMGqD2FckBsjOLSqWIhRutyGQAT+CiPmIJqQPlAyH9oFGasAhoFqqZFmVFmvB2SQLmA5QhuONHTjuWV6C8ydtztAFDoWLBqGR7SUyduGSmE4S2Fnm+ALtGq6I+qzp8KQy2GVprvtlIEuF+lAFm0bq4WAyjq2CASeuyW6t6pZXLB3irqeqOtuteC5FXpuqeoHS2GbqPiOO+CTsDqpGCLZWLNhS9oju9tJmLSPt2GTqDp2hDoERrp+qDKXrmKGOLvsQTr9ofpPtTvTq7qapzuWTztVQLq8x-uMV6HPTLvKVRofQrqroUwJrrpXQbvISA0bFboyHbvTVxE7szoJUm01WpuEivodmHptFHteE9jsB5Uu3HooUnt7pBjzOYHoZhnnqWsXrLGXtftXqj3XourSC3rOlEeepYYPq4UPsToAaGqxS-Mwx-J004B8B4H4BQEss4MGmGmoHWn+imlX0yo7NIHtn0bWkSOCKscMcTCGhBCmI9NRnutfJOJXXFk0lcqATsZIrkoSS6QCRjGI0XTI06EXWunHIrFq2vXCYKGvSiaZWIwRvidAARqSZCdq0ZjScZkycnNq1awMTIyKZiV5Gia6GI1kHoB3X0DI2qdqfKeSdq2VvieVvLAqc6GI1MXED1HOHoA+R6bED6cYD+E6YKGIx5rSc6EwtAH0GyG8lAEUj5sMFAHGeitEiUmmYKFmfmfuUUlUlWfWeIyUjxPicUi6EWYKFUgueOdq3eTSGmF2YWZ8kUgeTmYKDub61EmAG2b6jxDSD2cWcUjACOeae+YAFI-nnn9nQAIWPm1nwX3xRJfMPJpmYXgWC75mkWYq6LfN0WAW5mXmln6LfMiWcXRJCboXCWgXXnQBiaChsWsnvnCa0XHmugMW6XWXGWvnkWvJqXAXiXFIfIeWKWvI2WnmaWhXQBxXRXmXkW6K-mSXLmRX6LOgoKYwIpfGVoDH-HEYo9PIYR48ohF00g-GjHvytXOHzXxpJ8K18KKkjWzEgh7kUmdXrGyMhdxZ1n0n3X7GAmQgRjcBtXVp-WTcgm4tiMrVjYyNo3kofWJyJnatIASAjZRA6nHmU202l4E3E3unlBhnYBIB4mhnKgi3c2Jz83emABRNJ0t6titts4jAAOUUGbb+dbebexonKtYYDBhtZ-zQlfm+sNa6GNbIHuS8zIC5AHfDd7dQl9dDf8ZAIslHc6HHcnY8bCWmjNb9eXbzMxyDeL0WmWiXYtfkt2jMkZhKuchPYlEqANiYBallsqFdUUDMH4RWnGvAJJgHccZwrfBccBljOveCKHSOBAZYhvYHjxGmUg+vE0T1IHf1e+ojMTa6FnYPduwtrQ62UQ9OWQ7tbdQdbSHnOMUw77cxwgXClw+WQ7vGqWhIbfB+RGsIZcF2AxsGCY9aGyXA+OG48JgimPb8lbUwTwyfqIVLQcffC1XE6pB+RbUy2iHJiHhit4HFowE0g0h7TY449RAE7aE0iAA","body":"function actual_value(exp, env) {\n  return force_it(evaluate(exp, env));\n} "},{"body":"\n    instead of just\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":",\n      \n    so that if the expression's value is a thunk, it will be forced.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p7","child":[{"body":"\n    Our new version of ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":" is also almost the\n    same as the version in section ","tag":"#text"},{"tag":"REF","body":"4.1.1","href":"/sicpjs/4.1.1"},{"body":".\n    The difference is that\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    has passed in unevaluated\n    \n\targument\n      \n    expressions: For primitive\n    functions\n    (which are strict), we evaluate all the arguments before applying the\n    primitive; for compound\n    functions\n    (which are non-strict) we delay all the\n    arguments before applying the\n    function.","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":3,"eval":true,"prependLength":483,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQCZMChsDMBXAOwGMAXASwHsjQAbCgZzIH0q8WBDAJwHMWAbpzoEApowAUogB4AHRgBpQoogICUoAN4BIbKFDdRZAt1oBbTrKlzQAXgB8oTuQLDBwsddlKV6n3MY1AG5sAF98YnJqWgZmNg4AE1E6TgBPUQSuPkkZeR9VDR09AyMTc0svO0cklNSWCjIvfL9lAOCw3BBQQlJKGkZu7iozCBh4JFQ0AEZp7C6AdwaAC1AzKgSKPAoSTj6iAbwqbnpOAC9U5SERXei5sGcSI42iXlAyKlG4RGR0LAxcHpRGiXDy7UQSR5mWQ0FRkZqFYolYymUBMFgMMiibjCCHDaFEWFqRH6En6AD89AaWLcV08kPxhOJpP0AC5UYwWEROGZwfSYUQyETmcyKXQqFQANYEWQsRipMwAIyodHcInBcsVyvinO5vLx-MF8KZzLZaMssgYOz2uKhBqFwpJFPNdFSEmcxhpHnBgL2LFyhkYjGiNoZArU8IUxodzJ4-H94iD-RDdqN0dZ7LYsmp724LEhCooXOtfIJYajjpB10xEioWexObzwwLReiLHeXFkFu2NxoydLhuUBXL6bRjyIGz2OJLjLToApoiujfHDWiU-1-dTadNHJSioSnD9cgDiaIfZnaYpFglohYPuDu4V+5Ysh4usxuY1SrokmnYcjs4A5kHyfJUEldX8B18e1o23WVRAARzEUg9VtftoIdedF0YBCkJIdUcJUPDZTIMEeQFH910JTcYIzBUxRICUzzLWdMLcOiqAYpi4UHdRh1AWDDGRIhiNI2EuPQ4VWJVQSyhEzEyMaCDqIdWC7xoFgkhIFJ62DCCJJFStXGrNThM0lV2zHZhOAFDTRC08TlOFWCzNfYtKOYi9K1srTXN09zuKgvjYM4QMKF4IgFPEvipK4ULwsipSeP00k2SxIZuC4pQACJiAlIgqHmWg5QFThpFAABacrDLBLL2nCCJemiJwXE9NUmiSrRihklFDm4IiGikWkwXaqC6oBSI9i8scJ1XOhMo6op9G62g0TIbgCDIJZXXdVwVVpPVl0nFVZEMDYrRQ0NIIKZLyWq6tppXGg3EsgiBQcpLh1Sob7poGanpVYR3xbAQLpTJKQnqkyvOwxDCPVMgzDIRQFuJTZQAkNFRChMg6hh3D4cRwIEWjZbQGIJItgJBIQlJUJlG-URUTwdG0RSOIrPksTmEJtRiYdUmF1BYyKG4dmSM5t7uaR8NweJOnkmwzro0sshuhFsXEdVMQ7FAPj9EFqtvXV1gOaxrmEel+EaYdNGMY5ZataN0WTYtx3eaVgDSa2Z3iM1-breFeWGY92cBaw168IkAMXdE8iJClwIrfLcJaY6BqgSKnZhKoDbvO0nt9nEkOkTKDM8bhqKAKdEgSAIMwCBSatzRUBJ-0AgCiAbug2-btMLCsRgs7YXOXJ0-oe97gDy+QuSzbjvTeb15y7PztzUPPTzYkaUeC9leUv3Em6STZTu6DoCHxsa4EDZYdjOMSqDi5V0BQIuWwX-oiVb-WcD-PaUln70WEAMd+g9rLD1YDvPYkhX7-xJM-YgIUgzhQyCAykcR2AsEQXFKmEggHfjgUtUoKIDZGXBK-fwmJxx+lUCLGgkV8GKD1pPFhJJsHIKpsjZhrCWGjQvlDLe2p2FhVwZ+ZUgRi6k37vHfeyoqigCygAKmESghIiispKDEQQi+6dJo3wdqbBK-l4SSOIeUa8LAHb7UGkLcEDt4yhV7HpCePDeHXR0VDG+SCRFGPXgKExmhiTP32jrUhw1vHxVhI7Q8J0Ex+T8YabhvcoIBycDgvemo9pejdDghSGSD7ONAPtJOpJSb+zTp4xcUD4mXQCcSCJwktGOwkOWap6ktHvXLGE6sbThL7RiceGpYMoIuJJCk4kpNyaiEphkDxE0mqY2+hkNsSxco1gVAAKz5kQoSGYSK8F4Msre6yNnZW6cszauVar8PmcCS5RAv7WPOZke5EpCi61KWY0ASxRCcASBIEiFA5rPJWblXmcyr60F6v1RoVBNnbKZizDkryTnu0CcrfoqsAwN1Vu-HarVPCvJiaipQRLfCosIcybCrAfl-JOWcpZLzVkPOueWalLBaX-MBXNOFWylDYroIKII+guiGAtM4RmuRQCLE2qiJGRSvRsqMG2TgQKAWqp5fCpQp86DBFJF0XqhzVbEAJBkDIPFyykwFWQIIuhab00VrbRZtimVrN5Wiy1XyiXWPdakoOit0X8y+byv1FTbm0BqGkeojRcgBLtSSUmxysqvI0a0bwstwhQ1Wsyxi7qtCkgmV81anADlHKYLCzZ2UU1jShmSuQAKc3vNJpy9VarXngtAJDcNbwc00IEA2sF+bm2-K5Rq1tc120dvqga8NBwhgjCgF8CY6AZj-F0Qs5FJbDmZGOYlTaN59kItJmiF8Isi4ADJz3fJHUXWwd6e0HpLRCjOGYMTUjmnpUxuzi2lp3eW+aWU33YjoKyzN3agMEtBmhfNJJC27Jbdyw+z7JpXhvBBua+0j1fKTeh1NmHkMbp1DyIugadmlx-du9E-7EpZS5DyUDl8X2oaI+qWRuqv2lyTXR0QqatFjXXcCJpmDuMkbg6XBDY6F4EeBGaXJYlP2kZLiiCjZbmAAYaQpBjUMNNRI6QpsTKIJNqqMx+v+vMa3dp0zZfpDiTyic+fBm9iHEML341mjkvT7MJqLZu39VG1M0ZVtZSBK9fI0FqqAAAPpFvWKm-0BeMQooQ3AKCcDojeXpEXouxd85R3diWsomTzmFogDGBMRtC2PRpbGvNkZREJjgImTOHws5C0AvTom2aGdBxTw66XOck2Ztz3bmNBZsp57jSgbNHjiTQLDuyk1jZCz5KrqbJsKrVAM2bRBhttdZtyR8B4utOL-hx5TuXVOKQK8BI7M3HGlday+m7z5Xw8nfPk8RtWlPlAHmx7U63muuZuW157r8vt9dHW2wbCTzPSfMWhg7T5junhfNiN7WJkawLOzEf9gHEe3difd1NqO3wY6ULAuHGYiueYU9oAtDnyMXfi1dhJ2VqeVYLlp7t7OVu7xE-phnKJBGGDwPNKYj3Jo89Xq2En6PRbg+w+Wyx0z5oYAl01KXJXv5gQVwtpXIv5oAGZ1fAil22KgS4rLjZXrr0uo3MXBeK1Vlpk9NdVZYw5JJqxOAWOe8jl3PC3e71l0YDHnvXFB99GDoHYa9v2zMbPXxl1tnHqZ-5lntSFEGPFnPMgXO2v2Lu3ZgXdXaCA7M5T0cv1HpclMzD7Heyt2XYAw9I6W2icaGywBOL6eW-V7b4Y2E+eX2t9ms+U63Yfr19I4m-XKvEri+ByP-vY+XqwzeiX776DWAG8Smrpfk1R--S4IKrEwMoOEhDrPuIu-EvG8rxyaekcpYp58yqvzxypbZSfzxk3RUI43iD5xwv4wYfKl7Xr9Zjov5-5qw+xAGNAJyv6OZ0qIEH5NTRyJ6wiSCIFX5epQEWyBBoEyYchYyyA4xwTr7P4EFIGM6chdzxzUFEErQ7ghQxwSwIHUG4Hfocg6rjoME8y7Yvpoh3yMSb5b4975as4KIiHD6TQiHa6-zT4GZl5ObQ7J4wHMYiEMGxyCgN5JoyGaI54KSCGTRoi1jZhHCNiKiFgFwkZ06waC7MFYJcjcB1DmH1iWH5g2FrzJ5RYxbd4cjNg8BuF1i7CeFNjeHdaEhMEZiIKuGZgWG5heEtgnbT72H6DKGN4f7UYFZxEhGJFWFBF7CyGEZBHxHuFhFJEREpGni0707ebcHv55Y5FSFZRlH5EeFVHWE1ElHAgVENh6ana9aK437z6JaL4dBQzewYKhHji25C5z6i574wHYTTQJHYhzFiHX475jFSH36x5MY+43jOiT7BhFbI5KCxh1xRLI4SLDF65qZZQnFWjRAaJe7dDhrt4niXF8DXE2S3EmFNT9HhHdG7ztjPG2FiHPzAnHDvwwkfZ17J6pKp7OHBHrGVGFGRGpHJ56yXhHEdhdgvG9jMYiYwnhjvG9zHLTGsAVGbFDZLze4WIQnWgkm6g1ihE5jkmuIARUnGzol0kw6jLclpirG-T8n-Ix5dpx4EmWiQlDGIgon7LNEJatHMmvEwHnFF5RFhhcHiaqFqpSaTGWZ8BfHRAURKENF6mQFQ4GlDY6IzqQpzrDCfDjA-DTBoCG6MamHIrrSbSujSDza0FKjKi-KngBlgGeTSAMlpRHASDSDZTBl0Chlpp2SYitwlB4QUAgwJC9FOF4DAL+lNpfIACEeyvpW0cZeqUphxFiJkEgIe74mOP8dSjh2+EgWUfI5Mt44axOr2oeos5OzZGa5WGYnZ1CdZeAgZ52TRzeeA2UY5mQJkuZHxkKL2aO-Zkgk5Q6IxOxouc5oAi+naXpGunxYOW5mgW+wuKu+5++R5I55xtCQwEUYk55l5ixEg+59+d5UMzGVi2SY4VCuh9xnGuOf5aoqaAF0RRp0pYFngmGDeEh-6xSWeCe+0y5sFN4kFb08FwFhm+pGGXo4KBxeipAYoQYLwfadCz5b0j8F5pMiGKS353OfJeA65UgBQ25yB-yjF9Uz8+6fo2MdQvgVFCkOsOqIQI5zGrFbJWiyM+0dxW+p6GUslU2XohBTFbW0lPICJm565RZXFH5elwq1Zku65jsuluo+lpciGWlogVZx5180gVCmQwlT5kUKlG2mOIUN4tFmRSZLwm0MimSEid678-lvAgVVwgQuJoASlEgUlbFHlUVMsCo3lfaR86Y4VgVslGgAAPPQCoBFUsBIMlTFTGRlMmuKN7kQBcFcQpAMIwNKF2BkGyFlKAAANQRksLMApYvCbCug5UdUKLZRDUUn6A9WFi8D9UlXAKLwASpTcDpTtnvAfB4CiDzBOC-H1WgCNWdgMAtUKKjWuITV9V4ADVsYSKdWpptWdVjU7VrSTXTXJWAnAhiiSjSgInNJaItkkieKqDojihWC+XRhQxgKnhJWzXFwkxv68E5V3Xzj-VvVA2kVUDkVxiPn0JiSjR3VshaJ2D3otpw2uIUgtqlWuK41Zx8E5WkpjrPWpKpzRi2y+D43vz8WkHkGuWY06mKbRjlVBVfjZTEBKjkygDcasrRj+qMw80OjPy2U6zUm3hsXjKASkxg2GW6g6Xq08gyy2XmVa12WUoM0kgpyWkkKI2A3sXqCU4NKfXWLfUbY-X6B-UCAA21iW0Iqkig2U0Q0EJQ1BqNGw0XUZWeS+Cu3I1aSo2TWUVuVY3XQ407VsYs0QH-JE08IUjsqk3AKqW6rx1q2IbU1vC02zWG3G1dWkhM2qBJ1s2CXR1c1AXMJ83205REDC3jii26gVRVRWZ54l36CS1+3Ciy3rny0sVK0FD03+2lxq262yX6061mXyVz291HlG3gGh1I3u32lgAmROkLpjDfCTAzAoAOVOEnQUBmArggzdmQofnEBTlOFKmznEDZRn0X2UAgxlZQyv2X03jn0Wi562E9BWV4XWlzRAP2XYDPzf3v03g706zHJRhJqcqpokicrtxcnChJrcooP6DcroNClJpKU4OxWqrHCAQYNAS45bzENbz4OIO45og6qpqMNdyzgUOkhJobCMDiqpCppcM8NsMEO47lU4PlXkNCOPEWCbRcAKiMAaJSNLAyMDDRjsMkhJrtXEMkhxlKCpAaAOCgBlSdUXCgCqP6BJrlSaP6DaOgC6PyJlRVTGOmNtlZTlR5E4NlSkj6P6BVQeNONJrqJKDCjWO2P6NlSKI2P6B+O47ACWPozxk2N6OOBlRgCOMSONBZQACksTwTiTBjoAGTETJjaT7ZoVmjOTdjSdujxTWUxZd6ZT8TITSToAtT78VT9DjxuV2TDTuTZU+V+gbTDoSauVtglj5ToToAwz-TUTjx9gXTOjPToAjgUz1T9gIzgTpIYzTTqzyz7T6TxZsTeTnjSzzTJIAZUY7QUDKWb9WZsDnxsldgxI0inKSg0DNz19GchBkDmKsVVzP97zvovKqZICjzFQPQ8ihDvzMDqazW4DTjPz59fzO97QXz+wqsrzV9S2aCxySaUyMyOZSguLhYGQcLwpHDuOkARAlMDQvDgTFLVLOMJLpLZjuOCjLAsAkAODrL7LjLTLSarLAAosQwKzy6S0mgAHKcBiuxMStivB3CkXPfPouYUO42T3O2AgtWAkDyItokAyxKuW4kTkQKuovwvXMYsqusDyUPOkjSJav6OA68wvOQtvOYvIvaZ7V1D6sTnP2bW8Bbz31OAev1DCRTLcAuhR0bKcBCCDwpZkEB7tz6t-1JkKSAN30-F+vlovX-7GAyic3UWNABsyDOW135tuidgtz1nOtX1FYqV3U8L6tLY6Uis8LNxzFeufGAvkBcJMu9wNsWvmXNusLV1kFCUY35v8Z8U-IsB+twpuB5uiWgKlC5tjuRRuuWYeu31EDpvIzA2Ip2zj4IswP-NnF30e1b7OietVu3M30Uk9BKAUmCKYKxh62xg7vuK9xdAkBLDWTbrFD91OocgLnHu9jgN+3PzWqhJLLxuktFZnlpt1vMhFstwluRQIcg2fENlh5ANCmitK6YKRrpCZCvtujZARigCfvfsvAZBoe-WfHzsvmnsl0okYVRziA4pytzjfbRJYWNDWocdsiEtUzWz93S1813sKK5T5SFQrkvo4xZid2BsWi8NwLhC8WKsiBYu45KupqbN5NGPtAXv1kadKDYtUNUjAapri4mdmfvjCCppq4yz8UzupUqj0dhhBBAA","body":"function apply(fun, args, env) {\n  if (is_primitive_function(fun)) {\n      return apply_primitive_function(\n                 fun, \n                 list_of_arg_values(args, env));              // changed\n  } else if (is_compound_function(fun)) {\n      const result = evaluate(\n                         function_body(fun),\n                         extend_environment(\n                             function_parameters(fun),\n                             list_of_delayed_args(args, env), // changed\n                         function_environment(fun)));\n      return is_return_value(result)\n             ? return_value_content(result)\n             : undefined;\n  } else {\n      error(fun, \"unknown function type -- apply\");\n  }\n} "},{"body":"\n    The\n    functions\n    that process the arguments are just like\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list_of_values"},{"body":"\n    from section ","tag":"#text"},{"tag":"REF","body":"4.1.1","href":"/sicpjs/4.1.1"},{"body":",\n    except that\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list_of_delayed_args"},{"body":"\n    delays the arguments instead of evaluating them, and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list_of_arg_values"},{"body":"\n    uses\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"actual_value"},{"body":"\n    instead of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":":\n      ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":4,"eval":false,"body":"function list_of_arg_values(exps, env) {\t\n  return map(exp => actual_value(exp, env), exps);\n}\nfunction list_of_delayed_args(exps, env) {\t\n  return map(exp => delay_it(exp, env), exps);\n}"}]},{"tag":"TEXT","id":"#p8","child":[{"body":"\n    The other place we must change the evaluator is in the handling of\n    \n\tconditionals,\n      \n    where we must use\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"actual_value"},{"body":"\n    instead of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    to get the value of the predicate\n    expression before testing whether it is true or false:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":5,"eval":true,"prependLength":497,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQCZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMfeMAHcqFABahWNACZUCVMgENqdRgRpNQAG0UAvAJ6gApgDdFWostolBoRWTIbZJAOagKNDnETJ0WDLjE5CokxmYWykYAFI6sAA50RiQUADTGJCYAlKAA3tigBUxGFERMoVT0APpaokZM5jFsCSRJFJn5BZ1dAPzatfValeFE0bHNre1dU6AAXKAVlSSKrKNNicmT0529WjQ0ANZEcZX0+qwARjSDw9GnF1eVNASLy6vx621pSVkdW7PzVUUcTiNSUIUa7xaG1+W16QJB+ii9hK5iG5hGUSClGslSMAA84kV6PRrBDxhsvhlMikYX9poomC5cQSiSTVGSPtT0j86f8FjQ4nVlBpKrFzlQluCxpzaVNeqZ0ZEogKhR4mKK2OLJTiPJV4aCrHQOVDPtzNn85gtHCRZCEGtKTebYWFUdbbdZ7WsTZSeXTLVUdBdpIpmYSjMTSQ6JrKepJFPsjJUseDA+dg5U4gzXhQ6iczpctPRjRMabyy1NU+nLtJEVGKWaY51-ScjABHEbkN7ktqNgry8It9tJMi3NsdkcnCiRFbJIt103fJ3TZvnXZkfbF6G8-uo1c0deb1IN3nNoolMqT6etQ9LuUuwZn0okS85mcUQ8+29dZvJnHSIxkDo9RSl60bbvelg5pipDYnQlT-oBlS6ta9BTsk8EAVoN6fr2fJVAhQGGiQN64TugwEVmIGQq0OEngCeoRi4JBviR4EKoMiiMcx17zrRfrGEwLBMB+oAAESkPsJA0EIoSnMkih4qAAC0SkQZEomZAA3NgAC+gQwSEdiUJY1zotE+JxJ+uQdI+ZSEBoE6iFE7GQeZBKflpun6cE1h9KhjzPAyTI3EWFn0FZOQAJA2cUT5xnEzkEqAAC8AB8RkoqZFhuZZZpfAS9CeXpv50H5FABRhOj6EY0h6oyoUFRF0WFLFdmsECiVxCl6X-lVlRORZn75XEhXaXp2AlaE+qIkEaRBeFZrWQUcigFECyElQrCiFQJiJpN0EkJk2R5NMtlTcCWj6BmTCbdtu1JgZpK4Vss2gM90w1P5Tx1cFZlFvNHmaeWBT4GQYiKK4NUdDpxiFkY8wEKtVprKQtX7UER1LVMKEUKARJEFouPJWpUHvcDk2VNWM2kNSZPlviOY2riGRUCw3HJFEdPAwUFOZvUKw5kwRYY6W3Pc595Xfb1ijVbV81IvVQ2gKD4OQ9IXO8hT3ys3QLEY0d2mna15RVGdaLZVE+OE1+0y9GbNwask15Wz2wNzKjRjyC00iG6AMNGHDWNdHUQkHWk4kkJJ0mhJN7j6IKymqdNGm+3p42x+xg7jrcFCsBQC2LkHCNI1URjxBQV30GOw453nhXHY2Z2gB7Xs1b7BT+4HK1rQGnHlahV4c6hdeYydWxNy5SryEL-dTq+17D-nXKLu3fuw1XRddDjhCs-5i-myMKVvfTwxT7vs+D++i+FZ+q9dN3Cz22ZmLn5OecH0Yo-vU30977n5U3Dvp0TuG8x68gngOKuQ5OyW3DBfees4ojX2XlSIBHcYRp28rBWSShnw0CIOVCiwFrBzlAhsIuTcFhQOzqxcC9gyBEFYATJU8IkjSFFmLLYJACZaA4ZwqY7UEr0FwY8AhGFAKURIXw-hWxqE1xfGXVopDqIbCOs9ZsRCiK0LpDsCo75NEhDzPcLC841FljmNwrQWgxpYMMpnPcB5eKLTAaAbeVMj4OP2JTGQtYyFtFXtvNc5hGDE2ERDURhDMKSPZFTTyW9VC41IJxEkTEaohLKhVJJXEapRCCYWOJnQIGKiglTfKjNarazZixPJ4UNYyLLFklJ3sFp1PqXSRcRUJqPVKhLTJSxsnSCQfmK4hUKHG3ikM4x3UxIACpGlUFSdIGZok0h3ALKNLyXSfKlUzmbAeCD3xOMLi4pu7UEyVCfhbSeUEzYWVZJGPxtM2kyI6TYrZ2D7wMSaSxI5VIi7bxuEfa50RkkLPZgAsyoZ7lGlMdI55ZpV6gqYkYgsH8kRcTfCiq42FQA3FvjCJugDNkZwHAYh5KijzHJhEi58ayHg3E5n8MlcE6UmMeWkRswKojMufA7O54Y2TEVhXlTlqCCXjJbhKNuxLukm1xKfHMtVxASWVOcAAVg3LolCqhThcC4Gq1Q9GqrVeHYFSqxASRTl5WOyrI5orNUhC1kdjrH0KeMsQRhFCDKnFQLCDrbX7ANjK7ZMcHKJicjQdVmrOgPx1U6jckaNXRumNvF2R9kQmTRQG0MxquTZu+Lmgp0wq7lQ9V641pqFUGoDVav4JbKhlu9YoX1ua0guy0iDMARQQT2HhhZUAIhxDzHzrisyjZ60+qwpO1toBLFaA7Z0fA6hGTFGbiQFoNUarckbuMl2mlmrAPXvDWN8rinVvjYWzebrzyhGzQyxNRa14B1ATum9oBE2r0we8wy0sroDXcs4g9LU30SyiKJGtw18XFVlfRANubchdHFW+hYur9W1VA4m8ONbOk2vjTmgNLqm6NqiNOgjHb04wfzRkEj8bCPus9U2ltpHaMGz9rgJdsq1AsHYFAbw3B0D8ACN+3yKHFB6oNaBpx4hEy6uTXjcZ61m3CVMaAAAZKp0AxGVPJR0+4D1SExNvNjgsGogtPQUrk9qgz4n0NGqcaJUzQotBWugyGvoZmsoYhUzkRDWr6PlunaYzpwnSpnMTI5gYUQbiWfGaBhz-RzArNHdlYLxmqhLBWDeMZyGdVibQ4a1CIlRIZaMC52xvkwsvEy6ymLIGjXFdeElmrRmYOsoqiVrLJz-OMbZRZ1LMGFg0p+Y87LcVRM2YK4cvx4chutDK7HWb6FWWdaQ3FYj071vNt692I6QbXMfMWxC7KUKBXkp26Nuym2mNbZvHt8rpUFg8pW35nL1n8uSem2JHGENIkSOIXQDSoAAA+QPnrjfe3Zz7okzA3UUKuRMPLAcg7B7libH2KXhwpoj-rbmeVYu25yC7slhmDG+h1q7BPHR3djnjvlLJTswpG11t9FOSM3aCzjj5lXvvoSeyVtIdOwwRjoLVuKcWee-cIiEJL-PksjBO8Lw6LW3MmeWGmEM-LFfPevWN1HEPCv2crBr+niv5swaNxmLMAtcysuUed5ncVBGTNRWT14aRWcc5sbHC3VNtfAbWwxtn12W2e+DVz+M4W1fpk14KqIfNsx1AWrEonZUwMW5j9YJL8frdCzSLE5XHyFhY6if9oVTPIq+Z13ZcHEnIcY7EsXv7REzducb1LnEHXvOrbsr0ooBARK8BwzBtv0TnzZ+KInv38m6v+T7yJDAQ-W+yvEe3uCvuu8vbF3oi5nsRIAGZF8fLb0hGgjsB688wlP05Eez9oUl6Pxl3MR+l6q12TkcK6SVfTyb2PrTCDL7x3H0Fjt3fz-2fyIm8RrFu050MkfmNgUWGwsyDis1Q1rwNyhz2TnkUWSBbw+VuR-zO0JzASI0D0C0eRgJEyqDdG2joHM3t27zlVQNs3QPr1EmoLtEGAzwB2yGRzLBr2YKm1YPYI9EGH2WwIoFwMMmENoMGDDFkDBDf0dGQNi23znycUHy9xg2kKWEGBQmrg5g339x71UN3ycQX00Lc20NRHMEFm1F2j9ybl71MM+wPwL1gKqDkRgUXmTRQLyzQKvn-nDk8JHEkN8mCMTDELfCLG8IQwKF+BIICxu28MP0Ml-ngXEKQX-lGWIO60yJHgsLwLgQQKUTyKXmULfWnWQQKPcNxHLkrn0JHFKOyPiIU3Sx4SaJSMoOqD7mKKHiyJ8NaMWHaMqP6IoIeyqE8Sv0GKYMmyK08VCNKk8UgN8SQId0u1IPZ3IOqIqxv0mMiImBTzi3mNWSwLfDGLlRVGAhFDFAlC0W8wr06AYPoiSSYCukuOFHVBuO1EZyQN4N5AWC1AZDeMFCuM+M1FuKoh222PGMqBeOBNVGuPBO+LL1WIeLiM32rz138KKzhMeBBI+I1AuAhMz06JhMBNeLxIRLBKJORM6zRNdSMMYL8IELmNuIpPeLVEJMBOl1JNCA5JFGW0MMZIyTUM+w0OtWH1fneJtCmJn3KlFPr3MIlLcyrjdEpPqBlKFOny31n2cPr1cLD0Mkq31AUC0S1gILoDmkZEYVaAV0FWaIxNCDixNLBEzw-zpHNKF0FStJcBtPQi4IYHOPfXxM5K+IgN1BdLuKZxhG3n5M0GJjjPxxvFXis1xMTLDMhJlDLF6GNIulNPBEqw6zjKeXhS2FAzSPVIhkGQ53UTjHOUjILJvyLJDI0BLNLIrCNQrOlOrPZT-04VVLoFqm7OgLcK6IbMIKUJyNexmPR27BmzzNdO4OhJjmXwDIcNyLIL62XLsEZDtJIXXJZw2OD0pwmDu1sEmi4zYC8C4F8D4DQD33u0YKYAITEERDxFF0xO8SuE9WInfIZL+F6DxFrJDg0CiDxHDkuG-IhmMAJAAkVTbQAiMB2hqgWLlQIGCTfLozfQAEJYNnzxBMKgYKM3NKt9ogDE888fEIonjxcUYmZJos8rcJ9c9QBSkEVlTC8qC6K0ZZVMQPymS0dOzw5pRUYHoQ1UL-8Q1Ld+ZmLhYsKdT5Td8CA0gNC2MQsVypLfcCB5LjDdT+9lLQBzC1LY4tYWYqlrxtKENHCTD9K0hXDjKYNKtLkvM6BGY2hDj6tnLSs0hrQ3LeT6IvKoszJ+LYNmTZi8UxIvKJKvLHY3KgqUsU9WdosgzhxdgSRXBmYTAdZwVnI-kfMm5p0V4HLW9X4CAZLcqsgrLciirxpt5pNai4gK5Mrsq3wj451tJ1K6y9pyrbcBc-odLQhMxWZncRk+rspRpiqj8ZL8dhYZKBrNNA8yrXhyNHzmBXgP5ZrlqqqKibslqVgVrOqGY2FmrzKh4ScFpwgk9OJEwqVHTtAkgXBxARr8kUpdMtAHqnrLqbZthQAhrhJSKerzqxqb5WLrrMrvqCg5h3rXAnrbdsgAAee6mGsQeKwqZ6eUQSUC8DPYOMEgQwIKP0kdegI4EEKgGqOYUSUAAAan-LFlQhulcDkERDhuprEnDlZr-3polBcCZtRrMTohAuEmxs8AICMCEB3N9KiNAGJrzPJrEg5vqS5sZoIGZvOuyBpqS0ppps5ooAZp5pVr5qDN2AOCOHxzRVZWoq6AzgyGqD2ASlupela1wWeouuCTkz+CsznRdohp0W5FtoFFysAhoHSqZEqV1mvA6T-zmFZVeuJmIzhr-16GIy+qjuludsqLVrSGnS+sfS6D0j+G7m+Fjr0xurqJOvDvIRcT+EFuevDlIEuFRlnUa1zsPWfXhirq2G3j2vhmJgrO7oqpbqNjfTCWIm7pmsxDmrSDHpCgnuWsHrYzzqeO+H9vtrFWIoOy4jNoZQtuS0ts6GtpMBXoHqvR5idohhduBvdvHkGK9oTvqXlBtuNtXqDpDvLpysjvqWjpJ2LvjrVsTuluKAbUD0urGp9otDTvPozuMRBuzrdvnphkbELoyGLvqrLkaqujDvBSvumBrp3ojgbptCbpWETjsAxTm3gaPRPuxgSTWuId7tKvKpXm-nGRHtnpWHHu7q5Gnr+jYc-ngYwSXsfrtoHreQ4xDUvJ404B8B4H4BQFWvWhui2moHunRhphT34NmNelEg2iUeQrK06p0bunDXiHerfDNLUfyo3N2ppgOu3kMeUb2k4yPlAxjDi0bSS06EbWBjbK6Di0nQ8YKEnW8Y-ziz+oCd+qU2CdcfqwlnCYliibLPqwWDnSS2SZ4V5B8c6Di1kHoB7X0CSxybyYyZCfq0FoCcFvLEyYKDi3anED1HOHoBWVqbEHqcYD+CqdT1EipvCc6DArSH0GyDSlAEUhpsMFAA6biyUh6YKD6dAAGemUUlUjGYmfqyUjhICcUi6CGYKFUk2ZWcK1EmWTSGmFmfmaGcUhmTmYKH2ffFEmAGmdWnArmcGfSkUjAGWZKYOYAFIHnTmXnhnQAvmrnxnPnbmdNkoem-mFni6BnQWwNsKdNIWnmznXnQAEXiZYXomDn4bfnkX-nFJEaChMXEnsWIXjmugoXznQB4biZnm4XRJUpcX+n8XQB0oiWbmwNUoyWTm8XoWuX2X6XsKHmAWtm2W0XOh3yYxPI7HFGjGxLsEZqUoYQndG00h7HkL5WQgNkZXboHHNWcRE04KQllWOoghplQnZWHGktWd9YOnfrLWNWLzPJsAdXdH7oJd0lQM4tJVvYksfWao7X2zOnIASAvZRB8njmQ2w2K5A32yanlAWnYBIAAnmnKgk3Y3Sz426mABRcJ1N7NjN+FOLAAOUUGLYedLeLbAbaWlZofVfdYSR+0VeShNYSjIGmS0y5HrcTA9drYYFxm7dvybZCiVa6Cd3baGY9yOjVYdYbf7Z+w2U6ummul1cdd4teiCglhCuXYlFhJtDqEum5sqDVUUDMGERukasf2BkHc2hBHEPMcOh9K3dHNKhLVNswZYhCqOqZg-evFYRlMHYpl6r7P4UHYlxmsLZkX-cGUA+X0NcoBaSDfLDA8bfQhCkg-4VQbLt-Y2DeTqv0xcF2HOFRBw6JgAZKGOFI6iGdZJVdEHJoJ0JEmOQPRQPwtfKRGMlRAZSsNkKKHkKVGFQ-oApJlWBtAY7o4YH0MEJ2z4i2DmC5R471EJjqDsMUJLHYtqpodYCujVLuSPj5irjA11sPl6F4H+AwE0itUzh46iG08dgqRZCzv0zQaatI60iAA","body":"function eval_conditional(component, env) {\t\n  return is_truthy(actual_value(conditional_predicate(component), env))\n         ? evaluate(conditional_consequent(component), env)\n         : evaluate(conditional_alternative(component), env);\n} "}]},{"tag":"TEXT","id":"#p9","child":[{"body":"\n    Finally, we must change the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"driver_loop"},{"body":"function\n    (from section ","tag":"#text"},{"tag":"REF","body":"4.1.4","href":"/sicpjs/4.1.4"},{"body":") to use\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"actual_value"},{"body":"\n    instead of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":",\n      \n    so that if a delayed value is propagated back to the\n    \n\tread-evaluate-print loop,\n      \n    it will be forced before being printed.\n    We also change the prompts to indicate that\n    this is the lazy evaluator:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":6,"eval":true,"prependLength":523,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQCZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMfeMAHcqFABahWNACZUCVMgENqdRgRpNQAG0UAvAJ6gApgDdFWostolBoRWTIbZJAOagKNDnETJ0WDLjE5CokxmYWykYAFI6sAA50RiQUADTGJCYAlKAA3tigBUxGFERMoVT0APpaokZM5jFsCSRJFJn5BZ1dAPzatfValeFE0bHNre1dU6AAXKAVlSSKrKNNicmT0529WjQ0ANZEcZX0+qwARjSDw9GnF1eVNASLy6vx621pSVkdW7PzVUUcTiNSUIUa7xaG1+W16QJB+ii9hK5iG5hGUSClGslSMAA84kV6PRrBDxhsvhlMikYX9poomC5cQSiSTVGSPtT0j86f8FjQ4nVlBpKrFzlQluCxpzaVNeqZ0ZEogKhR4mKK2OLJTiPJV4aCrHQOVDPtzNn85gtHCRZCEGtKTebYWFUdbbdZ7WsTZSeXTLVUdBdpIpmYSjMTSQ6JrKepJFPsjJUseDA+dg5U4gzXhQ6iczpctPRjRMabyy1NU+nLtJEVGKWaY51-ScjABHEbkN7ktqNgry8It9tJMi3NsdkcnCiRFbJIt103fJ3TZvnXZkfbF6G8-uo1c0deb1IN3nNoolMqT6etQ9LuUuwZn0okS85mcUQ8+29dZvJnHSIxkDo9RSl60bbvelg5pipDYnQlT-oBlS6ta9BTsk8EAVoN6fr2fJVAhQGGiQN64TugwEVmIGQq0OEngCeoRi4JBviR4EKoMiiMcx17zrRfrGEwLBMB+oAAESkPsJA0EIoSnMkih4qAAC0SkQZEomZAA3NgAC+gQwSEdiUJY1zotE+JxJ+uQdI+ZSEBoE6iFE7GQeZBKflpun6cE1h9KhjzPAyTI3EWFn0FZOQAJA2cUT5xnEzkEqAAC8AB8RkoqZFhuZZZpfAS9CeXpv50H5FABRhOj6EY0h6oyoUFRF0WFLFdmsECiVxCl6X-lVlRORZn75XEhXaXp2AlaE+qIkEaRBeFZrWQUcigFECyElQrCiFQJiJpN0EkJk2R5NMtlTcCWj6BmTCbdtu1JgZpK4Vss2gM90w1P5Tx1cFZlFvNHmaeWBT4GQYiKK4NUdDpxiFkY8wEKtVprKQtX7UER1LVMKEUKARJEFouPJWpUHvcDk2VNWM2kNSZPlviOY2riGRUCw3HJFEdPAwUFOZvUKw5kwRYY6W3Pc595Xfb1ijVbV81IvVQ2gKD4OQ9IXO8hT3ys3QLEY0d2mna15RVGdaLZVE+OE1+0y9GbNwask15Wz2wNzKjRjyC00iG6AMNGHDWNdHUQkHWk4kkJJ0mhJN7j6IKymqdNGm+3p42x+xjvunQnrUckTUxeeJtIUwRDiIiyImebGJuttOeDGGshgl2nIeb2ZGuY0Np10sgwoWOPGgfWi69nMLlKrXdocYTdTart2FmmN3mwaEmf0APnZRKhrAUAti5BwjSNVEY8QUFd69Dpv2+75jJ1bGdoAe17NW+wU-uByta0Bpx5WoVeHPX0KsdRsD9x5QXkELX+U5XzXkAVyRcr8-aw3XgfLoONCCs38tfau8NibvTAdECBWDoEn1gRQHehVPyIK6J-BY9szKYkwVAneODb7vQfkQ5h5UbjUM6O-FBd9eSgIHBfcc0QiRQP-rvLe5Cb5UMbHpLoadl6GXoEoZ8NAy4YUApRawc4h5tAPg-BYojhwt0dM9OEDgiCsAJkqeESRpCizFlsEgBMtDOJcVMdqCU1EQ0eFoiiwE9GeK8VsUxnYXykNnDeI6z1mxBKIqxcCEsoiJJCHme4WF5xxLLHMNxWgtBLwmo9Uqmc9wHl4otQRoB0FUxSqACp+xKYyFrAYzyaDVC4zXOYRgxM-EaMCZhXR7IqYdM6Og0gnESRMRqn0sqFUplcRqlEHphZxktSLiTaIVN8qM1qtrNmLE1nhQ1mEssSyZnewWmc85dJFxFRKT5UqEtFlLGWdILe+YriFSMcbeKXysndTEgAKkuVQWZ0gQWiTSHcAso0vJPJXveSoZs-4wI5lU-eNSH7tQTKi42ODnLDCVGbCyrJIztNCXc4GDzikZwHNMiF7N3xYqpAfdBNwGkEKRFxN8ODQwUqNDk6lNKEEwiZUxTJBYiWSpZdKq4C8bjyK6A-HhiKGWonSZSvOR5sUSq4gqrKGJGzargnCxVIq3p-B5Wa58DtyXhjZMRK1i5RWLxhA-J+EoX4atKcXAhtVxASWVOcAAVsA1V-yFhThcC4Gq1QKjvhoOG8OgakJiAkinLysdg2RyJemvN+xjrWs6A-MQRhFCfKnFQLChbM2RwNn655McHKJicimiNB9aFVCLaGiNkatjoJdg0yuqIbhRCLaGftXIp3fBnRsqY69yoVqrf2tNJKcxBobfsbNfxl2VFXdWxQtaZ1pBdlpEGYAiggnsPDCyoARDiHmLvUANxGwHprVhL9Z7QAFK0Jezo+B1CMmKI-EgLQao1W5CA-5LtNLNT4cg+GPbcSboTX2ztbC-gPynROrDiD+HwxqVGrZnbCPNuRdLK6A13LVMQ5suKqTRJFphcYOj4rir+voph8NJbOieujb2xQcaE2pM7eHVjjzc07unUWkt5bK3HtPfJy96duNzoyJOndCn-lHsnSe79hntMSSOmp3AwH-VqBYOwKA3huDoH4AEJFhkY0ifjbVVJVTxCJljYOxjdl1onuEjk0AAAyMLoB9OheSrF9wFakIifpdxhYNRBa527P5vGQnEuic80mkSok0tCi0NmrjLa+jpeNeYiYuQuiCa2fpn9OTHkud8nixMxWBhRBuFlh+zGuvmDY715LFWFhLBWDeP5Wy3N5cTahQrE2jBlZUe1+MiYluAoLH1-5zGltsYtQB0byLDsVU26FnFemlMGdPS147rnAR8sHrqnbM3hNza8wY8Ocq3wrdjj91oRqpuXca9dn9TXjMtabeV5FAP0IOpZE6nVmXptxQhypyH7ToerdKgsO1wOGtxVmx5+brKvtiRxhDcqdqNKgAAD50+esTsTBWqmiTMDdRQq5Ew0+yAzpn72Sefd1eHCmvP7u+TtUDi7hO7Kne+pt9H2SsfSe41LhHYYIzCvaajuySubvK5e9jtrpUOuOz-uhfHS20ga6FYdXXoRmOU8t8M4JdA2PW7fWZQVSO6Ctdjql5YaYQyOq1y6nXIOieC5ZwttnlYQ+I7D397j8eMxZgFrmQ7+iXsO4BfL54nv9dQ6XrHVPVMCekbR2D4zzWVcS9N+t6oQf0yh+dVEPm2Y6gLTGbngbzeE+a+dWxjvGehZpDGfX4uYvXdJIu5FerlfAvR-y7H8nolp86LdyQZPFWN+EQyediPsvHdJoJQQESvBVe7-9do-fOIR-FC7xXstu3T9FHP1UjAV-kV75Gc+cvMui+J+-k7+IkAAzN-oZHvkhDQObmhNTphM-gFqEGbs7ggZvkklzL-lvi8JNiKlzGbqnq3k9OctgURGnvzI-kLNhLcoQDflLgAXXpRg9gSkXFEixIAcgTxu5jHmTiLmJGiiQr9pAb5GSonm3pwdlqDmurXkbpPvRJPB6IbijpHkvrlkLqzmvoofXD7knnzozmWMzivnwd2OHNob3Owa0DvsiuYaiI3AoBPEfi-lsq8qAVUpfiXtxrYX3KoBvCYZyEHP1m-p7CJF-p4RVt4XqDPGUFYPPJIUESASEVUhAfISYhvCODIjvP5sYsvqTpkUeKJBEiONYaoukYmOitEtItfPxqWlIVXjIcZtUSIaVJwpYQArIr8oIopmunAuEcihIm0VUR0dkf8j+r0TmilsfKfOfGUfkZ0b8DkYsO4nMc0cXDoMQlIisYETlv+gbisf7pMZTGuBuJIXUWobGhoavvwaJE0iUb5E0i0jWEgWcaEEXljn0YZGbk0jIlIq9kxgVjcccQdkIRMKkVUCqMBCKGKBKLPhHvPgJkAfRFMkwFdBCcKOqNCdqNrjnvzoYVUFqAyKiYKJCRiZqDCVRJlh8b5AsMiUSaqFCWSVieHjnlFAvs4VHuobwYVrSY8MSeiRqBcOSdYHcbjviTCSibyfSaSYKUycDvCQUMftwR9podcQSRKWiWqAKQSSECKaEBqSKIds8QkeVG4eTh4RMbvkwpKfUDaEaa-okR-uTmERaSdgBHQLVGibaaccaWfuAQcRVmbvqA4eCFrOIdYHNIyDYoDsQaoH8XZMxkGWCMKe6n8KGYPuGXYJGfyjGQwP6civqdKdqTqLAYmbCSyTCOggWQ0gWdLu0ogosTyTWZiWWZlpYnGPiqWeCGbptgWbTDSnSKkq0Z6Z8lDvEu2YmJ2aSN2a8MqHyWqH2f2VsIOVacOTQYueWOvG6NaRDCOUwepmNoCBdMGcjgEV0TlhcVyWzpOe7qsXQS2roRIU4VwW8XIS6YZEFA+Xokgd0cpkZrdnuRZmAJNNZmwF4FwL4HwGgGATjsXBQKXOXFEHiHGcXJcFcJWsREhbUX8L0HiGOSHBoIheHKhVoOhexoKJQDVOegBEYDtDVLqfRAQL0oiJhTkC8aAAAIQ8bwViDMXmYm4oGN77QP6Czd6tIRSKlO4oxMyTTD7p5UGiU1jyIw4sHSiowPQtqYjIVKmXHvgEBmFSVoz+r0W8xyUiWaV1Y+mgF6WgAeF+wwV3kryPEzS6YuHBHn7WVhF2X8UOUZKHK6zXgEAuX-EOmYhpApFeWxxm70IWzWiMyGKqHAHviiTRUjBsaxWglvnUmmyEoTq9a55GF5HKoCE5VmT0UpWJjpUcx5UJVRbV6nq9Z5mGTDi7AkiuDMwmA6wsrOTsqsW4bGYIIRXcatEECUHdVZAWVXZroDXjToI+a4jTHtWdVvgNL-raTeVm4jUzlZ425-RBV2SZisxbY-I7XZSjSDW76UFGrCyUF7WvHXabUrB8WxwPWJghSYg3UTVbI-ovVPXcYMyOKLVHKwLfKFgnXd6cSJj6qIkkWuDiBHXrIpRxYw0uBw3hCFRtkHXCQbWjXbVe7rLj4Q3tU2xNjaBJAo1iDw2-IAA8pNsNFNaNxNfYAkocLGewcYJAhgQUUZs4oA9ARwIIVANUcwokoAAA1FhWLKhDdK4HIIiFntkOLWxiLeLbQVLRKC4LLT1r0rknRPhcJKzZ4AQEYEIJmS4Nza+nzUeULWJGLRLdzGrTLQQHLSDb8oreHLbarXBerZrQzY1b5LsAcEcEakSoduJV0BnBkNUHsAlFDS9NxgMpTWDVljhjscsfLbQfKJHQHTHeQC1erYDf5RzA8rQXMIdojcTPpunecr0PpgzSXbzeonsfLWkD+r7bwm-I2J-N8OXfFpDQtX5SysnVsHrfDeHKQJcKjH+q8HulsERqgkOl0swK8A0sNaNeKuWA-AnS9Vde9a8FyNvW9T9YukojCIouyXZN8FHQKGNX7aVHKsHROqHXjWHZ0BHSYFfTneNSRq-fHY3bjQzfPUbG9ksYUpTYzXSJne-dnd1YBDQK1UyAPSxMXecqXSDT3ZXS7eA9hbzcUIetdmjSdVg1sKXY3WMZgy3cZm3QonbctIjGNT3XNSfHEGfAXYPYA1MCPU-RHBPTaFPSsInHYE9skDPdMHPd-dMOgi9SvVaS9Tfe3VMJvY3dvVnrvY9WkAfX9Ko0YE2n8GfR3YiZfdA5xoBT5XoswKBXZuBTwPwCgPZetDdFtNQPdOjDTPlbkYOaQOHBtI47RStt5d43dO2vECRW+EkhjJ9fUb+QdAbF5eggE043tFZg0qkjGMxkemxp0EesDAuRWACV+hkwUF+tk6KsxpjQU6AJjcU6kwCRLOUxLFU0uQCeNu4mxs04UryDk10MxrIPQLevoGxj030x0yUwCXrQU3reWJ050Mxu1OIHqOcPQDCrM2IPM4wH8FMwUMxqLeU50IRaAPoNkGlKAIpOLYYKABs2VFEKJEpDswUHswc8CopKpGcxc8xkpLSQU4pF0EcwUKpF868wCdCmkNMPc4c+lIpCCvswUACwtqJMALc6tHiGkA80c4pGAC8yM7CwAKQIuguPOgBYtQvnOYtJWxbJQ7N4uos90HMktXPsWxYUtIv7NgvHMcVxY0vVOwtU24tMsovgugA00FAcuNNcvkvAtdCUv8tU3EzMu0uiSpQ8vIssuKTpRCswtJWpRisgu8vKugCatqtyvsUIusvfOqscWdBIUxieRxMOOBPqWOVZ4pQwg+JRBHppDxO0X2shAIo2u3QJNes4idoASvrJTOsdRBDAqlO2sJNsb676wXMVPRuevAWeTYC+s+P3RoHzKpLMberexsZ5s1QJvrmXOiSQAkBeyiD9PAvluVtnzFvrkzPKArOwCQAFPLOVCtsNuLlNtzMACi5THbfb3b-ZzGAAcooGOwixO2O0Q+cta4vR65m10lTldU610C62QMCtFlyEuxVSu7OAuwwLjHu3AauyFOu50Ju9u3VdkkdO60m8u8e1Tgit5dNNdH68m-6mHKbRLFpe+xKJUB7EwJdPnWGooGYGojdMw5zGLKe5tCCJUWEzTBGS4H+-IcukHYg9eFpf9UzNhxzA4raaexTNtbQWEqe2gVdSO2EkR58iRzfkG5QDciW+WJRwe9wrtSmTSow-3SzEDRsMUrNQlmhymqiAR0TDgyUMcBJ1EKm7mrAQ7S4P2sG1pcjO8GpftEx67OBKJFTapTaEpJNAq2OfY5+849+9p+A70Hp3u0Z-6iZ3kvRJjSp5QNZ2JAANrK3uCKde2uCuvXZWcK1iThxnLi26hKd7FBe22iQAC6okY5SnmtVn8hRA686oG0HMhITQUC0tLgaQVnB8gzVUVzKkZX5XFXlXVXNz3HBQ2Xp8k4eXMXAAOtvrbRF358p4V4ra1347HGl7mEUGuvV8w41+rVpSN++JN2N64K1ughKHEFopNw0qJAADJKQELzAkCLcUDC3aSVllw7fXQ5crfrebc3B7f2XSA3S7TqhGM9UVmL0LdlwNIDfqhDefLPflSTeLqoa7FffYZbDFcyylcqQkwaDuB1BbSSjQZldK0iNIIBwCKmoVB9Og-VcY8Y8woaxffHenwtdtfi1fcE8I+dLHuJs0AuD8wNJ8zrxrTbdlzH0TKL0nINIDIBLoF37sjZdU-LBM8FCTLvJXJzLJOn7fTgqQqrL7ja3yM2uU-8ztXcp4j7KsPHLS+g3gZypzIqoL3k+aIUA7ejrGTjoMI8-8wPvy-LBE3yNvcfscz69HeTcFeHeM-yMPzXe0V3fR3t4sC8+sDW+n2Ioe+3cf3aaJiifnDif8eF1tBrX4BnfoZbc7czC2C5oSmTaKDj63V2A90AAMoAvQvA-w5wQMek8fG3ifF3tghb6stgCfioOYSfZcKf+AcFV0k2ufaQ+m-6Ta5f53ZkLfYAvAQAA","body":"const input_prompt = \"L-evaluate input: \";\nconst output_prompt = \"L-evaluate value: \";\n\nfunction driver_loop(env) {\n  const input = user_read(input_prompt);\n  if (is_null(input)) {\n      display(\"evaluator terminated\");\n  } else {\n      const program = parse(input);\n      const locals = scan_out_declarations(program);\n      const unassigneds = list_of_unassigned(locals);\n      const program_env = extend_environment(locals, unassigneds, env);\n      const output = actual_value(program, program_env);\n      user_print(output_prompt, output);\n      return driver_loop(program_env);\n  }\n} "}]},{"tag":"TEXT","id":"#p10","child":[{"body":"\n    With these changes made, we can start the evaluator and test it.  The\n    successful evaluation of the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"try_me"},{"body":"\n    expression\n    discussed in section ","tag":"#text"},{"tag":"REF","body":"4.2.1","href":"/sicpjs/4.2.1"},{"body":" indicates\n    that the interpreter is performing lazy evaluation:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":7,"eval":true,"prependLength":543,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQCZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMfeMAHcqFABahWNACZUCVMgENqdRgRpNQAG0UAvAJ6gApgDdFWostolBoRWTIbZJAOagKNDnETJ0WDLjE5CokxmYWykYAFI6sAA50RiQUADTGJCYAlKAA3tigBUxGFERMoVT0APpaokZM5jFsCSRJFJn5BZ1dAPzatfValeFE0bHNre1dU6AAXKAVlSSKrKNNicmT0529WjQ0ANZEcZX0+qwARjSDw9GnF1eVNASLy6vx621pSVkdW7PzVUUcTiNSUIUa7xaG1+W16QJB+ii9hK5iG5hGUSClGslSMAA84kV6PRrBDxhsvhlMikYX9poomC5cQSiSTVGSPtT0j86f8FjQ4nVlBpKrFzlQluCxpzaVNeqZ0ZEogKhR4mKK2OLJTiPJV4aCrHQOVDPtzNn85gtHCRZCEGtKTebYWFUdbbdZ7WsTZSeXTLVUdBdpIpmYSjMTSQ6JrKepJFPsjJUseDA+dg5U4gzXhQ6iczpctPRjRMabyy1NU+nLtJEVGKWaY51-ScjABHEbkN7ktqNgry8It9tJMi3NsdkcnCiRFbJIt103fJ3TZvnXZkfbF6G8-uo1c0deb1IN3nNoolMqT6etQ9LuUuwZn0okS85mcUQ8+29dZvJnHSIxkDo9RSl60bbvelg5pipDYnQlT-oBlS6ta9BTsk8EAVoN6fr2fJVAhQGGiQN64TugwEVmIGQq0OEngCeoRi4JBviR4EKoMiiMcx17zrRfrGEwLBMB+oAAESkPsJA0EIoSnMkih4qAAC0SkQZEomZAA3NgAC+gQwSEdiUJY1zotE+JxJ+uQdI+ZSEBoE6iFE7GQeZBKflpun6cE1h9KhjzPAyTI3EWFn0FZOQAJA2cUT5xnEzkEqAAC8AB8RkoqZFhuZZZpfAS9CeXpv50H5FABRhOj6EY0h6oyoUFRF0WFLFdmsECiVxCl6X-lVlRORZn75XEhXaXp2AlaE+qIkEaRBeFZrWQUcigFECyElQrCiFQJiJpN0EkJk2R5NMtlTcCWj6BmTCbdtu1JgZpK4Vss2gM90w1P5Tx1cFZlFvNHmaeWBT4GQYiKK4NUdDpxiFkY8wEKtVprKQtX7UER1LVMKEUKARJEFouPJWpUHvcDk2VNWM2kNSZPlviOY2riGRUCw3HJFEdPAwUFOZvUKw5kwRYY6W3Pc595Xfb1ijVbV81IvVQ2gKD4OQ9IXO8hT3ys3QLEY0d2mna15RVGdaLZVE+OE1+0y9GbNwask15Wz2wNzKjRjyC00iG6AMNGHDWNdHUQkHWk4kkJJ0mhJN7j6IKymqdNGm+3p42x+xjvunQnrUckTUxeeJtIUwRDiIiyImebGJuttOeDGGshgl2nIeb2ZGuY0Np10sgwoWOPGgfWi69nMLlKrXdocYTdTart2FmmN3mwaEmf0APnZRKhrAUAti5BwjSNVEY8QUFd69Dpv2+75jJ1bGdoAe17NW+wU-uByta0Bpx5WoVeHPX0KsdRsD9x5QXkELX+U5XzXkAVyRcr8-aw3XgfLoONCCs38tfau8NibvTAdECBWDoEn1gRQHehVPyIK6J-BY9szKYkwVAneODb7vQfkQ5h5UbjUM6O-FBd9eSgIHBfcc0QiRQP-rvLe5Cb5UMbHpLoadl6GXoEoZ8NAy4YUApRawc4h5tAPg-BYojhwt0dM9OEDgiCsAJkqeESRpCizFlsEgBMtDOJcVMdqCU1EQ0eFoiiwE9GeK8VsUxnYXykNnDeI6z1mxBKIqxcCEsoiJJCHme4WF5xxLLHMNxWgtBLwmo9Uqmc9wHl4otQRoB0FUxSqACp+xKYyFrAYzyaDVC4zXOYRgxM-EaMCZhXR7IqYdM6Og0gnESRMRqn0sqFUplcRqlEHphZxktSLiTaIVN8qM1qtrNmLE1nhQ1mEssSyZnewWmc85dJFxFRKT5UqEtFlLGWdILe+YriFSMcbeKXysndTEgAKkuVQWZ0gQWiTSHcAso0vJPJXveSoZs-4wI5lU-eNSH7tQTKi42ODnLDCVGbCyrJIztNCXc4GDzikZwHNMiF7N3xYqpAfdBNwGkEKRFxN8ODQwUqNDk6lNKEEwiZUxTJBYiWSpZdKq4C8bjyK6A-HhiKGWonSZSvOR5sUSq4gqrKGJGzargnCxVIq3p-B5Wa58DtyXhjZMRK1i5RWLxhA-J+EoX4atKcXAhtVxASWVOcAAVsA1V-yFhThcC4Gq1QKjvhoOG8OgakJiAkinLysdg2RyJemvN+xjrWs6A-MQRhFCfKnFQLChbM2RwNn655McHKJicimiNB9aFVCLaGiNkatjoJdg0yuqIbhRCLaGftXIp3fBnRsqY69yoVqrf2tNJKcxBobfsbNfxl2VFXdWxQtaZ1pBdlpEGYAiggnsPDCyoARDiHmLvUANxGwHprVhL9Z7QAFK0Jezo+B1CMmKI-EgLQao1W5CA-5LtNLNT4cg+GPbcSboTX2ztbC-gPynROrDiD+HwxqVGrZnbCPNuRdLK6A13LVMQ5suKqTRJFphcYOj4rir+voph8NJbOieujb2xQcaE2pM7eHVjjzc07unUWkt5bK3HtPfJy96duNzoyJOndCn-lHsnSe79hntMSSOmp3AwH-VqBYOwKA3huDoH4AEJFhkY0ifjbVVJVTxCJljYOxjdl1onuEjk0AAAyMLoB9OheSrF9wFakIifpdxhYNRBa527P5vGQnEuic80mkSok0tCi0NmrjLa+jpeNeYiYuQuiCa2fpn9OTHkud8nixMxWBhRBuFlh+zGuvmDY715LFWFhLBWDeP5Wy3N5cTahQrE2jBlZUe1+MiYluAoLH1-5zGltsYtQB0byLDsVU26FnFemlMGdPS147rnAR8sHrqnbM3hNza8wY8Ocq3wrdjj91oRqpuXca9dn9TXjMtabeV5FAP0IOpZE6nVmXptxQhypyH7ToerdKgsO1wOGtxVmx5+brKvtiRxhDcqdqNKgAAD50+esTsTBWqmiTMDdRQq5Ew0+yAzpn72Sefd1eHCmvP7u+TtUDi7hO7Kne+pt9H2SsfSe41LhHYYIzCvaajuySubvK5e9jtrpUOuOz-uhfHS20ga6FYdXXoRmOU8t8M4JdA2PW7fWZQVSO6Ctdjql5YaYQyOq1y6nXIOieC5ZwttnlYQ+I7D397j8eMxZgFrmQ7+iXsO4BfL54nv9dQ6XrHVPVMCekbR2D4zzWVcS9N+t6oQf0yh+dVEPm2Y6gLTGbngbzeE+a+dWxjvGehZpDGfX4uYvXdJIu5FerlfAvR-y7H8nolp86LdyQZPFWN+EQyediPsvHdJoJQQESvBVe7-9do-fOIR-FC7xXstu3T9FHP1UjAV-kV75Gc+cvMui+J+-k7+IkAAzN-oZHvkhDQObmhNTphM-gFqEGbs7ggZvkklzL-lvi8JNiKlzGbqnq3k9OctgURGnvzI-kLNhLcoQDflLgAXXpRg9gSkXFEixIAcgTxu5jHmTiLmJGiiQr9pAb5GSonm3pwdlqDmurXkbpPvRJPB6IbijpHkvrlkLqzmvoofXD7knnzozmWMzivnwd2OHNob3Owa0DvsiuYaiI3AoBPEfi-lsq8qAVUpfiXtxrYX3KoBvCYZyEHP1m-p7CJF-p4RVt4XqDPGUFYPPJIUESASEVUhAfISYhvCODIjvP5sYsvqTpkUeKJBEiONYaoukYmOitEtItfPxqWlIVXjIcZtUSIaVJwpYQArIr8oIopmunAuEcihIm0VUR0dkf8j+r0TmilsfKfOfGUfkZ0b8DkYsO4nMc0cXDoMQlIisYETlv+gbisf7pMZTGuBuJIXUWobGhoavvwaJE0iUb5E0i0jWEgWcaEEXljn0YZGbk0jIlIq9kxgVjcccQdkIRMKkVUCqMBCKGKBKLPhHvPgJkAfRFMkwFdBCcKOqNCdqNrjnvzoYVUFqAyKiYKJCRiZqDCVRJlh8b5AsMiUSaqFCWSVieHjnlFAvs4VHuobwYVrSY8MSeiRqBcOSdYHcbjviTCSibyfSaSYKUycDvCQUMftwR9podcQSRKWiWqAKQSSECKaEBqSKIds8QkeVG4eTh4RMbvkwpKfUDaEaa-okR-uTmERaSdgBHQLVGibaaccaWfuAQcRVmbvqA4eCFrOIdYHNIyDYoDsQaoH8XZMxkGWCMKe6n8KGYPuGXYJGfyjGQwP6civqdKdqTqLAYmbCSyTCOggWQ0gWdLu0ogosTyTWZiWWZlpYnGPiqWeCGbptgWbTDSnSKkq0Z6Z8lDvEu2YmJ2aSN2a8MqHyWqH2f2VsIOVacOTQYueWOvG6NaRDCOUwepmNoCBdMGcjgEV0TlhcVyWzpOe7qsXQS2roRIU4VwW8XIS6YZEFA+Xokgd0cpkZrdnuRZmAJNNZmwF4FwL4HwGgGATjsXBQKXOXFEHiHGcXJcFcJWsREhbUX8L0HiGOSHBoIheHKhVoOhexoKJQDVOegBEYDtDVLqfRAQL0oiJhTkC8aAAAIQ8bwViDMXmYm4oGN77QP6Czd6tIRSKlO4oxMyTTD7p5UGiU1jyIw4sHSiowPQtqYjIVKmXHvgEBmFSVoz+r0W8xyUiWaV1Y+mgF6WgAeF+wwV3kryPEzS6YuHBHn7WVhF2X8UOUZKHK6zXgEAuX-EOmYhpApFeWxxm70IWzWiMyGKqHAHviiTRUjBsaxWglvnUmmyEoTq9a55GF5HKoCE5VmT0UpWJjpUcx5UJVRbV6nq9Z5mGTDi7AkiuDMwmA6wsrOTsqsW4bGYIIRXcatEECUHdVZAWVXZroDXjToI+a4jTHtWdVvgNL-raTeVm4jUzlZ425-RBV2SZisxbY-I7XZSjSDW76UFGrCyUF7WvHXabUrB8WxwPWJghSYg3UTVbI-ovVPXcYMyOKLVHKwLfKFgnXd6cSJj6qIkkWuDiBHXrIpRxYw0uBw3hCFRtkHXCQbWjXbVe7rLj4Q3tU2xNjaBJAo1iDw2-IAA8pNsNFNaNxNfYAkocLGewcYJAhgQUUZs4oA9ARwIIVANUcwokoAAA1FhWLKhDdK4HIIiFntkOLWxiLeLbQVLRKC4LLT1r0rknRPhcJKzZ4AQEYEIJmS4Nza+nzUeULWJGLRLdzGrTLQQHLSDb8oreHLbarXBerZrQzY1b5LsAcEcEakSoduJV0BnBkNUHsAlFDS9NxgMpTWDVljhjscsfLbQfKJHQHTHeQC1erYDf5RzA8rQXMIdojcTPpunecr0PpgzSXbzeonsfLWkD+r7bwm-I2J-N8OXfFpDQtX5SysnVsHrfDeHKQJcKjH+q8HulsERqgkOl0swK8A0sNaNeKuWA-AnS9Vde9a8FyNvW9T9YukojCIouyXZN8FHQKGNX7aVHKsHROqHXjWHZ0BHSYFfTneNSRq-fHY3bjQzfPUbG9ksYUpTYzXSJne-dnd1YBDQK1UyAPSxMXecqXSDT3ZXS7eA9hbzcUIetdmjSdVg1sKXY3WMZgy3cZm3QonbctIjGNT3XNSfHEGfAXYPYA1MCPU-RHBPTaFPSsInHYE9skDPdMHPd-dMOgi9SvVaS9Tfe3VMJvY3dvVnrvY9WkAfX9Ko0YE2n8GfR3YiZfdA5xoBT5XoswKBXZuBTwPwCgPZetDdFtNQPdOjDTPlbkYOaQOHBtI47RStt5d43dO2vECRW+EkhjJ9fUb+QdAbF5eggE043tFZg0qkjGMxkemxp0EesDAuRWACV+hkwUF+tk6KsxpjQU6AJjcU6kwCRLOUxLFU0uQCeNu4mxs04UryDk10MxrIPQLevoGxj030x0yUwCXrQU3reWJ050Mxu1OIHqOcPQDCrM2IPM4wH8FMwUMxqLeU50IRaAPoNkGlKAIpOLYYKABs2VFEKJEpDswUHswc8CopKpGcxc8xkpLSQU4pF0EcwUKpF868wCdCmkNMPc4c+lIpCCvswUACwtqJMALc6tHiGkA80c4pGAC8yM7CwAKQIuguPOgBYtQvnOYtJWxbJQ7N4uos90HMktXPsWxYUtIv7NgvHMcVxY0vVOwtU24tMsovgugA00FAcuNNcvkvAtdCUv8tU3EzMu0uiSpQ8vIssuKTpRCswtJWpRisgu8vKugCatqtyvsUIusvfOqscWdBIUxieRxMOOBPqWOVZ4pQwg+JRBHppDxO0X2shAIo2u3QJNes4idoASvrJTOsdRBDAqlO2sJNsb676wXMVPRuevAWeTYC+s+P3RoHzKpLMberexsZ5s1QJvrmXOiSQAkBeyiD9PAvluVtnzFvrkzPKArOwCQAFPLOVCtsNuLlNtzMACi5THbfb3b-ZzGAAcooGOwixO2O0Q+cta4vR65m10lTldU610C62QMCtFlyEuxVSu7OAuwwLjHu3AauyFOu50Ju9u3VdkkdO60m8u8e1Tgit5dNNdH68m-6mHKbRLFpe+xKJUB7EwJdPnWGooGYGojdMw5zGLKe5tCCJUWEzTBGS4H+-IcukHYg9eFpf9UzNhxzA4raaexTNtbQWEqe2gVdSO2EkR58iRzfkG5QDciW+WJRwe9wrtSmTSow-3SzEDRsMUrNQlmhymqiAR0TDgyUMcBJ1EKm7mrAQ7S4P2sG1pcjO8GpftEx67OBKJFTapTaEpJNAq2OfY5+849+9p+A70Hp3u0Z-6iZ3kvRJjSp5QNZ2JAANrK3uCKde2uCuvXZWcK1iThxnLi26hKd7FBe22iQAC6okY5SnmtVn8hRA686oG0HMhITQUC0tLgaQVnB8gzVUVzKkZX5XFXlXVXNz3HBQ2Xp8k4eXMXAAOtvrbRF358p4V4ra1347HGl7mEUGuvV8w41+rVpSN++JN2N64K1ughKHEFopNw0qJAADJKQELzAkCLcUDC3aSVllw7fXQ5crfrebc3B7f2XSA3S7TqhGM9UVmL0LdlwNIDfqhDefLPflSTeLqoa7FffYZbDFcyylcqQkwaDuB1BbSSjQZldK0iNIIBwCKmoVB9Og-VcY8Y8woaxffHenwtdtfi1fcE8I+dLHuJs0AuD8wNJ8zrxrTbdlzH0TKL0nINIDIBLoF37sjZdU-LBM8FCTLvJXJzLJOn7fTgqQqrL7ja3yM2uU-8ztXcp4j7KsPHLS+g3gZypzIqoL3k+aIUA7ejrGTjoMI8-8wPvy-LBE3yNvcfscz69HeTcFeHeM-yMPzXe0V3fR3t4sC8+sDW+n2Ioe+3cf3aaJiifnDif8eF1tBrX4BnfoZbc7czC2C5oSmTaKDj63V2A90AAMoAvQvA-w5wQMek8fG3ifF3tghb6stgCfioOYSfZcKf+AcFV0k2ufaQ+m-6Ta5f53ZkLfYAvAQAA","body":"const the_global_environment = setup_environment();\ndriver_loop(the_global_environment); "},{"tag":"SNIPPET","latex":false,"id":8,"eval":false,"body":"function try_me(a, b) {\n  return a === 0 ? 1 : b;\n}","output":"L-evaluate value:\nundefined"},{"tag":"SNIPPET","latex":false,"id":9,"eval":false,"body":"try_me(0, head(null));","output":"L-evaluate value:\n1"}]},{"tag":"SUBHEADING","id":"#h2","child":[{"body":"Representing thunks","tag":"#text"}]},{"tag":"TEXT","id":"#p11","child":[{"body":"\n    Our evaluator must arrange to create thunks when\n    functions\n    are applied to arguments and to force these thunks later.  A thunk must\n    package an expression together with the environment, so that the argument\n    can be produced later. To force the thunk, we simply extract the expression\n    and environment from the thunk and evaluate the expression in the\n    environment. We use\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"actual_value"},{"body":"\n    rather than\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    so that in case the value of the expression is itself a thunk, we will force\n    that, and so on, until we reach something that is not a thunk:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":10,"eval":false,"body":"function force_it(obj) {\t\n    return is_thunk(obj)\n           ? actual_value(thunk_exp(obj), thunk_env(obj))\n           : obj;\n}"}]},{"tag":"TEXT","id":"#p12","child":[{"body":"\n    One easy way to package an expression with an environment is to make a list\n    containing the expression and the environment. Thus, we create a thunk as\n    follows:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":11,"eval":true,"prependLength":493,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQCZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMfeMAHcqFABahWNACZUCVMgENqdRgRpNQAG0UAvAJ6gApgDdFWostolBoRWTIbZJAOagKNDnETJ0WDLjE5CokxmYWykYAFI6sAA50RiQUADTGJCYAlKAA3tigBUxGFERMoVT0APpaokZM5jFsCSRJFJn5BZ1dAPzatfValeFE0bHNre1dU6AAXKAVlSSKrKNNicmT0529WjQ0ANZEcZX0+qwARjSDw9GnF1eVNASLy6vx621pSVkdW7PzVUUcTiNSUIUa7xaG1+W16QJB+ii9hK5iG5hGUSClGslSMAA84kV6PRrBDxhsvhlMikYX9poomC5cQSiSTVGSPtT0j86f8FjQ4nVlBpKrFzlQluCxpzaVNeqZ0ZEogKhR4mKK2OLJTiPJV4aCrHQOVDPtzNn85gtHCRZCEGtKTebYWFUdbbdZ7WsTZSeXTLVUdBdpIpmYSjMTSQ6JrKepJFPsjJUseDA+dg5U4gzXhQ6iczpctPRjRMabyy1NU+nLtJEVGKWaY51-ScjABHEbkN7ktqNgry8It9tJMi3NsdkcnCiRFbJIt103fJ3TZvnXZkfbF6G8-uo1c0deb1IN3nNoolMqT6etQ9LuUuwZn0okS85mcUQ8+29dZvJnHSIxkDo9RSl60bbvelg5pipDYnQlT-oBlS6ta9BTsk8EAVoN6fr2fJVAhQGGiQN64TugwEVmIGQq0OEngCeoRi4JBviR4EKoMiiMcx17zrRfrGEwLBMB+oAAESkPsJA0EIoSnMkih4qAAC0SkQZEomZAA3NgAC+gQwSEdiUJY1zotE+JxJ+uQdI+ZSEBoE6iFE7GQeZBKflpun6cE1h9KhjzPAyTI3EWFn0FZOQAJA2cUT5xnEzkEqAAC8AB8RkoqZFhuZZZpfAS9CeXpv50H5FABRhOj6EY0h6oyoUFRF0WFLFdmsECiVxCl6X-lVlRORZn75XEhXaXp2AlaE+qIkEaRBeFZrWQUcigFECyElQrCiFQJiJpN0EkJk2R5NMtlTcCWj6BmTCbdtu1JgZpK4Vss2gM90w1P5Tx1cFZlFvNHmaeWBT4GQYiKK4NUdDpxiFkY8wEKtVprKQtX7UER1LVMKEUKARJEFouPJWpUHvcDk2VNWM2kNSZPlviOY2riGRUCw3HJFEdPAwUFOZvUKw5kwRYY6W3Pc595Xfb1ijVbV81IvVQ2gKD4OQ9IXO8hT3ys3QLEY0d2mna15RVGdaLZVE+OE1+0y9GbNwask15Wz2wNzKjRjyC00iG6AMNGHDWNdHUQkHWk4kkJJ0mhJN7j6IKymqdNGm+3p42x+xjvunQnrUckTUxeeJtIUwRDiIiyImebGJuttOeDGGshgl2nIeb2ZGuY0Np10sgwoWOPGgfWi69nMLlKrXdocYTdTart2FmmN3mwaEmf0APnZRKhrAUAti5BwjSNVEY8QUFd69Dpv2+75jJ1bGdoAe17NW+wU-uByta0Bpx5WoVeHPX0KsdRsD9x5QXkELX+U5XzXkAVyRcr8-aw3XgfLoONCCs38tfau8NibvTAdECBWDoEn1gRQHehVPyIK6J-BY9szKYkwVAneODb7vQfkQ5h5UbjUM6O-FBd9eSgIHBfcc0QiRQP-rvLe5Cb5UMbHpLoadl6GXoEoZ8NAy4YUApRawc4h5tAPg-BYojhwt0dM9OEDgiCsAJkqeESRpCizFlsEgBMtDOJcVMdqCU1EQ0eFoiiwE9GeK8VsUxnYXykNnDeI6z1mxBKIqxcCEsoiJJCHme4WF5xxLLHMNxWgtBLwmo9Uqmc9wHl4otQRoB0FUxSqACp+xKYyFrAYzyaDVC4zXOYRgxM-EaMCZhXR7IqYdM6Og0gnESRMRqn0sqFUplcRqlEHphZxktSLiTaIVN8qM1qtrNmLE1nhQ1mEssSyZnewWmc85dJFxFRKT5UqEtFlLGWdILe+YriFSMcbeKXysndTEgAKkuVQWZ0gQWiTSHcAso0vJPJXveSoZs-4wI5lU-eNSH7tQTKi42ODnLDCVGbCyrJIztNCXc4GDzikZwHNMiF7N3xYqpAfdBNwGkEKRFxN8ODQwUqNDk6lNKEEwiZUxTJBYiWSpZdKq4C8bjyK6A-HhiKGWonSZSvOR5sUSq4gqrKGJGzargnCxVIq3p-B5Wa58DtyXhjZMRK1i5RWLxhA-J+EoX4atKcXAhtVxASWVOcAAVsA1V-yFhThcC4Gq1QKjvhoOG8OgakJiAkinLysdg2RyJemvN+xjrWs6A-MQRhFCfKnFQLChbM2RwNn655McHKJicimiNB9aFVCLaGiNkatjoJdg0yuqIbhRCLaGftXIp3fBnRsqY69yoVqrf2tNJKcxBobfsbNfxl2VFXdWxQtaZ1pBdlpEGYAiggnsPDCyoARDiHmLvUANxGwHprVhL9Z7QAFK0Jezo+B1CMmKI-EgLQao1W5CA-5LtNLNT4cg+GPbcSboTX2ztbC-gPynROrDiD+HwxqVGrZnbCOIuA-6tQLB2BQG8NwdA-AAhIsMjGxQcaE2pKqeIRMsbB2bLiutE9wkcmgAAGTidAEem8KVkrE140hDj9L-X0RqILXO3YBN42jb2jj8barcYMeHdTQotDZuKqp0zAwiViZyF0T1-yZM-pyY81jvk8WJmsw0G42mH6pNEt58zaRfMqZbfRJYKxZM4t00pzjhmk0iVEpFowFmVEefjImFLgKCx+f+QFlLMLQAWoA2F5FJWKrZbs45rZzmT3ZPaW52OCw5UsWq6RoTen4uJtQkl1rrQ0ux36+hEr0WatxTq6eybDXdVHSbZZ8Lw3uFmUFU6nVWm-m1crce09LnGtNdUwsO1Y2Ot2XY91ozurw44whuVO1GlQAAB9HvPXOwZnrrLjNiTMDdRQq5Ez3eyM917XX3uXe7OHCmgOyuGTtUak7Zb-kVe+tl6bsTHmxzhw6lka3hXtM2xN7bk76vE9Pa5g74XPOOz-uhY7KWQsrcdRGOgeWtkBZu7T4ZwS6BFfp2+xnOPmeHRh75BYlYQxM+dQjwTZ3QdccS1UwLyw0wS8F86wbVnlfpj5tmXMJX9GzYJ21DqyPnh87R+TpesdxctJrNLnTW210-r27N+b6XSpU5t5L0kOuBZ1AWmMo3oQAte7V9YIrvvij+7SGMkXpUFhQ650kuzkUHOneLrGsHCuvuiUTzo7nJANfhbz4RDJVX8cxbZ0mglBARK8Ax6pkvIznyR8Fgbjble4qvKKLXqpGAG-F-9do0vOIqb2-89XnvIkADMA-kUl6QjQanaE7uYXH-8qnHPV-56SVzJvBeXhRZFVzT3WvVdhiF5zc5++iIZizH7oW2FbmECH3Dsflvm3IroYS9F0TPuG8EWMTlwS160VzRRITfCL2RTJTDzxwAN+HLSJxdy0wpy-yqEng9Bmw73G1lziyz1AJzwwPrlWyFwe2BzLDe3lwIKuzEiIN7iiUgLn0MjoNREbgUAngrwQPy0n09jryYN8hYL7lUA3n-2wMRyr38inz734NKkEL1BnjKCsHnnaxl2Dx4N7y+1nzj2LgiRHBkR3gEyALwKoPfGvnDl0NSxkNkg3gnF-zfCLGvhLQKC4Mdx2ywkcKsIwUgQYLIQoUMKcyJzgSt1UwkR8JiTgSDlwxJyCJzUO2PlPnPhsNuFkV+UANi3-X0JvmCPCzFx-jCNMJSP8K2QWAyJ-TgVQLYyqCaXX2KOAI+ySyaSgMMiaVtzaXgPT2kyQJJ1c2yORSp2qLsImCDzKiiFEkaNhQgImG0PohVGAhFDFAlGTwr1T06BwOLimSYCulmOFHVAWO1DgI23IN5AWC1AZC2MFDmN2M1EWKoi016MqMqA2PONVHmOuP2JdWWLT3EM62MJANEI+HDieMeAuJ2I1AuBuPD08JOMWM2OBJeKuPBPeOixWOcI6MoL+IaJhOeMuLBNOJCCaN8m2LVHhxUNUIWSkK+3r3uN8k4ThPqBtBqK73UJEn72pNKnXjdDpIhk+VJIdyZMkN4KqS0M-0Mip31HYPBC1lgJIDmkZBsVaBIOdVSLWJGNEnFLBHD3dT+ClIv2dVlJcHlPQm91UAqMJJBOJL2Nv11HVKWPaImS6VACJI0AaSdPVFGxyUQSMKBNdNxIhIOJlDLF6DFIuglNJCp2y1dNphpTpFSVpO2IZPJ3iTjHxRtPBHDNeGVHNI0CjOjK2FjKYS5ITKpWfxcQ5LoFqnjJ5P22mJaxDI1P9MdEiNi0zxML6zrKIgJNKh1KFQ+LtL5Lsgt0azZKmkZEVL0Wl0QKdxJ2QM5Dd1sEmhozYC8C4F8D4DQGn3dwz1LnLiiDxFZx+MuCuErWIj3NLTpF6DxCTJDg0F3PDkPK0GPOMAJAAi3XPQAiMB2hqk7OLgIF6URFPPswfgAEJ6IKBtyxB-zL105VMqd9pW9o9GlWkIoVT2cUYmZJoI978o8hYY8kKPUFs0CwSEhUYHoW1MR9zcCWyMSCBrs0K0Z-VvyX8W079+ZsLhYS0J8BTa8aLQAqS-ZNymKV5WjyLch+y1CuLMQ0hWT+L3Muyh9DldZrwCAOLuCJKeKtCZLY4qd6ELZrRGZDFO87IAsdKRgis9KpjYicjTZCUJ1fNhj0T6jlUxITLLDhyxKBVzKOY7LDLQg0dfNTSylyBdgSRXBmYTAdYWVnJ2VAL-kf0EFNLG8CyCBWKoqshRLJzPl4rxp0FFMT44gz4wqIq3wGl-1tJZLQhYKUr9cGdspUixLQBMxWYcsfkaqRhRoEri9WKjVhZWKVLXDMReqgZoLOrXgcEerXg+q4of1kqJqhqBKGZHFCqjlYFvlCwaqA9OJEx9UOiHzXBxBmr1k5NiZdqXB9rwhCpLEGqRMohKqMzqr+d1kY9NqwqbYmxtAkhTqxADrfkAAed6var68616vsASUOUSDwTwdqEgQwIKQ019egI4EEKgGqOYUSUAAAajPNLLAolBcDkERH12yExqKzRsxuf1QhulcHxqiCBuBv+GvOEnBr2EICMCEDsDlPsOK0RpqBRrEgxqxrFgptxupsJv5pJv5vJpxqpoIERFpumN2AOCOCNSJRK2Qq6AzgyGqD2ASm2pelUwGW+vWu0xw3SPcW+rpr+HlE1oVp1qCpoBCqZAUsioeWfzmBKyOs6LXUJuf16BkyBtduK3UVJ3cNWsoXcBJzloUUbE-m+A9tyoSKWsUo2FQS2AZoOsBJIEuFRj-VeD3S2CIxTumHQRmpWAaVpJLvMipF4SNi2QNoru6oGomrSHrpCkbpWCbT+EUT4RVO+C1oFFSoCqmkNQqwnVVoerVs6A1pMD7ttrSpI0nv1qDvuqBsLqmCMIyO9vOStunptqisAnttxsTudqpAtq2DdtWo9pk03rCV6APT9t6RqtPuXEDohmDvNrSB-Ujs7oFs6BjoyDjorVxATqdrfGNtTsEhvLHojizptBztLpUjsD5QG0XSUWQ1Xs6QYFxgrrLqSpSvFXLAfjrq6v1zbqMC5Bbr+lIY7vzphC7rJN7t3vFXGioxbUXLo04B8B4H4BQAEvWhui2moHunRhpnsrqNjNIHDg2gEc-LS3Koav4bunbXiAfLfCSQxnSoCKnNPX1jmuwHQSkcUdIpXnmVSRjACyPSK06CPWBhzIrES3Bvq0sYKC-RsdFQC0aqYCcautZlcbMfsYli8Yll8bzPsZKPcSKzCcKV5Fsa6AC1kHoFvX0CK3icSeibcfsYZqcYZvLBic6AC3anED1HOHoBhQKbECKcYD+FyYKAC3Rq8c6FvNAH0GyDSlAEUkxsMFAGqdVKUnqYKEaeaeBUUlUk6e6YCyUieKccUi6FaYKFUmmbGfsehTSGmAGZafSkUhBSaYKEWd61EmAD6dWjxDSEGdacUjAFGfSb2YAFJDm1mhnQBrntmumrn3xRJ5Nkp6n7mzmPbmnXnRigL5Mvnjmmn1m2nQBAXiY-m-G9mfq7mQXTmNnQA-qChoWQnYXPmVmuhvmkWfriZQX-nRJUp4WTmwXFJ0pUXdm3nUpMXVmEWyXQAaXKXCWgLDnwWZmKWIXOg9yYxPJ9GFHBG9oh99cUoYQfEogj00gDHBWjGQgEV+XboZWKZO0Xy+kxWOoghgV3GBWZG0g0d9Zun5HFXPzZW9FPI9GHTpWTWt8THEsAtvVvYisHWapDXcyan7HIASAvZRAkmVnPXvWz5XW3X8nlBynYBIAnGynKhw2g3cyQ3CmABRLxqNhN2N6MgLAAOUUAzcOazYzafrCT5ctZ1fui326tFa6HFbIGBRkzIC5CtdLa6Vu3leLeNcbcwduzGorc6CrZra6LJyOilZLcTBtfNaGwuiugbaFbIteiCglgovOgRH6mfA9iYEukPrDUUDMDURunyqv25inf6mUb-zUZpn1PnemOXSVpAevAXafP2SPpYgcQZMPYpmqpLK8UPbLcJq1JpWfc+VfaHxVcoBuTdeBi-abfQhCjTbCXjvyquhvY2GKRysAZcF2HOFREQ6JmK1imOCw6iDHdU2liugGncmqUQzJICyLSK0GnwrkZjR3RnVEtWLRLEcS07XDmo88LnQJEnR3UmoHP7e-X46goErnQyD44kgE98qE7fqLTm10fQVYEnZYBcH5gaT5nXlGN4CBnszApGCBmnyGuzR5WU+uhoDU+WA-sAbyoKqw60iAA","body":"function delay_it(exp, env) {\t\n    return list(\"thunk\", exp, env);\n}\nfunction is_thunk(obj) {    \n    return is_tagged_list(obj, \"thunk\");\n}\nfunction thunk_exp(thunk) { return head(tail(thunk)); }\n\nfunction thunk_env(thunk) { return head(tail(tail(thunk))); } "}]},{"tag":"TEXT","id":"#p13","child":[{"body":"\n    Actually, what we want for our interpreter is not quite this, but\n    rather thunks that have been memoized.\n    \n    When a thunk is forced, we will turn it into an evaluated thunk by replacing\n    the stored expression with its value and changing the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"thunk"},{"body":" tag so that it can be recognized as\n    already evaluated.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-4","body":"4","href":"/sicpjs/4.2.2#footnote-4"},{"tag":"SNIPPET","latex":false,"id":12,"eval":true,"prependLength":482,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQCZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMfeMAHcqFABahWNACZUCVMgENqdRgRpNQAG0UAvAJ6gApgDdFWostolBoRWTIbZJAOagKNDnETJ0WDLjE5CokxmYWykYAFI6sAA50RiQUADTGJCYAlKAA3tigBUxGFERMoVT0APpaokZM5jFsCSRJFJn5BZ1dAPzatfValeFE0bHNre1dU6AAXKAVlSSKrKNNicmT0529WjQ0ANZEcZX0+qwARjSDw9GnF1eVNASLy6vx621pSVkdW7PzVUUcTiNSUIUa7xaG1+W16QJB+ii9hK5iG5hGUSClGslSMAA84kV6PRrBDxhsvhlMikYX9poomC5cQSiSTVGSPtT0j86f8FjQ4nVlBpKrFzlQluCxpzaVNeqZ0ZEogKhR4mKK2OLJTiPJV4aCrHQOVDPtzNn85gtHCRZCEGtKTebYWFUdbbdZ7WsTZSeXTLVUdBdpIpmYSjMTSQ6JrKepJFPsjJUseDA+dg5U4gzXhQ6iczpctPRjRMabyy1NU+nLtJEVGKWaY51-ScjABHEbkN7ktqNgry8It9tJMi3NsdkcnCiRFbJIt103fJ3TZvnXZkfbF6G8-uo1c0deb1IN3nNoolMqT6etQ9LuUuwZn0okS85mcUQ8+29dZvJnHSIxkDo9RSl60bbvelg5pipDYnQlT-oBlS6ta9BTsk8EAVoN6fr2fJVAhQGGiQN64TugwEVmIGQq0OEngCeoRi4JBviR4EKoMiiMcx17zrRfrGEwLBMB+oAAESkPsJA0EIoSnMkih4qAAC0SkQZEomZAA3NgAC+gQwSEdiUJY1zotE+JxJ+uQdI+ZSEBoE6iFE7GQeZBKflpun6cE1h9KhjzPAyTI3EWFn0FZOQAJA2cUT5xnEzkEqAAC8AB8RkoqZFhuZZZpfAS9CeXpv50H5FABRhOj6EY0h6oyoUFRF0WFLFdmsECiVxCl6X-lVlRORZn75XEhXaXp2AlaE+qIkEaRBeFZrWQUcigFECyElQrCiFQJiJpN0EkJk2R5NMtlTcCWj6BmTCbdtu1JgZpK4Vss2gM90w1P5Tx1cFZlFvNHmaeWBT4GQYiKK4NUdDpxiFkY8wEKtVprKQtX7UER1LVMKEUKARJEFouPJWpUHvcDk2VNWM2kNSZPlviOY2riGRUCw3HJFEdPAwUFOZvUKw5kwRYY6W3Pc595Xfb1ijVbV81IvVQ2gKD4OQ9IXO8hT3ys3QLEY0d2mna15RVGdaLZVE+OE1+0y9GbNwask15Wz2wNzKjRjyC00iG6AMNGHDWNdHUQkHWk4kkJJ0mhJN7j6IKymqdNGm+3p42x+xjvunQnrUckTUxeeJtIUwRDiIiyImebGJuttOeDGGshgl2nIeb2ZGuY0Np10sgwoWOPGgfWi69nMLlKrXdocYTdTart2FmmN3mwaEmf0APnZRKhrAUAti5BwjSNVEY8QUFd69Dpv2+75jJ1bGdoAe17NW+wU-uByta0Bpx5WoVeHPX0KsdRsD9x5QXkELX+U5XzXkAVyRcr8-aw3XgfLoONCCs38tfau8NibvTAdECBWDoEn1gRQHehVPyIK6J-BY9szKYkwVAneODb7vQfkQ5h5UbjUM6O-FBd9eSgIHBfcc0QiRQP-rvLe5Cb5UMbHpLoadl6GXoEoZ8NAy4YUApRawc4h5tAPg-BYojhwt0dM9OEDgiCsAJkqeESRpCizFlsEgBMtDOJcVMdqCU1EQ0eFoiiwE9GeK8VsUxnYXykNnDeI6z1mxBKIqxcCEsoiJJCHme4WF5xxLLHMNxWgtBLwmo9Uqmc9wHl4otQRoB0FUxSqACp+xKYyFrAYzyaDVC4zXOYRgxM-EaMCZhXR7IqYdM6Og0gnESRMRqn0sqFUplcRqlEHphZxktSLiTaIVN8qM1qtrNmLE1nhQ1mEssSyZnewWmc85dJFxFRKT5UqEtFlLGWdILe+YriFSMcbeKXysndTEgAKkuVQWZ0gQWiTSHcAso0vJPJXveSoZs-4wI5lU-eNSH7tQTKi42ODnLDCVGbCyrJIztNCXc4GDzikZwHNMiF7N3xYqpAfdBNwGkEKRFxN8ODQwUqNDk6lNKEEwiZUxTJBYiWSpZdKq4C8bjyK6A-HhiKGWonSZSvOR5sUSq4gqrKGJGzargnCxVIq3p-B5Wa58DtyXhjZMRK1i5RWLxhA-J+EoX4atKaEaWV0BruWqc1ToD9UmiXEBJGFxgQ3iuKv6+i0bI7KnOAAK2Ol0T1-yFhThcC4Gq1QKjvhoBm8OKb9gpy8rHStoYoiVqzQ-MQRhFCfKnFQLCjatJ+xUb5Ot3wG1iAkk2-5La20NsUJ2yd07u09vGvgSaagWDsCgN4bg6B+ABCRYZPNigC1FtSVU8QiZ83ANVbmqomZWY3lAAAMjvaAcdnyckpWSsTE9SF930qTQsGogtc7dnPeGy9X6D21SPQY8O-6hRaGrYm55oQYMDCJa+nI2aL1bOfTO7J7THk7t8nixMyGGg3GA5suKkaSNwbSGRn9iH6JLBWLenFoH82FogyWkSokmNGHg320qRGXjMYtVocjeN-mRt47G0T+HY6iYqrxljOasOtvbVO3DuqDZ+oYwsOVLE0Mqbinu8DxbULcf060fjsdLPoVE8pzDcVsMdqws5jTsTtMIeRbZ7hZlBVOp1UBv5qmJ0uZwx5+jyKFh2ocyBrZJmONmdZVBsSOMIblTtRpUAAAfbLz0EuHq41U0SZgbqKFXImTL2Rcv5aqOxwr5nisUyq5FwydqjWxYo3ZBT30lNuenTkzzBHSrtYdSyALwr2nBac2p8LYXBtyaTUJtL6EYu8do35x1EY6DiYjVx0SK2MvDOCXQWN63QBjbDNtw6rXfJ-uWGmEMW3nWdYk-Fur+7EuQd1dBh76ZnvWGs0mysIY+bZlzKJ-RWnpttQ6j15453+uaaA0N2OIOWk1le822bYX5t4cWwxoT6OAdGjBwLOoC0xkw6Q-t4n43ruxrJ8UCnaQxm3dKgsZrx2klocihhuLxmPume+92cOXOdEnZIEDhj4vCIZKU4ZxzdlXlFAICJXgjzY6y5Gc+JngsodBdY1slXnsRIYE10m7XkuMdtOh0byjJaCVq6qQAZgtzL-12jBjIS6elr3WP-nLd96t7n4IuZW6IsJ8xJYuZE7+09+nL3bmEE9+1vXFPsLJ4jxkqmEWdNRdNoS9F0Tkt29+MYoXX2ispdEmikhb5pfIrJYnwLnIg7Y9C+5wb7Pi6Tw9Mjtv9u7IFc441mvff67+YZ9VvLZYR9Je4xP3uUSG-u+RUv1EjcFATym4Ivb-lVfq7X4ZDffdVAb1L4b8vknHeH6qebpesdT96hnmUKw89FddZpwf03ruCcF8HDERkR3nIwrzAyr3M2vnDgiRHEb1UQ3gnGLzfCLGvizQKGvxC3U2nVQOP18k4RXzIQoVALHVmzgUfyTQkQIJiTgXb3+TCzIJrV-WPlPnPgQNuFkV+T31AwKSwgYK813W-mISkWAJvloPe0WHcXCzgX-wEMpjXA3E-y-2TU+wa0vw+HDiaTgN8iaRtwD0wPC270YMJ3jETCaRkSkV2xv3M1Ek0NhXrwmB73ohVGAhFDFAlB513z506CM2HyqCmSYCumcOFHVDcO1Em2hxqznyqC1AZECMFBcJCM1HcKoiA3IN0z8KWACMeHiOCI1AuGSNb0dFyC8PQKV2Lnq1HzUO9DEn8LiNVFcKSLCKl1wI52iPcKyKCLVDyJiJSMHxKOtQF18PANUO4xiI6JyK6NCKIi0NKk6JFHs0ULewdx-2dxSw1zSORXwKCJtD0OWPKjvxSwfyMORXXjdGyKFB2MWP332N-xSzd0cKE31G33BC1hbzoDmkZBsVaCn2dU4J8O-3fFEieLBEB3dT+FeKu2dQ+JcC+PQhJwYBkN8jmMSPyKaKQhoD1AumeMKImA5S6VAGRIaWRI6xyUQTANqPOISO6IKPCKA0sTjHxWBKSSEyU2RNphpTpFSS2JyMuPx3iQZMTCZPBBZNeGVAmI0HZI5K2C5KYUpIhhfSpWTxcVOLoFqm2IVK0yG2G2LiFJxI2DEMF2GMqIsyxJBNOxaJjk93hM6w7ywIH0dAtLsEZB+L0RtJIM71nS73x2KUXX9WXTYC8C4F8D4DQBdwE3KNLnLiiDxEsPEMuCuFbWIhjIGLpF6DxH5JDg0GjI0L2C0ETLjUFEoBqjSCKBHB2hqhmOLgIF6URGTPQwfgAEJk1IyxBaz51wyBSHpEMoh08hZWdWkIp-iyoogDsUYmZJpGcsxyc+zGkByPV+C7sqhpRUYuyV5MRYzDSKiF8CBw5lzxz-VKyU9EMMwpzmchZ1zcgljldb9TcdzQB1je1tSjyV5dCCBR1jcby1c7yH9HytcrSWYjlrw3zLzrindMQ0h7jfylsTCCUi5UM6BGZDEh8ASRz6FspY1rRELHS6FCUbgogyNqdlDhcuNlUxI0KRhDzyLExMLrwCLkKn0cd3MyNESylyBdgSRXBmYTAdYWVnJ2V6y6D3MEEoKZdZSCB+ZzJ+KrzQhsNhLxp0FP0T44gz4uKeK3wGkeDtInyhNxLRTIcNtspODpLQBr1hJ9KLs-p2ynzdKVgjVhYJL3yZsJ0bKjArKtcJKcF7LXhHK7IwsXK3Kk0GZHFVLAKAFvlCwDLKdOJEx9UyjtAkgXBxBAV4Vsh31iY8zXAkrwhCp6TTKogdKJLkqflIquRzhoquKbYmx4rMqxAir1lQAAAeaqxK2q7KyqvsASUOKNPYOMEgQwIKWE3eUAegI4EEKgGqOYUSUAAAahTOVIoBulcDkEREh2yFmtjSmtmuT1QkWpcGWvwt6VyTokzOEm6s8AICMCECdJhOQOGtGpqAmrEhmrmrFh2olD2oIBWvCt+XWvDmeu2oWvev2rapYqQz2EOGOAUzwtE0HK6AzgyGqD2ASlipeiTQGTqoWjatQXvm4MkNWuT3lARt2AFD4sAhoA4qZEOV1mvAeWTzmFEzfWJmw3xvOV6GwzarpuGvUSkO+q5DCxBt4TfkbE-m+EZvcBbVxBYJCupv1JqRtUEizJhpqJIEuFRlAGkw2SmH4Xhjlq2HQRcoaXwJcr4qyEFqmAfnRpcrssxAcrSCtpChtu8s1qURhEUUGNXiJqRpNtBrsENShoYSVvCFhs6HhpMERpJpRumHk25vMqxt1qNnEJ4IxvatTO5HDuRrYvJveult4tpvOXpvCrFuZt5oJuGuKEqHZt6QMpTotC5ohh5qyUoXcCYsOudr4Res6BFoyDFsUqlqppZXE3ltDiVojlVptHVteETl9quVXzNu1uxumH1oksNrEsKvFXLAtu5qtsh0dpWC5Htr+l3tcrbqFpdriu+HTu9p9LACXWYADLXSDJ4H4BQA7PWhui2moHunRhpkIvny5NIHDg2g-vLP4yfKAbukTE2hBBLySQxhAvdLtIOgNkfPQXAc-r2j9IaVSRjEjWfVjU6GfWBklIrH2xc3wYKBcyIdFUjVMvIZMqnU0HLGIa6CoxLToYlioZwf2wWB4NjR4fcV5GYc6EjVkHoBBBlljVEfEcMDpCEYKEjROvIZOqYeof23anED1HOHoBhXUbEE0cYD+DkeHNEmmroc6GzNAH0FSvSkUlmpkaMcjSUjMYKAsaseBUUlUnsdUesKUlqPIcUi6DSk6FUgCYcf22hTSGmFcesdAEUhBUsYKDCesOAGcdWjxDSDcaCcUjAC8a4esIAFJUnon3HQB8mEnQAknAS0qzHimsmxarHvHASGz30an0nLGYnFJmniYGm8nASGqim2nMmbHGrOgenpT9sGrkpnHanhnJmCgxmPp9tUoBmMmOnQB0p5nKmRzUopnImugZnYn1niZ2nGmRyGzUnDnAmNnQAmyCgYyYxPJUH36IHVyMlIcUoYQfEohn00g0HyzXm9FHn8S-mv7Pcy100AIhrkpPmOoghgUaHnn0HY0kckGjp3UQWMHEMEVsAnnbp0HHY-5ZwsGuNI1vVvZY0yWaojGpThH9tIASAvZRB9B8H6XGWz5qWaXjHdHKhYBIByHuXeWOWaXI1uWABROhsVoVqUyNAAOUUBldSblZlZrruSBYYFxgxYJbQl-m+o+a6C+bIGBWwzIC5E1cOwRVxeAfukO08r1c6ANaNcYoGzRZMsRf+fNc8ifOmmujxf+e-pIGhIlg3Lsm9YlEqA9iYEumzvTUUDMDURumUs5jFk1agbzLfFgZpkDZLR9vXhKGOH7pYmDdXjxH2RzpYgcR2M1Ypn0qVK8TNeDx1cbqlfOQrc+SrbBYzUhZuU5fLHrfVb9xCmbbCV7uUqugLYcMRQUolpcF2DKsGHHeSAaVzaODLevE9djgWAIVqkrTTUzV-srxGPBfDi3aQmHUjkPLrTwpPcbUvKHJRevbPf2C1K1wckgdLQzXE1oTq0fd3bYT+HQRdgaUrlRDwoHQJF-bSAHQyF-ZPrLvKmwyPbEgfZjVg9zYrqdawnBa5Bdh7WVjACKHEZHALNABEHEHmCGpuEbDQ9x3cyw7SB4Nw5Bhvo0ELVxlIBaBqhqm5BAX+Rdk0jDTfmQXhi-dxBJRzG3Z-aw8HvdvFokiJSw8QXnvjuMvBcU8nfxNYCukJBoBcH5gaT5nXhHN4CBnQwWpGCBhdyBh0mrR5U0+uh0-5kg4lqUpUoXbaE0iAA","body":"function is_evaluated_thunk(obj) {\n    return is_tagged_list(obj, \"evaluated_thunk\");\n}\nfunction thunk_value(evaluated_thunk) { \n    return head(tail(evaluated_thunk));\n}\n\nfunction force_it(obj) {\n    if (is_thunk(obj)) {\n        const result = actual_value(thunk_exp(obj), thunk_env(obj));\n        set_head(obj, \"evaluated_thunk\");\n        set_head(tail(obj), result);  // replace exp with its value\n        set_tail(tail(obj), null);    // forget unneeded env\n        return result;\t\n    } else if (is_evaluated_thunk(obj)) {\n        return thunk_value(obj);\n    } else {\n        return obj;\n    }\n} "},{"body":"\n    Notice that the same\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"delay_it"},{"body":"function\n    works both with and\n    without memoization.","tag":"#text"}]},{"tag":"EXERCISE","title":"Exercise 4.25","id":"#ex-4.25","child":[{"body":"\n  Suppose we type in the following\n  \n      declarations\n    \n  to the lazy evaluator:\n  ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":13,"eval":true,"prependLength":543,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQCZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMfeMAHcqFABahWNACZUCVMgENqdRgRpNQAG0UAvAJ6gApgDdFWostolBoRWTIbZJAOagKNDnETJ0WDLjE5CokxmYWykYAFI6sAA50RiQUADTGJCYAlKAA3tigBUxGFERMoVT0APpaokZM5jFsCSRJFJn5BZ1dAPzatfValeFE0bHNre1dU6AAXKAVlSSKrKNNicmT0529WjQ0ANZEcZX0+qwARjSDw9GnF1eVNASLy6vx621pSVkdW7PzVUUcTiNSUIUa7xaG1+W16QJB+ii9hK5iG5hGUSClGslSMAA84kV6PRrBDxhsvhlMikYX9poomC5cQSiSTVGSPtT0j86f8FjQ4nVlBpKrFzlQluCxpzaVNeqZ0ZEogKhR4mKK2OLJTiPJV4aCrHQOVDPtzNn85gtHCRZCEGtKTebYWFUdbbdZ7WsTZSeXTLVUdBdpIpmYSjMTSQ6JrKepJFPsjJUseDA+dg5U4gzXhQ6iczpctPRjRMabyy1NU+nLtJEVGKWaY51-ScjABHEbkN7ktqNgry8It9tJMi3NsdkcnCiRFbJIt103fJ3TZvnXZkfbF6G8-uo1c0deb1IN3nNoolMqT6etQ9LuUuwZn0okS85mcUQ8+29dZvJnHSIxkDo9RSl60bbvelg5pipDYnQlT-oBlS6ta9BTsk8EAVoN6fr2fJVAhQGGiQN64TugwEVmIGQq0OEngCeoRi4JBviR4EKoMiiMcx17zrRfrGEwLBMB+oAAESkPsJA0EIoSnMkih4qAAC0SkQZEomZAA3NgAC+gQwSEdiUJY1zotE+JxJ+uQdI+ZSEBoE6iFE7GQeZBKflpun6cE1h9KhjzPAyTI3EWFn0FZOQAJA2cUT5xnEzkEqAAC8AB8RkoqZFhuZZZpfAS9CeXpv50H5FABRhOj6EY0h6oyoUFRF0WFLFdmsECiVxCl6X-lVlRORZn75XEhXaXp2AlaE+qIkEaRBeFZrWQUcigFECyElQrCiFQJiJpN0EkJk2R5NMtlTcCWj6BmTCbdtu1JgZpK4Vss2gM90w1P5Tx1cFZlFvNHmaeWBT4GQYiKK4NUdDpxiFkY8wEKtVprKQtX7UER1LVMKEUKARJEFouPJWpUHvcDk2VNWM2kNSZPlviOY2riGRUCw3HJFEdPAwUFOZvUKw5kwRYY6W3Pc595Xfb1ijVbV81IvVQ2gKD4OQ9IXO8hT3ys3QLEY0d2mna15RVGdaLZVE+OE1+0y9GbNwask15Wz2wNzKjRjyC00iG6AMNGHDWNdHUQkHWk4kkJJ0mhJN7j6IKymqdNGm+3p42x+xjvunQnrUckTUxeeJtIUwRDiIiyImebGJuttOeDGGshgl2nIeb2ZGuY0Np10sgwoWOPGgfWi69nMLlKrXdocYTdTart2FmmN3mwaEmf0APnZRKhrAUAti5BwjSNVEY8QUFd69Dpv2+75jJ1bGdoAe17NW+wU-uByta0Bpx5WoVeHPX0KsdRsD9x5QXkELX+U5XzXkAVyRcr8-aw3XgfLoONCCs38tfau8NibvTAdECBWDoEn1gRQHehVPyIK6J-BY9szKYkwVAneODb7vQfkQ5h5UbjUM6O-FBd9eSgIHBfcc0QiRQP-rvLe5Cb5UMbHpLoadl6GXoEoZ8NAy4YUApRawc4h5tAPg-BYojhwt0dM9OEDgiCsAJkqeESRpCizFlsEgBMtDOJcVMdqCU1EQ0eFoiiwE9GeK8VsUxnYXykNnDeI6z1mxBKIqxcCEsoiJJCHme4WF5xxLLHMNxWgtBLwmo9Uqmc9wHl4otQRoB0FUxSqACp+xKYyFrAYzyaDVC4zXOYRgxM-EaMCZhXR7IqYdM6Og0gnESRMRqn0sqFUplcRqlEHphZxktSLiTaIVN8qM1qtrNmLE1nhQ1mEssSyZnewWmc85dJFxFRKT5UqEtFlLGWdILe+YriFSMcbeKXysndTEgAKkuVQWZ0gQWiTSHcAso0vJPJXveSoZs-4wI5lU-eNSH7tQTKi42ODnLDCVGbCyrJIztNCXc4GDzikZwHNMiF7N3xYqpAfdBNwGkEKRFxN8ODQwUqNDk6lNKEEwiZUxTJBYiWSpZdKq4C8bjyK6A-HhiKGWonSZSvOR5sUSq4gqrKGJGzargnCxVIq3p-B5Wa58DtyXhjZMRK1i5RWLxhA-J+EoX4atKcXAhtVxASWVOcAAVsA1V-yFhThcC4Gq1QKjvhoOG8OgakJiAkinLysdg2RyJemvN+xjrWs6A-MQRhFCfKnFQLChbM2RwNn655McHKJicimiNB9aFVCLaGiNkatjoJdg0yuqIbhRCLaGftXIp3fBnRsqY69yoVqrf2tNJKcxBobfsbNfxl2VFXdWxQtaZ1pBdlpEGYAiggnsPDCyoARDiHmLvUANxGwHprVhL9Z7QAFK0Jezo+B1CMmKI-EgLQao1W5CA-5LtNLNT4cg+GPbcSboTX2ztbC-gPynROrDiD+HwxqVGrZnbCPNuRdLK6A13LVMQ5suKqTRJFphcYOj4rir+voph8NJbOieujb2xQcaE2pM7eHVjjzc07unUWkt5bK3HtPfJy96duNzoyJOndCn-lHsnSe79hntMSSOmp3AwH-VqBYOwKA3huDoH4AEJFhkY0ifjbVVJVTxCJljYOxjdl1onuEjk0AAAyMLoB9OheSrF9wFakIifpdxhYNRBa527P5vGQnEuic80mkSok0tCi0NmrjLa+jpeNeYiYuQuiCa2fpn9OTHkud8nixMxWBhRBuFlh+zGuvmDY715LFWFhLBWDeP5Wy3N5cTahQrE2jBlZUe1+MiYluAoLH1-5zGltsYtQB0byLDsVU26FnFemlMGdPS147rnAR8sHrqnbM3hNza8wY8Ocq3wrdjj91oRqpuXca9dn9TXjMtabeV5FAP0IOpZE6nVmXptxQhypyH7ToerdKgsO1wOGtxVmx5+brKvtiRxhDcqdqNKgAAD50+esTsTBWqmiTMDdRQq5Ew0+yAzpn72Sefd1eHCmvP7u+TtUDi7hO7Kne+pt9H2SsfSe41LhHYYIzCvaajuySubvK5e9jtrpUOuOz-uhfHS20ga6FYdXXoRmOU8t8M4JdA2PW7fWZQVSO6Ctdjql5YaYQyOq1y6nXIOieC5ZwttnlYQ+I7D397j8eMxZgFrmQ7+iXsO4BfL54nv9dQ6XrHVPVMCekbR2D4zzWVcS9N+t6oQf0yh+dVEPm2Y6gLTGbngbzeE+a+dWxjvGehZpDGfX4uYvXdJIu5FerlfAvR-y7H8nolp86LdyQZPFWN+EQyediPsvHdJoJQQESvBVe7-9do-fOIR-FC7xXstu3T9FHP1UjAV-kV75Gc+cvMui+J+-k7+IkAAzN-oZHvkhDQObmhNTphM-gFqEGbs7ggZvkklzL-lvi8JNiKlzGbqnq3k9OctgURGnvzI-kLNhLcoQDflLgAXXpRg9gSkXFEixIAcgTxu5jHmTiLmJGiiQr9pAb5GSonm3pwdlqDmurXkbpPvRJPB6IbijpHkvrlkLqzmvoofXD7knnzozmWMzivnwd2OHNob3Owa0DvsiuYaiI3AoBPEfi-lsq8qAVUpfiXtxrYX3KoBvCYZyEHP1m-p7CJF-p4RVt4XqDPGUFYPPJIUESASEVUhAfISYhvCODIjvP5sYsvqTpkUeKJBEiONYaoukYmOitEtItfPxqWlIVXjIcZtUSIaVJwpYQArIr8oIopmunAuEcihIm0VUR0dkf8j+r0TmilsfKfOfGUfkZ0b8DkYsO4nMc0cXDoMQlIisYETlv+gbisf7pMZTGuBuJIXUWobGhoavvwaJE0iUb5E0i0jWEgWcaEEXljn0YZGbk0jIlIq9kxgVjcccQdkIRMKkVUCqMBCKGKBKLPhHvPgJkAfRFMkwFdBCcKOqNCdqNrjnvzoYVUFqAyKiYKJCRiZqDCVRJlh8b5AsMiUSaqFCWSVieHjnlFAvs4VHuobwYVrSY8MSeiRqBcOSdYHcbjviTCSibyfSaSYKUycDvCQUMftwR9podcQSRKWiWqAKQSSECKaEBqSKIds8QkeVG4eTh4RMbvkwpKfUDaEaa-okR-uTmERaSdgBHQLVGibaaccaWfuAQcRVmbvqA4eCFrOIdYHNIyDYoDsQaoH8XZMxkGWCMKe6n8KGYPuGXYJGfyjGQwP6civqdKdqTqLAYmbCSyTCOggWQ0gWdLu0ogosTyTWZiWWZlpYnGPiqWeCGbptgWbTDSnSKkq0Z6Z8lDvEu2YmJ2aSN2a8MqHyWqH2f2VsIOVacOTQYueWOvG6NaRDCOUwepmNoCBdMGcjgEV0TlhcVyWzpOe7qsXQS2roRIU4VwW8XIS6YZEFA+Xokgd0cpkZrdnuRZmAJNNZmwF4FwL4HwGgGATjsXBQKXOXFEHiHGcXJcFcJWsREhbUX8L0HiGOSHBoIheHKhVoOhexoKJQDVOegBEYDtDVLqfRAQL0oiJhTkC8aAAAIQ8bwViDMXmYm4oGN77QP6Czd6tIRSKlO4oxMyTTD7p5UGiU1jyIw4sHSiowPQtqYjIVKmXHvgEBmFSVoz+r0W8xyUiWaV1Y+mgF6WgAeF+wwV3kryPEzS6YuHBHn7WVhF2X8UOUZKHK6zXgEAuX-EOmYhpApFeWxxm70IWzWiMyGKqHAHviiTRUjBsaxWglvnUmmyEoTq9a55GF5HKoCE5VmT0UpWJjpUcx5UJVRbV6nq9Z5mGTDi7AkiuDMwmA6wsrOTsqsW4bGYIIRXcatEECUHdVZAWVXZroDXjToI+a4jTHtWdVvgNL-raTeVm4jUzlZ425-RBV2SZisxbY-I7XZSjSDW76UFGrCyUF7WvHXabUrB8WxwPWJghSYg3UTVbI-ovVPXcYMyOKLVHKwLfKFgnXd6cSJj6qIkkWuDiBHXrIpRxYw0uBw3hCFRtkHXCQbWjXbVe7rLj4Q3tU2xNjaBJAo1iDw2-IAA8pNsNFNaNxNfYAkocLGewcYJAhgQUUZs4oA9ARwIIVANUcwokoAAA1FhWLKhDdK4HIIiFntkOLWxiLeLbQVLRKC4LLT1r0rknRPhcJKzZ4AQEYEIJmS4Nza+nzUeULWJGLRLdzGrTLQQHLSDb8oreHLbarXBerZrQzY1b5LsAcEcEakSoduJV0BnBkNUHsAlFDS9NxgMpTWDVljhjscsfLbQfKJHQHTHeQC1erYDf5RzA8rQXMIdojcTPpunecr0PpgzSXbzeonsfLWkD+r7bwm-I2J-N8OXfFpDQtX5SysnVsHrfDeHKQJcKjH+q8HulsERqgkOl0swK8A0sNaNeKuWA-AnS9Vde9a8FyNvW9T9YukojCIouyXZN8FHQKGNX7aVHKsHROqHXjWHZ0BHSYFfTneNSRq-fHY3bjQzfPUbG9ksYUpTYzXSJne-dnd1YBDQK1UyAPSxMXecqXSDT3ZXS7eA9hbzcUIetdmjSdVg1sKXY3WMZgy3cZm3QonbctIjGNT3XNSfHEGfAXYPYA1MCPU-RHBPTaFPSsInHYE9skDPdMHPd-dMOgi9SvVaS9Tfe3VMJvY3dvVnrvY9WkAfX9Ko0YE2n8GfR3YiZfdA5xoBT5XoswKBXZuBTwPwCgPZetDdFtNQPdOjDTPlbkYOaQOHBtI47RStt5d43dO2vECRW+EkhjJ9fUb+QdAbF5eggE043tFZg0qkjGMxkemxp0EesDAuRWACV+hkwUF+tk6KsxpjQU6AJjcU6kwCRLOUxLFU0uQCeNu4mxs04UryDk10MxrIPQLevoGxj030x0yUwCXrQU3reWJ050Mxu1OIHqOcPQDCrM2IPM4wH8FMwUMxqLeU50IRaAPoNkGlKAIpOLYYKABs2VFEKJEpDswUHswc8CopKpGcxc8xkpLSQU4pF0EcwUKpF868wCdCmkNMPc4c+lIpCCvswUACwtqJMALc6tHiGkA80c4pGAC8yM7CwAKQIuguPOgBYtQvnOYtJWxbJQ7N4uos90HMktXPsWxYUtIv7NgvHMcVxY0vVOwtU24tMsovgugA00FAcuNNcvkvAtdCUv8tU3EzMu0uiSpQ8vIssuKTpRCswtJWpRisgu8vKugCatqtyvsUIusvfOqscWdBIUxieRxMOOBPqWOVZ4pQwg+JRBHppDxO0X2shAIo2u3QJNes4idoASvrJTOsdRBDAqlO2sJNsb676wXMVPRuevAWeTYC+s+P3RoHzKpLMberexsZ5s1QJvrmXOiSQAkBeyiD9PAvluVtnzFvrkzPKArOwCQAFPLOVCtsNuLlNtzMACi5THbfb3b-ZzGAAcooGOwixO2O0Q+cta4vR65m10lTldU610C62QMCtFlyEuxVSu7OAuwwLjHu3AauyFOu50Ju9u3VdkkdO60m8u8e1Tgit5dNNdH68m-6mHKbRLFpe+xKJUB7EwJdPnWGooGYGojdMw5zGLKe5tCCJUWEzTBGS4H+-IcukHYg9eFpf9UzNhxzA4raaexTNtbQWEqe2gVdSO2EkR58iRzfkG5QDciW+WJRwe9wrtSmTSow-3SzEDRsMUrNQlmhymqiAR0TDgyUMcBJ1EKm7mrAQ7S4P2sG1pcjO8GpftEx67OBKJFTapTaEpJNAq2OfY5+849+9p+A70Hp3u0Z-6iZ3kvRJjSp5QNZ2JAANrK3uCKde2uCuvXZWcK1iThxnLi26hKd7FBe22iQAC6okY5SnmtVn8hRA686oG0HMhITQUC0tLgaQVnB8gzVUVzKkZX5XFXlXVXNz3HBQ2Xp8k4eXMXAAOtvrbRF358p4V4ra1347HGl7mEUGuvV8w41+rVpSN++JN2N64K1ughKHEFopNw0qJAADJKQELzAkCLcUDC3aSVllw7fXQ5crfrebc3B7f2XSA3S7TqhGM9UVmL0LdlwNIDfqhDefLPflSTeLqoa7FffYZbDFcyylcqQkwaDuB1BbSSjQZldK0iNIIBwCKmoVB9Og-VcY8Y8woaxffHenwtdtfi1fcE8I+dLHuJs0AuD8wNJ8zrxrTbdlzH0TKL0nINIDIBLoF37sjZdU-LBM8FCTLvJXJzLJOn7fTgqQqrL7ja3yM2uU-8ztXcp4j7KsPHLS+g3gZypzIqoL3k+aIUA7ejrGTjoMI8-8wPvy-LBE3yNvcfscz69HeTcFeHeM-yMPzXe0V3fR3t4sC8+sDW+n2Iq4Ae+3cf3aaJiifnDif8eF1tBrX4BnfoZbc7czC2AkW4yOCkCScAAMQMAenyLFtSmiyQDSmfJf4tvAQMD8eIQMekCfG3SfF3b0+Ahb6stgifioOYyfZcqfoMi9JtxMVAn3nyvA2fTa9f53ZkcwtgrfJjHfEQXfX3vfYAZfFA2kE-jfU-tgVNRIzQ68qUc-DfnfKGDPu3tgQg6-YA8-rkeNIwy-Aru-vhB-7fR-C-J-Kftgq-l-oA1-kQt-Rg9-HfuGD35GBUoQAA","body":"let count = 0;\nfunction id(x) {\n    count = count + 1;\n    return x;\n} "},{"body":"\n  Give the missing values in the following sequence of interactions, and explain\n  your answers.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-5","body":"5","href":"/sicpjs/4.2.2#footnote-5"},{"tag":"SNIPPET","latex":false,"id":14,"eval":true,"prependLength":543,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQCZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMfeMAHcqFABahWNACZUCVMgENqdRgRpNQAG0UAvAJ6gApgDdFWostolBoRWTIbZJAOagKNDnETJ0WDLjE5CokxmYWykYAFI6sAA50RiQUADTGJCYAlKAA3tigBUxGFERMoVT0APpaokZM5jFsCSRJFJn5BZ1dAPzatfValeFE0bHNre1dU6AAXKAVlSSKrKNNicmT0529WjQ0ANZEcZX0+qwARjSDw9GnF1eVNASLy6vx621pSVkdW7PzVUUcTiNSUIUa7xaG1+W16QJB+ii9hK5iG5hGUSClGslSMAA84kV6PRrBDxhsvhlMikYX9poomC5cQSiSTVGSPtT0j86f8FjQ4nVlBpKrFzlQluCxpzaVNeqZ0ZEogKhR4mKK2OLJTiPJV4aCrHQOVDPtzNn85gtHCRZCEGtKTebYWFUdbbdZ7WsTZSeXTLVUdBdpIpmYSjMTSQ6JrKepJFPsjJUseDA+dg5U4gzXhQ6iczpctPRjRMabyy1NU+nLtJEVGKWaY51-ScjABHEbkN7ktqNgry8It9tJMi3NsdkcnCiRFbJIt103fJ3TZvnXZkfbF6G8-uo1c0deb1IN3nNoolMqT6etQ9LuUuwZn0okS85mcUQ8+29dZvJnHSIxkDo9RSl60bbvelg5pipDYnQlT-oBlS6ta9BTsk8EAVoN6fr2fJVAhQGGiQN64TugwEVmIGQq0OEngCeoRi4JBviR4EKoMiiMcx17zrRfrGEwLBMB+oAAESkPsJA0EIoSnMkih4qAAC0SkQZEomZAA3NgAC+gQwSEdiUJY1zotE+JxJ+uQdI+ZSEBoE6iFE7GQeZBKflpun6cE1h9KhjzPAyTI3EWFn0FZOQAJA2cUT5xnEzkEqAAC8AB8RkoqZFhuZZZpfAS9CeXpv50H5FABRhOj6EY0h6oyoUFRF0WFLFdmsECiVxCl6X-lVlRORZn75XEhXaXp2AlaE+qIkEaRBeFZrWQUcigFECyElQrCiFQJiJpN0EkJk2R5NMtlTcCWj6BmTCbdtu1JgZpK4Vss2gM90w1P5Tx1cFZlFvNHmaeWBT4GQYiKK4NUdDpxiFkY8wEKtVprKQtX7UER1LVMKEUKARJEFouPJWpUHvcDk2VNWM2kNSZPlviOY2riGRUCw3HJFEdPAwUFOZvUKw5kwRYY6W3Pc595Xfb1ijVbV81IvVQ2gKD4OQ9IXO8hT3ys3QLEY0d2mna15RVGdaLZVE+OE1+0y9GbNwask15Wz2wNzKjRjyC00iG6AMNGHDWNdHUQkHWk4kkJJ0mhJN7j6IKymqdNGm+3p42x+xjvunQnrUckTUxeeJtIUwRDiIiyImebGJuttOeDGGshgl2nIeb2ZGuY0Np10sgwoWOPGgfWi69nMLlKrXdocYTdTart2FmmN3mwaEmf0APnZRKhrAUAti5BwjSNVEY8QUFd69Dpv2+75jJ1bGdoAe17NW+wU-uByta0Bpx5WoVeHPX0KsdRsD9x5QXkELX+U5XzXkAVyRcr8-aw3XgfLoONCCs38tfau8NibvTAdECBWDoEn1gRQHehVPyIK6J-BY9szKYkwVAneODb7vQfkQ5h5UbjUM6O-FBd9eSgIHBfcc0QiRQP-rvLe5Cb5UMbHpLoadl6GXoEoZ8NAy4YUApRawc4h5tAPg-BYojhwt0dM9OEDgiCsAJkqeESRpCizFlsEgBMtDOJcVMdqCU1EQ0eFoiiwE9GeK8VsUxnYXykNnDeI6z1mxBKIqxcCEsoiJJCHme4WF5xxLLHMNxWgtBLwmo9Uqmc9wHl4otQRoB0FUxSqACp+xKYyFrAYzyaDVC4zXOYRgxM-EaMCZhXR7IqYdM6Og0gnESRMRqn0sqFUplcRqlEHphZxktSLiTaIVN8qM1qtrNmLE1nhQ1mEssSyZnewWmc85dJFxFRKT5UqEtFlLGWdILe+YriFSMcbeKXysndTEgAKkuVQWZ0gQWiTSHcAso0vJPJXveSoZs-4wI5lU-eNSH7tQTKi42ODnLDCVGbCyrJIztNCXc4GDzikZwHNMiF7N3xYqpAfdBNwGkEKRFxN8ODQwUqNDk6lNKEEwiZUxTJBYiWSpZdKq4C8bjyK6A-HhiKGWonSZSvOR5sUSq4gqrKGJGzargnCxVIq3p-B5Wa58DtyXhjZMRK1i5RWLxhA-J+EoX4atKcXAhtVxASWVOcAAVsA1V-yFhThcC4Gq1QKjvhoOG8OgakJiAkinLysdg2RyJemvN+xjrWs6A-MQRhFCfKnFQLChbM2RwNn655McHKJicimiNB9aFVCLaGiNkatjoJdg0yuqIbhRCLaGftXIp3fBnRsqY69yoVqrf2tNJKcxBobfsbNfxl2VFXdWxQtaZ1pBdlpEGYAiggnsPDCyoARDiHmLvUANxGwHprVhL9Z7QAFK0Jezo+B1CMmKI-EgLQao1W5CA-5LtNLNT4cg+GPbcSboTX2ztbC-gPynROrDiD+HwxqVGrZnbCPNuRdLK6A13LVMQ5suKqTRJFphcYOj4rir+voph8NJbOieujb2xQcaE2pM7eHVjjzc07unUWkt5bK3HtPfJy96duNzoyJOndCn-lHsnSe79hntMSSOmp3AwH-VqBYOwKA3huDoH4AEJFhkY0ifjbVVJVTxCJljYOxjdl1onuEjk0AAAyMLoB9OheSrF9wFakIifpdxhYNRBa527P5vGQnEuic80mkSok0tCi0NmrjLa+jpeNeYiYuQuiCa2fpn9OTHkud8nixMxWBhRBuFlh+zGuvmDY715LFWFhLBWDeP5Wy3N5cTahQrE2jBlZUe1+MiYluAoLH1-5zGltsYtQB0byLDsVU26FnFemlMGdPS147rnAR8sHrqnbM3hNza8wY8Ocq3wrdjj91oRqpuXca9dn9TXjMtabeV5FAP0IOpZE6nVmXptxQhypyH7ToerdKgsO1wOGtxVmx5+brKvtiRxhDcqdqNKgAAD50+esTsTBWqmiTMDdRQq5Ew0+yAzpn72Sefd1eHCmvP7u+TtUDi7hO7Kne+pt9H2SsfSe41LhHYYIzCvaajuySubvK5e9jtrpUOuOz-uhfHS20ga6FYdXXoRmOU8t8M4JdA2PW7fWZQVSO6Ctdjql5YaYQyOq1y6nXIOieC5ZwttnlYQ+I7D397j8eMxZgFrmQ7+iXsO4BfL54nv9dQ6XrHVPVMCekbR2D4zzWVcS9N+t6oQf0yh+dVEPm2Y6gLTGbngbzeE+a+dWxjvGehZpDGfX4uYvXdJIu5FerlfAvR-y7H8nolp86LdyQZPFWN+EQyediPsvHdJoJQQESvBVe7-9do-fOIR-FC7xXstu3T9FHP1UjAV-kV75Gc+cvMui+J+-k7+IkAAzN-oZHvkhDQObmhNTphM-gFqEGbs7ggZvkklzL-lvi8JNiKlzGbqnq3k9OctgURGnvzI-kLNhLcoQDflLgAXXpRg9gSkXFEixIAcgTxu5jHmTiLmJGiiQr9pAb5GSonm3pwdlqDmurXkbpPvRJPB6IbijpHkvrlkLqzmvoofXD7knnzozmWMzivnwd2OHNob3Owa0DvsiuYaiI3AoBPEfi-lsq8qAVUpfiXtxrYX3KoBvCYZyEHP1m-p7CJF-p4RVt4XqDPGUFYPPJIUESASEVUhAfISYhvCODIjvP5sYsvqTpkUeKJBEiONYaoukYmOitEtItfPxqWlIVXjIcZtUSIaVJwpYQArIr8oIopmunAuEcihIm0VUR0dkf8j+r0TmilsfKfOfGUfkZ0b8DkYsO4nMc0cXDoMQlIisYETlv+gbisf7pMZTGuBuJIXUWobGhoavvwaJE0iUb5E0i0jWEgWcaEEXljn0YZGbk0jIlIq9kxgVjcccQdkIRMKkVUCqMBCKGKBKLPhHvPgJkAfRFMkwFdBCcKOqNCdqNrjnvzoYVUFqAyKiYKJCRiZqDCVRJlh8b5AsMiUSaqFCWSVieHjnlFAvs4VHuobwYVrSY8MSeiRqBcOSdYHcbjviTCSibyfSaSYKUycDvCQUMftwR9podcQSRKWiWqAKQSSECKaEBqSKIds8QkeVG4eTh4RMbvkwpKfUDaEaa-okR-uTmERaSdgBHQLVGibaaccaWfuAQcRVmbvqA4eCFrOIdYHNIyDYoDsQaoH8XZMxkGWCMKe6n8KGYPuGXYJGfyjGQwP6civqdKdqTqLAYmbCSyTCOggWQ0gWdLu0ogosTyTWZiWWZlpYnGPiqWeCGbptgWbTDSnSKkq0Z6Z8lDvEu2YmJ2aSN2a8MqHyWqH2f2VsIOVacOTQYueWOvG6NaRDCOUwepmNoCBdMGcjgEV0TlhcVyWzpOe7qsXQS2roRIU4VwW8XIS6YZEFA+Xokgd0cpkZrdnuRZmAJNNZmwF4FwL4HwGgGATjsXBQKXOXFEHiHGcXJcFcJWsREhbUX8L0HiGOSHBoIheHKhVoOhexoKJQDVOegBEYDtDVLqfRAQL0oiJhTkC8aAAAIQ8bwViDMXmYm4oGN77QP6Czd6tIRSKlO4oxMyTTD7p5UGiU1jyIw4sHSiowPQtqYjIVKmXHvgEBmFSVoz+r0W8xyUiWaV1Y+mgF6WgAeF+wwV3kryPEzS6YuHBHn7WVhF2X8UOUZKHK6zXgEAuX-EOmYhpApFeWxxm70IWzWiMyGKqHAHviiTRUjBsaxWglvnUmmyEoTq9a55GF5HKoCE5VmT0UpWJjpUcx5UJVRbV6nq9Z5mGTDi7AkiuDMwmA6wsrOTsqsW4bGYIIRXcatEECUHdVZAWVXZroDXjToI+a4jTHtWdVvgNL-raTeVm4jUzlZ425-RBV2SZisxbY-I7XZSjSDW76UFGrCyUF7WvHXabUrB8WxwPWJghSYg3UTVbI-ovVPXcYMyOKLVHKwLfKFgnXd6cSJj6qIkkWuDiBHXrIpRxYw0uBw3hCFRtkHXCQbWjXbVe7rLj4Q3tU2xNjaBJAo1iDw2-IAA8pNsNFNaNxNfYAkocLGewcYJAhgQUUZs4oA9ARwIIVANUcwokoAAA1FhWLKhDdK4HIIiFntkOLWxiLeLbQVLRKC4LLT1r0rknRPhcJKzZ4AQEYEIJmS4Nza+nzUeULWJGLRLdzGrTLQQHLSDb8oreHLbarXBerZrQzY1b5LsAcEcEakSoduJV0BnBkNUHsAlFDS9NxgMpTWDVljhjscsfLbQfKJHQHTHeQC1erYDf5RzA8rQXMIdojcTPpunecr0PpgzSXbzeonsfLWkD+r7bwm-I2J-N8OXfFpDQtX5SysnVsHrfDeHKQJcKjH+q8HulsERqgkOl0swK8A0sNaNeKuWA-AnS9Vde9a8FyNvW9T9YukojCIouyXZN8FHQKGNX7aVHKsHROqHXjWHZ0BHSYFfTneNSRq-fHY3bjQzfPUbG9ksYUpTYzXSJne-dnd1YBDQK1UyAPSxMXecqXSDT3ZXS7eA9hbzcUIetdmjSdVg1sKXY3WMZgy3cZm3QonbctIjGNT3XNSfHEGfAXYPYA1MCPU-RHBPTaFPSsInHYE9skDPdMHPd-dMOgi9SvVaS9Tfe3VMJvY3dvVnrvY9WkAfX9Ko0YE2n8GfR3YiZfdA5xoBT5XoswKBXZuBTwPwCgPZetDdFtNQPdOjDTPlbkYOaQOHBtI47RStt5d43dO2vECRW+EkhjJ9fUb+QdAbF5eggE043tFZg0qkjGMxkemxp0EesDAuRWACV+hkwUF+tk6KsxpjQU6AJjcU6kwCRLOUxLFU0uQCeNu4mxs04UryDk10MxrIPQLevoGxj030x0yUwCXrQU3reWJ050Mxu1OIHqOcPQDCrM2IPM4wH8FMwUMxqLeU50IRaAPoNkGlKAIpOLYYKABs2VFEKJEpDswUHswc8CopKpGcxc8xkpLSQU4pF0EcwUKpF868wCdCmkNMPc4c+lIpCCvswUACwtqJMALc6tHiGkA80c4pGAC8yM7CwAKQIuguPOgBYtQvnOYtJWxbJQ7N4uos90HMktXPsWxYUtIv7NgvHMcVxY0vVOwtU24tMsovgugA00FAcuNNcvkvAtdCUv8tU3EzMu0uiSpQ8vIssuKTpRCswtJWpRisgu8vKugCatqtyvsUIusvfOqscWdBIUxieRxMOOBPqWOVZ4pQwg+JRBHppDxO0X2shAIo2u3QJNes4idoASvrJTOsdRBDAqlO2sJNsb676wXMVPRuevAWeTYC+s+P3RoHzKpLMberexsZ5s1QJvrmXOiSQAkBeyiD9PAvluVtnzFvrkzPKArOwCQAFPLOVCtsNuLlNtzMACi5THbfb3b-ZzGAAcooGOwixO2O0Q+cta4vR65m10lTldU610C62QMCtFlyEuxVSu7OAuwwLjHu3AauyFOu50Ju9u3VdkkdO60m8u8e1Tgit5dNNdH68m-6mHKbRLFpe+xKJUB7EwJdPnWGooGYGojdMw5zGLKe5tCCJUWEzTBGS4H+-IcukHYg9eFpf9UzNhxzA4raaexTNtbQWEqe2gVdSO2EkR58iRzfkG5QDciW+WJRwe9wrtSmTSow-3SzEDRsMUrNQlmhymqiAR0TDgyUMcBJ1EKm7mrAQ7S4P2sG1pcjO8GpftEx67OBKJFTapTaEpJNAq2OfY5+849+9p+A70Hp3u0Z-6iZ3kvRJjSp5QNZ2JAANrK3uCKde2uCuvXZWcK1iThxnLi26hKd7FBe22iQAC6okY5SnmtVn8hRA686oG0HMhITQUC0tLgaQVnB8gzVUVzKkZX5XFXlXVXNz3HBQ2Xp8k4eXMXAAOtvrbRF358p4V4ra1347HGl7mEUGuvV8w41+rVpSN++JN2N64K1ughKHEFopNw0qJAADJKQELzAkCLcUDC3aSVllw7fXQ5crfrebc3B7f2XSA3S7TqhGM9UVmL0LdlwNIDfqhDefLPflSTeLqoa7FffYZbDFcyylcqQkwaDuB1BbSSjQZldK0iNIIBwCKmoVB9Og-VcY8Y8woaxffHenwtdtfi1fcE8I+dLHuJs0AuD8wNJ8zrxrTbdlzH0TKL0nINIDIBLoF37sjZdU-LBM8FCTLvJXJzLJOn7fTgqQqrL7ja3yM2uU-8ztXcp4j7KsPHLS+g3gZypzIqoL3k+aIUA7ejrGTjoMI8-8wPvy-LBE3yNvcfscz69HeTcFeHeM-yMPzXe0V3fR3t4sC8+sDW+n2Ioe+3cf3aaJiifnDif8eF1tBrX4BnfoZbc7czC2AkW4yOCkCScAAMQMAenyLFtSmiyQDSGfxf4tvAQMD8eIQMek8fG3ifF3b0+Ahb6stgCfioOYSfZcKfoMi9JtxMVAn3nyvAWfTadf53ZkcwtgLfJj7fEQnfX3PfYApfFA2k4-Dfk-tgVNRIzQ68qUs-9fHfKGDPu3tgQga-YAc-rkeNIwS-ArO-vh+-bfh-8-x-yftgK-F-oAV-kQN-Rgd-2-cMLvyMCpQgAA","body":"const w = id(id(10)); "},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nL-evaluate input:\n    \ncount;\n    \nL-evaluate value:\n$\\langle{}$response$\\rangle$\n    "},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nL-evaluate input:\n    \nw;\n    \nL-evaluate value:\n$\\langle{}$response$\\rangle$\n    "},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nL-evaluate input:\n    \ncount;\n    \nL-evaluate value:\n$\\langle{}$response$\\rangle$\n    "}]},{"tag":"EXERCISE","title":"Exercise 4.26","id":"#ex-4.26","child":[{"body":"\n\tThe function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    uses\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"actual_value"},{"body":"\n    rather than\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    to evaluate the\n    function expression\n    before passing it to\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":", in order to force the value of the\n    function expression.\n    Give an example that demonstrates the need for this forcing.\n    ","tag":"#text"}]},{"tag":"EXERCISE","title":"Exercise 4.27","id":"#ex-4.27","child":[{"body":"\n    Exhibit a program that you would expect to run much more slowly without\n    memoization than with memoization.  Also, consider the following\n    interaction, where the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"id"},{"body":"function\n    is defined as in exercise ","tag":"#text"},{"tag":"REF","body":"4.25","href":"/sicpjs/4.2.2#ex-4.25"},{"body":" and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"count"},{"body":" starts at 0:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":15,"eval":true,"prependLength":543,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQCZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMfeMAHcqFABahWNACZUCVMgENqdRgRpNQAG0UAvAJ6gApgDdFWostolBoRWTIbZJAOagKNDnETJ0WDLjE5CokxmYWykYAFI6sAA50RiQUADTGJCYAlKAA3tigBUxGFERMoVT0APpaokZM5jFsCSRJFJn5BZ1dAPzatfValeFE0bHNre1dU6AAXKAVlSSKrKNNicmT0529WjQ0ANZEcZX0+qwARjSDw9GnF1eVNASLy6vx621pSVkdW7PzVUUcTiNSUIUa7xaG1+W16QJB+ii9hK5iG5hGUSClGslSMAA84kV6PRrBDxhsvhlMikYX9poomC5cQSiSTVGSPtT0j86f8FjQ4nVlBpKrFzlQluCxpzaVNeqZ0ZEogKhR4mKK2OLJTiPJV4aCrHQOVDPtzNn85gtHCRZCEGtKTebYWFUdbbdZ7WsTZSeXTLVUdBdpIpmYSjMTSQ6JrKepJFPsjJUseDA+dg5U4gzXhQ6iczpctPRjRMabyy1NU+nLtJEVGKWaY51-ScjABHEbkN7ktqNgry8It9tJMi3NsdkcnCiRFbJIt103fJ3TZvnXZkfbF6G8-uo1c0deb1IN3nNoolMqT6etQ9LuUuwZn0okS85mcUQ8+29dZvJnHSIxkDo9RSl60bbvelg5pipDYnQlT-oBlS6ta9BTsk8EAVoN6fr2fJVAhQGGiQN64TugwEVmIGQq0OEngCeoRi4JBviR4EKoMiiMcx17zrRfrGEwLBMB+oAAESkPsJA0EIoSnMkih4qAAC0SkQZEomZAA3NgAC+gQwSEdiUJY1zotE+JxJ+uQdI+ZSEBoE6iFE7GQeZBKflpun6cE1h9KhjzPAyTI3EWFn0FZOQAJA2cUT5xnEzkEqAAC8AB8RkoqZFhuZZZpfAS9CeXpv50H5FABRhOj6EY0h6oyoUFRF0WFLFdmsECiVxCl6X-lVlRORZn75XEhXaXp2AlaE+qIkEaRBeFZrWQUcigFECyElQrCiFQJiJpN0EkJk2R5NMtlTcCWj6BmTCbdtu1JgZpK4Vss2gM90w1P5Tx1cFZlFvNHmaeWBT4GQYiKK4NUdDpxiFkY8wEKtVprKQtX7UER1LVMKEUKARJEFouPJWpUHvcDk2VNWM2kNSZPlviOY2riGRUCw3HJFEdPAwUFOZvUKw5kwRYY6W3Pc595Xfb1ijVbV81IvVQ2gKD4OQ9IXO8hT3ys3QLEY0d2mna15RVGdaLZVE+OE1+0y9GbNwask15Wz2wNzKjRjyC00iG6AMNGHDWNdHUQkHWk4kkJJ0mhJN7j6IKymqdNGm+3p42x+xjvunQnrUckTUxeeJtIUwRDiIiyImebGJuttOeDGGshgl2nIeb2ZGuY0Np10sgwoWOPGgfWi69nMLlKrXdocYTdTart2FmmN3mwaEmf0APnZRKhrAUAti5BwjSNVEY8QUFd69Dpv2+75jJ1bGdoAe17NW+wU-uByta0Bpx5WoVeHPX0KsdRsD9x5QXkELX+U5XzXkAVyRcr8-aw3XgfLoONCCs38tfau8NibvTAdECBWDoEn1gRQHehVPyIK6J-BY9szKYkwVAneODb7vQfkQ5h5UbjUM6O-FBd9eSgIHBfcc0QiRQP-rvLe5Cb5UMbHpLoadl6GXoEoZ8NAy4YUApRawc4h5tAPg-BYojhwt0dM9OEDgiCsAJkqeESRpCizFlsEgBMtDOJcVMdqCU1EQ0eFoiiwE9GeK8VsUxnYXykNnDeI6z1mxBKIqxcCEsoiJJCHme4WF5xxLLHMNxWgtBLwmo9Uqmc9wHl4otQRoB0FUxSqACp+xKYyFrAYzyaDVC4zXOYRgxM-EaMCZhXR7IqYdM6Og0gnESRMRqn0sqFUplcRqlEHphZxktSLiTaIVN8qM1qtrNmLE1nhQ1mEssSyZnewWmc85dJFxFRKT5UqEtFlLGWdILe+YriFSMcbeKXysndTEgAKkuVQWZ0gQWiTSHcAso0vJPJXveSoZs-4wI5lU-eNSH7tQTKi42ODnLDCVGbCyrJIztNCXc4GDzikZwHNMiF7N3xYqpAfdBNwGkEKRFxN8ODQwUqNDk6lNKEEwiZUxTJBYiWSpZdKq4C8bjyK6A-HhiKGWonSZSvOR5sUSq4gqrKGJGzargnCxVIq3p-B5Wa58DtyXhjZMRK1i5RWLxhA-J+EoX4atKcXAhtVxASWVOcAAVsA1V-yFhThcC4Gq1QKjvhoOG8OgakJiAkinLysdg2RyJemvN+xjrWs6A-MQRhFCfKnFQLChbM2RwNn655McHKJicimiNB9aFVCLaGiNkatjoJdg0yuqIbhRCLaGftXIp3fBnRsqY69yoVqrf2tNJKcxBobfsbNfxl2VFXdWxQtaZ1pBdlpEGYAiggnsPDCyoARDiHmLvUANxGwHprVhL9Z7QAFK0Jezo+B1CMmKI-EgLQao1W5CA-5LtNLNT4cg+GPbcSboTX2ztbC-gPynROrDiD+HwxqVGrZnbCPNuRdLK6A13LVMQ5suKqTRJFphcYOj4rir+voph8NJbOieujb2xQcaE2pM7eHVjjzc07unUWkt5bK3HtPfJy96duNzoyJOndCn-lHsnSe79hntMSSOmp3AwH-VqBYOwKA3huDoH4AEJFhkY0ifjbVVJVTxCJljYOxjdl1onuEjk0AAAyMLoB9OheSrF9wFakIifpdxhYNRBa527P5vGQnEuic80mkSok0tCi0NmrjLa+jpeNeYiYuQuiCa2fpn9OTHkud8nixMxWBhRBuFlh+zGuvmDY715LFWFhLBWDeP5Wy3N5cTahQrE2jBlZUe1+MiYluAoLH1-5zGltsYtQB0byLDsVU26FnFemlMGdPS147rnAR8sHrqnbM3hNza8wY8Ocq3wrdjj91oRqpuXca9dn9TXjMtabeV5FAP0IOpZE6nVmXptxQhypyH7ToerdKgsO1wOGtxVmx5+brKvtiRxhDcqdqNKgAAD50+esTsTBWqmiTMDdRQq5Ew0+yAzpn72Sefd1eHCmvP7u+TtUDi7hO7Kne+pt9H2SsfSe41LhHYYIzCvaajuySubvK5e9jtrpUOuOz-uhfHS20ga6FYdXXoRmOU8t8M4JdA2PW7fWZQVSO6Ctdjql5YaYQyOq1y6nXIOieC5ZwttnlYQ+I7D397j8eMxZgFrmQ7+iXsO4BfL54nv9dQ6XrHVPVMCekbR2D4zzWVcS9N+t6oQf0yh+dVEPm2Y6gLTGbngbzeE+a+dWxjvGehZpDGfX4uYvXdJIu5FerlfAvR-y7H8nolp86LdyQZPFWN+EQyediPsvHdJoJQQESvBVe7-9do-fOIR-FC7xXstu3T9FHP1UjAV-kV75Gc+cvMui+J+-k7+IkAAzN-oZHvkhDQObmhNTphM-gFqEGbs7ggZvkklzL-lvi8JNiKlzGbqnq3k9OctgURGnvzI-kLNhLcoQDflLgAXXpRg9gSkXFEixIAcgTxu5jHmTiLmJGiiQr9pAb5GSonm3pwdlqDmurXkbpPvRJPB6IbijpHkvrlkLqzmvoofXD7knnzozmWMzivnwd2OHNob3Owa0DvsiuYaiI3AoBPEfi-lsq8qAVUpfiXtxrYX3KoBvCYZyEHP1m-p7CJF-p4RVt4XqDPGUFYPPJIUESASEVUhAfISYhvCODIjvP5sYsvqTpkUeKJBEiONYaoukYmOitEtItfPxqWlIVXjIcZtUSIaVJwpYQArIr8oIopmunAuEcihIm0VUR0dkf8j+r0TmilsfKfOfGUfkZ0b8DkYsO4nMc0cXDoMQlIisYETlv+gbisf7pMZTGuBuJIXUWobGhoavvwaJE0iUb5E0i0jWEgWcaEEXljn0YZGbk0jIlIq9kxgVjcccQdkIRMKkVUCqMBCKGKBKLPhHvPgJkAfRFMkwFdBCcKOqNCdqNrjnvzoYVUFqAyKiYKJCRiZqDCVRJlh8b5AsMiUSaqFCWSVieHjnlFAvs4VHuobwYVrSY8MSeiRqBcOSdYHcbjviTCSibyfSaSYKUycDvCQUMftwR9podcQSRKWiWqAKQSSECKaEBqSKIds8QkeVG4eTh4RMbvkwpKfUDaEaa-okR-uTmERaSdgBHQLVGibaaccaWfuAQcRVmbvqA4eCFrOIdYHNIyDYoDsQaoH8XZMxkGWCMKe6n8KGYPuGXYJGfyjGQwP6civqdKdqTqLAYmbCSyTCOggWQ0gWdLu0ogosTyTWZiWWZlpYnGPiqWeCGbptgWbTDSnSKkq0Z6Z8lDvEu2YmJ2aSN2a8MqHyWqH2f2VsIOVacOTQYueWOvG6NaRDCOUwepmNoCBdMGcjgEV0TlhcVyWzpOe7qsXQS2roRIU4VwW8XIS6YZEFA+Xokgd0cpkZrdnuRZmAJNNZmwF4FwL4HwGgGATjsXBQKXOXFEHiHGcXJcFcJWsREhbUX8L0HiGOSHBoIheHKhVoOhexoKJQDVOegBEYDtDVLqfRAQL0oiJhTkC8aAAAIQ8bwViDMXmYm4oGN77QP6Czd6tIRSKlO4oxMyTTD7p5UGiU1jyIw4sHSiowPQtqYjIVKmXHvgEBmFSVoz+r0W8xyUiWaV1Y+mgF6WgAeF+wwV3kryPEzS6YuHBHn7WVhF2X8UOUZKHK6zXgEAuX-EOmYhpApFeWxxm70IWzWiMyGKqHAHviiTRUjBsaxWglvnUmmyEoTq9a55GF5HKoCE5VmT0UpWJjpUcx5UJVRbV6nq9Z5mGTDi7AkiuDMwmA6wsrOTsqsW4bGYIIRXcatEECUHdVZAWVXZroDXjToI+a4jTHtWdVvgNL-raTeVm4jUzlZ425-RBV2SZisxbY-I7XZSjSDW76UFGrCyUF7WvHXabUrB8WxwPWJghSYg3UTVbI-ovVPXcYMyOKLVHKwLfKFgnXd6cSJj6qIkkWuDiBHXrIpRxYw0uBw3hCFRtkHXCQbWjXbVe7rLj4Q3tU2xNjaBJAo1iDw2-IAA8pNsNFNaNxNfYAkocLGewcYJAhgQUUZs4oA9ARwIIVANUcwokoAAA1FhWLKhDdK4HIIiFntkOLWxiLeLbQVLRKC4LLT1r0rknRPhcJKzZ4AQEYEIJmS4Nza+nzUeULWJGLRLdzGrTLQQHLSDb8oreHLbarXBerZrQzY1b5LsAcEcEakSoduJV0BnBkNUHsAlFDS9NxgMpTWDVljhjscsfLbQfKJHQHTHeQC1erYDf5RzA8rQXMIdojcTPpunecr0PpgzSXbzeonsfLWkD+r7bwm-I2J-N8OXfFpDQtX5SysnVsHrfDeHKQJcKjH+q8HulsERqgkOl0swK8A0sNaNeKuWA-AnS9Vde9a8FyNvW9T9YukojCIouyXZN8FHQKGNX7aVHKsHROqHXjWHZ0BHSYFfTneNSRq-fHY3bjQzfPUbG9ksYUpTYzXSJne-dnd1YBDQK1UyAPSxMXecqXSDT3ZXS7eA9hbzcUIetdmjSdVg1sKXY3WMZgy3cZm3QonbctIjGNT3XNSfHEGfAXYPYA1MCPU-RHBPTaFPSsInHYE9skDPdMHPd-dMOgi9SvVaS9Tfe3VMJvY3dvVnrvY9WkAfX9Ko0YE2n8GfR3YiZfdA5xoBT5XoswKBXZuBTwPwCgPZetDdFtNQPdOjDTPlbkYOaQOHBtI47RStt5d43dO2vECRW+EkhjJ9fUb+QdAbF5eggE043tFZg0qkjGMxkemxp0EesDAuRWACV+hkwUF+tk6KsxpjQU6AJjcU6kwCRLOUxLFU0uQCeNu4mxs04UryDk10MxrIPQLevoGxj030x0yUwCXrQU3reWJ050Mxu1OIHqOcPQDCrM2IPM4wH8FMwUMxqLeU50IRaAPoNkGlKAIpOLYYKABs2VFEKJEpDswUHswc8CopKpGcxc8xkpLSQU4pF0EcwUKpF868wCdCmkNMPc4c+lIpCCvswUACwtqJMALc6tHiGkA80c4pGAC8yM7CwAKQIuguPOgBYtQvnOYtJWxbJQ7N4uos90HMktXPsWxYUtIv7NgvHMcVxY0vVOwtU24tMsovgugA00FAcuNNcvkvAtdCUv8tU3EzMu0uiSpQ8vIssuKTpRCswtJWpRisgu8vKugCatqtyvsUIusvfOqscWdBIUxieRxMOOBPqWOVZ4pQwg+JRBHppDxO0X2shAIo2u3QJNes4idoASvrJTOsdRBDAqlO2sJNsb676wXMVPRuevAWeTYC+s+P3RoHzKpLMberexsZ5s1QJvrmXOiSQAkBeyiD9PAvluVtnzFvrkzPKArOwCQAFPLOVCtsNuLlNtzMACi5THbfb3b-ZzGAAcooGOwixO2O0Q+cta4vR65m10lTldU610C62QMCtFlyEuxVSu7OAuwwLjHu3AauyFOu50Ju9u3VdkkdO60m8u8e1Tgit5dNNdH68m-6mHKbRLFpe+xKJUB7EwJdPnWGooGYGojdMw5zGLKe5tCCJUWEzTBGS4H+-IcukHYg9eFpf9UzNhxzA4raaexTNtbQWEqe2gVdSO2EkR58iRzfkG5QDciW+WJRwe9wrtSmTSow-3SzEDRsMUrNQlmhymqiAR0TDgyUMcBJ1EKm7mrAQ7S4P2sG1pcjO8GpftEx67OBKJFTapTaEpJNAq2OfY5+849+9p+A70Hp3u0Z-6iZ3kvRJjSp5QNZ2JAANrK3uCKde2uCuvXZWcK1iThxnLi26hKd7FBe22iQAC6okY5SnmtVn8hRA686oG0HMhITQUC0tLgaQVnB8gzVUVzKkZX5XFXlXVXNz3HBQ2Xp8k4eXMXAAOtvrbRF358p4V4ra1347HGl7mEUGuvV8w41+rVpSN++JN2N64K1ughKHEFopNw0qJAADJKQELzAkCLcUDC3aSVllw7fXQ5crfrebc3B7f2XSA3S7TqhGM9UVmL0LdlwNIDfqhDefLPflSTeLqoa7FffYZbDFcyylcqQkwaDuB1BbSSjQZldK0iNIIBwCKmoVB9Og-VcY8Y8woaxffHenwtdtfi1fcE8I+dLHuJs0AuD8wNJ8zrxrTbdlzH0TKL0nINIDIBLoF37sjZdU-LBM8FCTLvJXJzLJOn7fTgqQqrL7ja3yM2uU-8ztXcp4j7KsPHLS+g3gZypzIqoL3k+aIUA7ejrGTjoMI8-8wPvy-LBE3yNvcfscz69HeTcFeHeM-yMPzXe0V3fR3t4sC8+sDW+n2Ioe+3cf3aaJiifnDif8eF1tBrX4BnfoZbc7czC2AkW4yOCkCScAAMQMAenyLFtSmiyQDSGfxf4tvAQMD8eIQMek8fG3ifF3b0+Ahb6stgCfioOYSfZcKflmFW9A7YDI0QBfVfoAkL1fdldf53ZkcwtgLfJj7fEQnfX3PfYA-flgRQa0nyvAWfTak-Df0-tgVNRIzQ68qU8-9fHfKGDPu3tgpfFA2ke-l-eNIwK-Arx-vhqUQAA","body":"function square(x) {\n    return x * x;\n} "},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nL-evaluate input:\n      \nsquare(id(10));\n      \nL-evaluate value:\n$\\langle{}$response$\\rangle$\n      "},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nL-evaluate input:\n      \ncount;\n          \nL-evaluate value:\n$\\langle{}$response$\\rangle$\n      "},{"body":"\n    Give the responses both when the evaluator memoizes and when it does not.\n    ","tag":"#text"}]},{"tag":"EXERCISE","title":"Exercise 4.28","id":"#ex-4.28","child":[{"body":"\n\tCy D. Fect, a reformed C programmer, is worried that some side effects\n\tmay never take place, because the lazy evaluator doesn't force the\n\tstatements in a sequence.\n\tSince the value of a statement in a sequence\n\tmay not be used (the statement may be there only for\n\tits effect, such as assigning to a variable or printing), there may be\n\tno subsequent use of this value (e.g., as an argument to a primitive\n\tfunction) that will cause it to be forced.\n\tCy thus thinks that when\n\tevaluating sequences, we must force all statements in the sequence.\n\tHe proposes to modify\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate_sequence"},{"body":"\n\tfrom section ","tag":"#text"},{"tag":"REF","body":"4.1.1","href":"/sicpjs/4.1.1"},{"body":" to use\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"actual_value"},{"body":"\n\trather than\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":":\n      ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":16,"eval":false,"body":"function eval_sequence(stmts, env) {\n    if (is_empty_sequence(stmts)) {\n        return undefined;\n    } else if (is_last_statement(stmts)) {\n        return actual_value(first_statement(stmts), env);\n    } else {\n        const first_stmt_value = \n            actual_value(first_statement(stmts), env);\n        if (is_return_value(first_stmt_value)) {\n            return first_stmt_value;\n        } else {\n            return eval_sequence(rest_statements(stmts), env);\n        }\n    }\n}"},{"tag":"OL","child":[{"tag":"LI","child":[{"body":"\n\tBen Bitdiddle thinks Cy is wrong. He shows Cy the\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"for_each"},{"body":"function\n\tdescribed in exercise ","tag":"#text"},{"tag":"REF","body":"2.23","href":"/sicpjs/2.2.1#ex-2.23"},{"body":",\twhich gives an\n\timportant example of a sequence with side effects:\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":17,"eval":true,"prependLength":543,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQCZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMfeMAHcqFABahWNACZUCVMgENqdRgRpNQAG0UAvAJ6gApgDdFWostolBoRWTIbZJAOagKNDnETJ0WDLjE5CokxmYWykYAFI6sAA50RiQUADTGJCYAlKAA3tigBUxGFERMoVT0APpaokZM5jFsCSRJFJn5BZ1dAPzatfValeFE0bHNre1dU6AAXKAVlSSKrKNNicmT0529WjQ0ANZEcZX0+qwARjSDw9GnF1eVNASLy6vx621pSVkdW7PzVUUcTiNSUIUa7xaG1+W16QJB+ii9hK5iG5hGUSClGslSMAA84kV6PRrBDxhsvhlMikYX9poomC5cQSiSTVGSPtT0j86f8FjQ4nVlBpKrFzlQluCxpzaVNeqZ0ZEogKhR4mKK2OLJTiPJV4aCrHQOVDPtzNn85gtHCRZCEGtKTebYWFUdbbdZ7WsTZSeXTLVUdBdpIpmYSjMTSQ6JrKepJFPsjJUseDA+dg5U4gzXhQ6iczpctPRjRMabyy1NU+nLtJEVGKWaY51-ScjABHEbkN7ktqNgry8It9tJMi3NsdkcnCiRFbJIt103fJ3TZvnXZkfbF6G8-uo1c0deb1IN3nNoolMqT6etQ9LuUuwZn0okS85mcUQ8+29dZvJnHSIxkDo9RSl60bbvelg5pipDYnQlT-oBlS6ta9BTsk8EAVoN6fr2fJVAhQGGiQN64TugwEVmIGQq0OEngCeoRi4JBviR4EKoMiiMcx17zrRfrGEwLBMB+oAAESkPsJA0EIoSnMkih4qAAC0SkQZEomZAA3NgAC+gQwSEdiUJY1zotE+JxJ+uQdI+ZSEBoE6iFE7GQeZBKflpun6cE1h9KhjzPAyTI3EWFn0FZOQAJA2cUT5xnEzkEqAAC8AB8RkoqZFhuZZZpfAS9CeXpv50H5FABRhOj6EY0h6oyoUFRF0WFLFdmsECiVxCl6X-lVlRORZn75XEhXaXp2AlaE+qIkEaRBeFZrWQUcigFECyElQrCiFQJiJpN0EkJk2R5NMtlTcCWj6BmTCbdtu1JgZpK4Vss2gM90w1P5Tx1cFZlFvNHmaeWBT4GQYiKK4NUdDpxiFkY8wEKtVprKQtX7UER1LVMKEUKARJEFouPJWpUHvcDk2VNWM2kNSZPlviOY2riGRUCw3HJFEdPAwUFOZvUKw5kwRYY6W3Pc595Xfb1ijVbV81IvVQ2gKD4OQ9IXO8hT3ys3QLEY0d2mna15RVGdaLZVE+OE1+0y9GbNwask15Wz2wNzKjRjyC00iG6AMNGHDWNdHUQkHWk4kkJJ0mhJN7j6IKymqdNGm+3p42x+xjvunQnrUckTUxeeJtIUwRDiIiyImebGJuttOeDGGshgl2nIeb2ZGuY0Np10sgwoWOPGgfWi69nMLlKrXdocYTdTart2FmmN3mwaEmf0APnZRKhrAUAti5BwjSNVEY8QUFd69Dpv2+75jJ1bGdoAe17NW+wU-uByta0Bpx5WoVeHPX0KsdRsD9x5QXkELX+U5XzXkAVyRcr8-aw3XgfLoONCCs38tfau8NibvTAdECBWDoEn1gRQHehVPyIK6J-BY9szKYkwVAneODb7vQfkQ5h5UbjUM6O-FBd9eSgIHBfcc0QiRQP-rvLe5Cb5UMbHpLoadl6GXoEoZ8NAy4YUApRawc4h5tAPg-BYojhwt0dM9OEDgiCsAJkqeESRpCizFlsEgBMtDOJcVMdqCU1EQ0eFoiiwE9GeK8VsUxnYXykNnDeI6z1mxBKIqxcCEsoiJJCHme4WF5xxLLHMNxWgtBLwmo9Uqmc9wHl4otQRoB0FUxSqACp+xKYyFrAYzyaDVC4zXOYRgxM-EaMCZhXR7IqYdM6Og0gnESRMRqn0sqFUplcRqlEHphZxktSLiTaIVN8qM1qtrNmLE1nhQ1mEssSyZnewWmc85dJFxFRKT5UqEtFlLGWdILe+YriFSMcbeKXysndTEgAKkuVQWZ0gQWiTSHcAso0vJPJXveSoZs-4wI5lU-eNSH7tQTKi42ODnLDCVGbCyrJIztNCXc4GDzikZwHNMiF7N3xYqpAfdBNwGkEKRFxN8ODQwUqNDk6lNKEEwiZUxTJBYiWSpZdKq4C8bjyK6A-HhiKGWonSZSvOR5sUSq4gqrKGJGzargnCxVIq3p-B5Wa58DtyXhjZMRK1i5RWLxhA-J+EoX4atKcXAhtVxASWVOcAAVsA1V-yFhThcC4Gq1QKjvhoOG8OgakJiAkinLysdg2RyJemvN+xjrWs6A-MQRhFCfKnFQLChbM2RwNn655McHKJicimiNB9aFVCLaGiNkatjoJdg0yuqIbhRCLaGftXIp3fBnRsqY69yoVqrf2tNJKcxBobfsbNfxl2VFXdWxQtaZ1pBdlpEGYAiggnsPDCyoARDiHmLvUANxGwHprVhL9Z7QAFK0Jezo+B1CMmKI-EgLQao1W5CA-5LtNLNT4cg+GPbcSboTX2ztbC-gPynROrDiD+HwxqVGrZnbCPNuRdLK6A13LVMQ5suKqTRJFphcYOj4rir+voph8NJbOieujb2xQcaE2pM7eHVjjzc07unUWkt5bK3HtPfJy96duNzoyJOndCn-lHsnSe79hntMSSOmp3AwH-VqBYOwKA3huDoH4AEJFhkY0ifjbVVJVTxCJljYOxjdl1onuEjk0AAAyMLoB9OheSrF9wFakIifpdxhYNRBa527P5vGQnEuic80mkSok0tCi0NmrjLa+jpeNeYiYuQuiCa2fpn9OTHkud8nixMxWBhRBuFlh+zGuvmDY715LFWFhLBWDeP5Wy3N5cTahQrE2jBlZUe1+MiYluAoLH1-5zGltsYtQB0byLDsVU26FnFemlMGdPS147rnAR8sHrqnbM3hNza8wY8Ocq3wrdjj91oRqpuXca9dn9TXjMtabeV5FAP0IOpZE6nVmXptxQhypyH7ToerdKgsO1wOGtxVmx5+brKvtiRxhDcqdqNKgAAD50+esTsTBWqmiTMDdRQq5Ew0+yAzpn72Sefd1eHCmvP7u+TtUDi7hO7Kne+pt9H2SsfSe41LhHYYIzCvaajuySubvK5e9jtrpUOuOz-uhfHS20ga6FYdXXoRmOU8t8M4JdA2PW7fWZQVSO6Ctdjql5YaYQyOq1y6nXIOieC5ZwttnlYQ+I7D397j8eMxZgFrmQ7+iXsO4BfL54nv9dQ6XrHVPVMCekbR2D4zzWVcS9N+t6oQf0yh+dVEPm2Y6gLTGbngbzeE+a+dWxjvGehZpDGfX4uYvXdJIu5FerlfAvR-y7H8nolp86LdyQZPFWN+EQyediPsvHdJoJQQESvBVe7-9do-fOIR-FC7xXstu3T9FHP1UjAV-kV75Gc+cvMui+J+-k7+IkAAzN-oZHvkhDQObmhNTphM-gFqEGbs7ggZvkklzL-lvi8JNiKlzGbqnq3k9OctgURGnvzI-kLNhLcoQDflLgAXXpRg9gSkXFEixIAcgTxu5jHmTiLmJGiiQr9pAb5GSonm3pwdlqDmurXkbpPvRJPB6IbijpHkvrlkLqzmvoofXD7knnzozmWMzivnwd2OHNob3Owa0DvsiuYaiI3AoBPEfi-lsq8qAVUpfiXtxrYX3KoBvCYZyEHP1m-p7CJF-p4RVt4XqDPGUFYPPJIUESASEVUhAfISYhvCODIjvP5sYsvqTpkUeKJBEiONYaoukYmOitEtItfPxqWlIVXjIcZtUSIaVJwpYQArIr8oIopmunAuEcihIm0VUR0dkf8j+r0TmilsfKfOfGUfkZ0b8DkYsO4nMc0cXDoMQlIisYETlv+gbisf7pMZTGuBuJIXUWobGhoavvwaJE0iUb5E0i0jWEgWcaEEXljn0YZGbk0jIlIq9kxgVjcccQdkIRMKkVUCqMBCKGKBKLPhHvPgJkAfRFMkwFdBCcKOqNCdqNrjnvzoYVUFqAyKiYKJCRiZqDCVRJlh8b5AsMiUSaqFCWSVieHjnlFAvs4VHuobwYVrSY8MSeiRqBcOSdYHcbjviTCSibyfSaSYKUycDvCQUMftwR9podcQSRKWiWqAKQSSECKaEBqSKIds8QkeVG4eTh4RMbvkwpKfUDaEaa-okR-uTmERaSdgBHQLVGibaaccaWfuAQcRVmbvqA4eCFrOIdYHNIyDYoDsQaoH8XZMxkGWCMKe6n8KGYPuGXYJGfyjGQwP6civqdKdqTqLAYmbCSyTCOggWQ0gWdLu0ogosTyTWZiWWZlpYnGPiqWeCGbptgWbTDSnSKkq0Z6Z8lDvEu2YmJ2aSN2a8MqHyWqH2f2VsIOVacOTQYueWOvG6NaRDCOUwepmNoCBdMGcjgEV0TlhcVyWzpOe7qsXQS2roRIU4VwW8XIS6YZEFA+Xokgd0cpkZrdnuRZmAJNNZmwF4FwL4HwGgGATjsXBQKXOXFEHiHGcXJcFcJWsREhbUX8L0HiGOSHBoIheHKhVoOhexoKJQDVOegBEYDtDVLqfRAQL0oiJhTkC8aAAAIQ8bwViDMXmYm4oGN77QP6Czd6tIRSKlO4oxMyTTD7p5UGiU1jyIw4sHSiowPQtqYjIVKmXHvgEBmFSVoz+r0W8xyUiWaV1Y+mgF6WgAeF+wwV3kryPEzS6YuHBHn7WVhF2X8UOUZKHK6zXgEAuX-EOmYhpApFeWxxm70IWzWiMyGKqHAHviiTRUjBsaxWglvnUmmyEoTq9a55GF5HKoCE5VmT0UpWJjpUcx5UJVRbV6nq9Z5mGTDi7AkiuDMwmA6wsrOTsqsW4bGYIIRXcatEECUHdVZAWVXZroDXjToI+a4jTHtWdVvgNL-raTeVm4jUzlZ425-RBV2SZisxbY-I7XZSjSDW76UFGrCyUF7WvHXabUrB8WxwPWJghSYg3UTVbI-ovVPXcYMyOKLVHKwLfKFgnXd6cSJj6qIkkWuDiBHXrIpRxYw0uBw3hCFRtkHXCQbWjXbVe7rLj4Q3tU2xNjaBJAo1iDw2-IAA8pNsNFNaNxNfYAkocLGewcYJAhgQUUZs4oA9ARwIIVANUcwokoAAA1FhWLKhDdK4HIIiFntkOLWxiLeLbQVLRKC4LLT1r0rknRPhcJKzZ4AQEYEIJmS4Nza+nzUeULWJGLRLdzGrTLQQHLSDb8oreHLbarXBerZrQzY1b5LsAcEcEakSoduJV0BnBkNUHsAlFDS9NxgMpTWDVljhjscsfLbQfKJHQHTHeQC1erYDf5RzA8rQXMIdojcTPpunecr0PpgzSXbzeonsfLWkD+r7bwm-I2J-N8OXfFpDQtX5SysnVsHrfDeHKQJcKjH+q8HulsERqgkOl0swK8A0sNaNeKuWA-AnS9Vde9a8FyNvW9T9YukojCIouyXZN8FHQKGNX7aVHKsHROqHXjWHZ0BHSYFfTneNSRq-fHY3bjQzfPUbG9ksYUpTYzXSJne-dnd1YBDQK1UyAPSxMXecqXSDT3ZXS7eA9hbzcUIetdmjSdVg1sKXY3WMZgy3cZm3QonbctIjGNT3XNSfHEGfAXYPYA1MCPU-RHBPTaFPSsInHYE9skDPdMHPd-dMOgi9SvVaS9Tfe3VMJvY3dvVnrvY9WkAfX9Ko0YE2n8GfR3YiZfdA5xoBT5XoswKBXZuBTwPwCgPZetDdFtNQPdOjDTPlbkYOaQOHBtI47RStt5d43dO2vECRW+EkhjJ9fUb+QdAbF5eggE043tFZg0qkjGMxkemxp0EesDAuRWACV+hkwUF+tk6KsxpjQU6AJjcU6kwCRLOUxLFU0uQCeNu4mxs04UryDk10MxrIPQLevoGxj030x0yUwCXrQU3reWJ050Mxu1OIHqOcPQDCrM2IPM4wH8FMwUMxqLeU50IRaAPoNkGlKAIpOLYYKABs2VFEKJEpDswUHswc8CopKpGcxc8xkpLSQU4pF0EcwUKpF868wCdCmkNMPc4c+lIpCCvswUACwtqJMALc6tHiGkA80c4pGAC8yM7CwAKQIuguPOgBYtQvnOYtJWxbJQ7N4uos90HMktXPsWxYUtIv7NgvHMcVxY0vVOwtU24tMsovgugA00FAcuNNcvkvAtdCUv8tU3EzMu0uiSpQ8vIssuKTpRCswtJWpRisgu8vKugCatqtyvsUIusvfOqscWdBIUxieRxMOOBPqWOVZ4pQwg+JRBHppDxO0X2shAIo2u3QJNes4idoASvrJTOsdRBDAqlO2sJNsb676wXMVPRuevAWeTYC+s+P3RoHzKpLMberexsZ5s1QJvrmXOiSQAkBeyiD9PAvluVtnzFvrkzPKArOwCQAFPLOVCtsNuLlNtzMACi5THbfb3b-ZzGAAcooGOwixO2O0Q+cta4vR65m10lTldU610C62QMCtFlyEuxVSu7OAuwwLjHu3AauyFOu50Ju9u3VdkkdO60m8u8e1Tgit5dNNdH68m-6mHKbRLFpe+xKJUB7EwJdPnWGooGYGojdMw5zGLKe5tCCJUWEzTBGS4H+-IcukHYg9eFpf9UzNhxzA4raaexTNtbQWEqe2gVdSO2EkR58iRzfkG5QDciW+WJRwe9wrtSmTSow-3SzEDRsMUrNQlmhymqiAR0TDgyUMcBJ1EKm7mrAQ7S4P2sG1pcjO8GpftEx67OBKJFTapTaEpJNAq2OfY5+849+9p+A70Hp3u0Z-6iZ3kvRJjSp5QNZ2JAANrK3uCKde2uCuvXZWcK1iThxnLi26hKd7FBe22iQAC6okY5SnmtVn8hRA686oG0HMhITQUC0tLgaQVnB8gzVUVzKkZX5XFXlXVXNz3HBQ2Xp8k4eXMXAAOtvrbRF358p4V4ra1347HGl7mEUGuvV8w41+rVpSN++JN2N64K1ughKHEFopNw0qJAADJKQELzAkCLcUDC3aSVllw7fXQ5crfrebc3B7f2XSA3S7TqhGM9UVmL0LdlwNIDfqhDefLPflSTeLqoa7FffYZbDFcyylcqQkwaDuB1BbSSjQZldK0iNIIBwCKmoVB9Og-VcY8Y8woaxffHenwtdtfi1fcE8I+dLHuJs0AuD8wNJ8zrxrTbdlzH0TKL0nINIDIBLoF37sjZdU-LBM8FCTLvJXJzLJOn7fTgqQqrL7ja3yM2uU-8ztXcp4j7KsPHLS+g3gZypzIqoL3k+aIUA7ejrGTjoMI8-8wPvy-LBE3yNvcfscz69HeTcFeHeM-yMPzXe0V3fR3t4sC8+sDW+n2Ioe+3cf3aaJiifnDif8eF1tBrX4BnfoZbc7czC2DPUiiVpgw-u1CsCdGHxfwgNYTZ9AK9X-KFs+yI+BysVBABdrpF8xMga4j2AU2vQ-p19qZIL1bx8beJ8Xe2Bl-YDylvRd+bdfcp-Abp9N+IXArA+8VpCpIACsAA7GFRgLwGkAABzr9Nr4BL+2BgGr+2Cb+2AJ+Kg5h40jBj9gBl9AA","body":"function for_each(fun, items) {\n    if (is_null(items)){\n        return \"done\";\n    } else {\n        fun(head(items));\n        for_each(fun, tail(items));\n    }\n} "},{"body":"\n\tHe claims that the evaluator in the text (with the original\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_sequence"},{"body":")\n\t  \n\thandles this correctly:\n        ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":18,"eval":false,"body":"for_each(display, list(57, 321, 88));","output":"57\n321\n88\nL-evaluate value:\n\"done\""},{"body":"\n\tExplain why Ben is right about the behavior of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"for_each"},{"body":".\n\t  ","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\tCy agrees that Ben is right about the\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"for_each"},{"body":"\n\texample, but says that that's not the kind of program he\n\twas thinking about when he proposed his change to\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_sequence"},{"body":".\n\t  \n\tHe\n\tdeclares\n\tthe following two\n\tfunctions\n\tin the lazy evaluator:\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":19,"eval":true,"prependLength":543,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQCZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMfeMAHcqFABahWNACZUCVMgENqdRgRpNQAG0UAvAJ6gApgDdFWostolBoRWTIbZJAOagKNDnETJ0WDLjE5CokxmYWykYAFI6sAA50RiQUADTGJCYAlKAA3tigBUxGFERMoVT0APpaokZM5jFsCSRJFJn5BZ1dAPzatfValeFE0bHNre1dU6AAXKAVlSSKrKNNicmT0529WjQ0ANZEcZX0+qwARjSDw9GnF1eVNASLy6vx621pSVkdW7PzVUUcTiNSUIUa7xaG1+W16QJB+ii9hK5iG5hGUSClGslSMAA84kV6PRrBDxhsvhlMikYX9poomC5cQSiSTVGSPtT0j86f8FjQ4nVlBpKrFzlQluCxpzaVNeqZ0ZEogKhR4mKK2OLJTiPJV4aCrHQOVDPtzNn85gtHCRZCEGtKTebYWFUdbbdZ7WsTZSeXTLVUdBdpIpmYSjMTSQ6JrKepJFPsjJUseDA+dg5U4gzXhQ6iczpctPRjRMabyy1NU+nLtJEVGKWaY51-ScjABHEbkN7ktqNgry8It9tJMi3NsdkcnCiRFbJIt103fJ3TZvnXZkfbF6G8-uo1c0deb1IN3nNoolMqT6etQ9LuUuwZn0okS85mcUQ8+29dZvJnHSIxkDo9RSl60bbvelg5pipDYnQlT-oBlS6ta9BTsk8EAVoN6fr2fJVAhQGGiQN64TugwEVmIGQq0OEngCeoRi4JBviR4EKoMiiMcx17zrRfrGEwLBMB+oAAESkPsJA0EIoSnMkih4qAAC0SkQZEomZAA3NgAC+gQwSEdiUJY1zotE+JxJ+uQdI+ZSEBoE6iFE7GQeZBKflpun6cE1h9KhjzPAyTI3EWFn0FZOQAJA2cUT5xnEzkEqAAC8AB8RkoqZFhuZZZpfAS9CeXpv50H5FABRhOj6EY0h6oyoUFRF0WFLFdmsECiVxCl6X-lVlRORZn75XEhXaXp2AlaE+qIkEaRBeFZrWQUcigFECyElQrCiFQJiJpN0EkJk2R5NMtlTcCWj6BmTCbdtu1JgZpK4Vss2gM90w1P5Tx1cFZlFvNHmaeWBT4GQYiKK4NUdDpxiFkY8wEKtVprKQtX7UER1LVMKEUKARJEFouPJWpUHvcDk2VNWM2kNSZPlviOY2riGRUCw3HJFEdPAwUFOZvUKw5kwRYY6W3Pc595Xfb1ijVbV81IvVQ2gKD4OQ9IXO8hT3ys3QLEY0d2mna15RVGdaLZVE+OE1+0y9GbNwask15Wz2wNzKjRjyC00iG6AMNGHDWNdHUQkHWk4kkJJ0mhJN7j6IKymqdNGm+3p42x+xjvunQnrUckTUxeeJtIUwRDiIiyImebGJuttOeDGGshgl2nIeb2ZGuY0Np10sgwoWOPGgfWi69nMLlKrXdocYTdTart2FmmN3mwaEmf0APnZRKhrAUAti5BwjSNVEY8QUFd69Dpv2+75jJ1bGdoAe17NW+wU-uByta0Bpx5WoVeHPX0KsdRsD9x5QXkELX+U5XzXkAVyRcr8-aw3XgfLoONCCs38tfau8NibvTAdECBWDoEn1gRQHehVPyIK6J-BY9szKYkwVAneODb7vQfkQ5h5UbjUM6O-FBd9eSgIHBfcc0QiRQP-rvLe5Cb5UMbHpLoadl6GXoEoZ8NAy4YUApRawc4h5tAPg-BYojhwt0dM9OEDgiCsAJkqeESRpCizFlsEgBMtDOJcVMdqCU1EQ0eFoiiwE9GeK8VsUxnYXykNnDeI6z1mxBKIqxcCEsoiJJCHme4WF5xxLLHMNxWgtBLwmo9Uqmc9wHl4otQRoB0FUxSqACp+xKYyFrAYzyaDVC4zXOYRgxM-EaMCZhXR7IqYdM6Og0gnESRMRqn0sqFUplcRqlEHphZxktSLiTaIVN8qM1qtrNmLE1nhQ1mEssSyZnewWmc85dJFxFRKT5UqEtFlLGWdILe+YriFSMcbeKXysndTEgAKkuVQWZ0gQWiTSHcAso0vJPJXveSoZs-4wI5lU-eNSH7tQTKi42ODnLDCVGbCyrJIztNCXc4GDzikZwHNMiF7N3xYqpAfdBNwGkEKRFxN8ODQwUqNDk6lNKEEwiZUxTJBYiWSpZdKq4C8bjyK6A-HhiKGWonSZSvOR5sUSq4gqrKGJGzargnCxVIq3p-B5Wa58DtyXhjZMRK1i5RWLxhA-J+EoX4atKcXAhtVxASWVOcAAVsA1V-yFhThcC4Gq1QKjvhoOG8OgakJiAkinLysdg2RyJemvN+xjrWs6A-MQRhFCfKnFQLChbM2RwNn655McHKJicimiNB9aFVCLaGiNkatjoJdg0yuqIbhRCLaGftXIp3fBnRsqY69yoVqrf2tNJKcxBobfsbNfxl2VFXdWxQtaZ1pBdlpEGYAiggnsPDCyoARDiHmLvUANxGwHprVhL9Z7QAFK0Jezo+B1CMmKI-EgLQao1W5CA-5LtNLNT4cg+GPbcSboTX2ztbC-gPynROrDiD+HwxqVGrZnbCPNuRdLK6A13LVMQ5suKqTRJFphcYOj4rir+voph8NJbOieujb2xQcaE2pM7eHVjjzc07unUWkt5bK3HtPfJy96duNzoyJOndCn-lHsnSe79hntMSSOmp3AwH-VqBYOwKA3huDoH4AEJFhkY0ifjbVVJVTxCJljYOxjdl1onuEjk0AAAyMLoB9OheSrF9wFakIifpdxhYNRBa527P5vGQnEuic80mkSok0tCi0NmrjLa+jpeNeYiYuQuiCa2fpn9OTHkud8nixMxWBhRBuFlh+zGuvmDY715LFWFhLBWDeP5Wy3N5cTahQrE2jBlZUe1+MiYluAoLH1-5zGltsYtQB0byLDsVU26FnFemlMGdPS147rnAR8sHrqnbM3hNza8wY8Ocq3wrdjj91oRqpuXca9dn9TXjMtabeV5FAP0IOpZE6nVmXptxQhypyH7ToerdKgsO1wOGtxVmx5+brKvtiRxhDcqdqNKgAAD50+esTsTBWqmiTMDdRQq5Ew0+yAzpn72Sefd1eHCmvP7u+TtUDi7hO7Kne+pt9H2SsfSe41LhHYYIzCvaajuySubvK5e9jtrpUOuOz-uhfHS20ga6FYdXXoRmOU8t8M4JdA2PW7fWZQVSO6Ctdjql5YaYQyOq1y6nXIOieC5ZwttnlYQ+I7D397j8eMxZgFrmQ7+iXsO4BfL54nv9dQ6XrHVPVMCekbR2D4zzWVcS9N+t6oQf0yh+dVEPm2Y6gLTGbngbzeE+a+dWxjvGehZpDGfX4uYvXdJIu5FerlfAvR-y7H8nolp86LdyQZPFWN+EQyediPsvHdJoJQQESvBVe7-9do-fOIR-FC7xXstu3T9FHP1UjAV-kV75Gc+cvMui+J+-k7+IkAAzN-oZHvkhDQObmhNTphM-gFqEGbs7ggZvkklzL-lvi8JNiKlzGbqnq3k9OctgURGnvzI-kLNhLcoQDflLgAXXpRg9gSkXFEixIAcgTxu5jHmTiLmJGiiQr9pAb5GSonm3pwdlqDmurXkbpPvRJPB6IbijpHkvrlkLqzmvoofXD7knnzozmWMzivnwd2OHNob3Owa0DvsiuYaiI3AoBPEfi-lsq8qAVUpfiXtxrYX3KoBvCYZyEHP1m-p7CJF-p4RVt4XqDPGUFYPPJIUESASEVUhAfISYhvCODIjvP5sYsvqTpkUeKJBEiONYaoukYmOitEtItfPxqWlIVXjIcZtUSIaVJwpYQArIr8oIopmunAuEcihIm0VUR0dkf8j+r0TmilsfKfOfGUfkZ0b8DkYsO4nMc0cXDoMQlIisYETlv+gbisf7pMZTGuBuJIXUWobGhoavvwaJE0iUb5E0i0jWEgWcaEEXljn0YZGbk0jIlIq9kxgVjcccQdkIRMKkVUCqMBCKGKBKLPhHvPgJkAfRFMkwFdBCcKOqNCdqNrjnvzoYVUFqAyKiYKJCRiZqDCVRJlh8b5AsMiUSaqFCWSVieHjnlFAvs4VHuobwYVrSY8MSeiRqBcOSdYHcbjviTCSibyfSaSYKUycDvCQUMftwR9podcQSRKWiWqAKQSSECKaEBqSKIds8QkeVG4eTh4RMbvkwpKfUDaEaa-okR-uTmERaSdgBHQLVGibaaccaWfuAQcRVmbvqA4eCFrOIdYHNIyDYoDsQaoH8XZMxkGWCMKe6n8KGYPuGXYJGfyjGQwP6civqdKdqTqLAYmbCSyTCOggWQ0gWdLu0ogosTyTWZiWWZlpYnGPiqWeCGbptgWbTDSnSKkq0Z6Z8lDvEu2YmJ2aSN2a8MqHyWqH2f2VsIOVacOTQYueWOvG6NaRDCOUwepmNoCBdMGcjgEV0TlhcVyWzpOe7qsXQS2roRIU4VwW8XIS6YZEFA+Xokgd0cpkZrdnuRZmAJNNZmwF4FwL4HwGgGATjsXBQKXOXFEHiHGcXJcFcJWsREhbUX8L0HiGOSHBoIheHKhVoOhexoKJQDVOegBEYDtDVLqfRAQL0oiJhTkC8aAAAIQ8bwViDMXmYm4oGN77QP6Czd6tIRSKlO4oxMyTTD7p5UGiU1jyIw4sHSiowPQtqYjIVKmXHvgEBmFSVoz+r0W8xyUiWaV1Y+mgF6WgAeF+wwV3kryPEzS6YuHBHn7WVhF2X8UOUZKHK6zXgEAuX-EOmYhpApFeWxxm70IWzWiMyGKqHAHviiTRUjBsaxWglvnUmmyEoTq9a55GF5HKoCE5VmT0UpWJjpUcx5UJVRbV6nq9Z5mGTDi7AkiuDMwmA6wsrOTsqsW4bGYIIRXcatEECUHdVZAWVXZroDXjToI+a4jTHtWdVvgNL-raTeVm4jUzlZ425-RBV2SZisxbY-I7XZSjSDW76UFGrCyUF7WvHXabUrB8WxwPWJghSYg3UTVbI-ovVPXcYMyOKLVHKwLfKFgnXd6cSJj6qIkkWuDiBHXrIpRxYw0uBw3hCFRtkHXCQbWjXbVe7rLj4Q3tU2xNjaBJAo1iDw2-IAA8pNsNFNaNxNfYAkocLGewcYJAhgQUUZs4oA9ARwIIVANUcwokoAAA1FhWLKhDdK4HIIiFntkOLWxiLeLbQVLRKC4LLT1r0rknRPhcJKzZ4AQEYEIJmS4Nza+nzUeULWJGLRLdzGrTLQQHLSDb8oreHLbarXBerZrQzY1b5LsAcEcEakSoduJV0BnBkNUHsAlFDS9NxgMpTWDVljhjscsfLbQfKJHQHTHeQC1erYDf5RzA8rQXMIdojcTPpunecr0PpgzSXbzeonsfLWkD+r7bwm-I2J-N8OXfFpDQtX5SysnVsHrfDeHKQJcKjH+q8HulsERqgkOl0swK8A0sNaNeKuWA-AnS9Vde9a8FyNvW9T9YukojCIouyXZN8FHQKGNX7aVHKsHROqHXjWHZ0BHSYFfTneNSRq-fHY3bjQzfPUbG9ksYUpTYzXSJne-dnd1YBDQK1UyAPSxMXecqXSDT3ZXS7eA9hbzcUIetdmjSdVg1sKXY3WMZgy3cZm3QonbctIjGNT3XNSfHEGfAXYPYA1MCPU-RHBPTaFPSsInHYE9skDPdMHPd-dMOgi9SvVaS9Tfe3VMJvY3dvVnrvY9WkAfX9Ko0YE2n8GfR3YiZfdA5xoBT5XoswKBXZuBTwPwCgPZetDdFtNQPdOjDTPlbkYOaQOHBtI47RStt5d43dO2vECRW+EkhjJ9fUb+QdAbF5eggE043tFZg0qkjGMxkemxp0EesDAuRWACV+hkwUF+tk6KsxpjQU6AJjcU6kwCRLOUxLFU0uQCeNu4mxs04UryDk10MxrIPQLevoGxj030x0yUwCXrQU3reWJ050Mxu1OIHqOcPQDCrM2IPM4wH8FMwUMxqLeU50IRaAPoNkGlKAIpOLYYKABs2VFEKJEpDswUHswc8CopKpGcxc8xkpLSQU4pF0EcwUKpF868wCdCmkNMPc4c+lIpCCvswUACwtqJMALc6tHiGkA80c4pGAC8yM7CwAKQIuguPOgBYtQvnOYtJWxbJQ7N4uos90HMktXPsWxYUtIv7NgvHMcVxY0vVOwtU24tMsovgugA00FAcuNNcvkvAtdCUv8tU3EzMu0uiSpQ8vIssuKTpRCswtJWpRisgu8vKugCatqtyvsUIusvfOqscWdBIUxieRxMOOBPqWOVZ4pQwg+JRBHppDxO0X2shAIo2u3QJNes4idoASvrJTOsdRBDAqlO2sJNsb676wXMVPRuevAWeTYC+s+P3RoHzKpLMberexsZ5s1QJvrmXOiSQAkBeyiD9PAvluVtnzFvrkzPKArOwCQAFPLOVCtsNuLlNtzMACi5THbfb3b-ZzGAAcooGOwixO2O0Q+cta4vR65m10lTldU610C62QMCtFlyEuxVSu7OAuwwLjHu3AauyFOu50Ju9u3VdkkdO60m8u8e1Tgit5dNNdH68m-6mHKbRLFpe+xKJUB7EwJdPnWGooGYGojdMw5zGLKe5tCCJUWEzTBGS4H+-IcukHYg9eFpf9UzNhxzA4raaexTNtbQWEqe2gVdSO2EkR58iRzfkG5QDciW+WJRwe9wrtSmTSow-3SzEDRsMUrNQlmhymqiAR0TDgyUMcBJ1EKm7mrAQ7S4P2sG1pcjO8GpftEx67OBKJFTapTaEpJNAq2OfY5+849+9p+A70Hp3u0Z-6iZ3kvRJjSp5QNZ2JAANrK3uCKde2uCuvXZWcK1iThxnLi26hKd7FBe22iQAC6okY5SnmtVn8hRA686oG0HMhITQUC0tLgaQVnB8gzVUVzKkZX5XFXlXVXNz3HBQ2Xp8k4eXMXAAOtvrbRF358p4V4ra1347HGl7mEUGuvV8w41+rVpSN++JN2N64K1ughKHEFopNw0qJAADJKQELzAkCLcUDC3aSVllw7fXQ5crfrebc3B7f2XSA3S7TqhGM9UVmL0LdlwNIDfqhDefLPflSTeLqoa7FffYZbDFcyylcqQkwaDuB1BbSSjQZldK0iNIIBwCKmoVB9Og-VcY8Y8woaxffHenwtdtfi1fcE8I+dLHuJs0AuD8wNJ8zrxrTbdlzH0TKL0nINIDIBLoF37sjZdU-LBM8FCTLvJXJzLJOn7fTgqQqrL7ja3yM2uU-8ztXcp4j7KsPHLS+g3gZypzIqoL3k+aIUA7ejrGTjoMI8-8wPvy-LBE3yNvcfscz69HeTcFeHeM-yMPzXe0V3fR3t4sC8+sDW+n3MG+QEC8CIVZaKTEwudMupJf6LoPx4jyEEAYBh8HzPXORD0FBGBu--IJ+B+Inn4R8VPBZ7Mx9mZjRAA","body":"function f1(x) {\n    x = pair(x, list(2));\n    return x;\n}\n\nfunction f2(x) {\n    function f(e) {\n        e;\n        return x;\n    }\n    return f(x = pair(x, list(2)));\n} "},{"body":"\n\tWhat are the values of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"f1(1)"},{"body":"\n\tand\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"f2(1)"},{"body":"\n\twith the original\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_sequence"},{"body":"?\n\t  \n\tWhat would the values be with Cy's proposed change to\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_sequence"},{"body":"?\n\t  ","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\tCy also points out that changing\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_sequence"},{"body":"\n\tas he proposes does not affect the behavior of the example in part a.\n\tExplain why this is true.\n      ","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\tHow do you think sequences\n\tought to be treated in the lazy evaluator?\n\tDo you like Cy's approach, the approach in the text, or some other\n\tapproach?\n      ","tag":"#text"}]}]}]},{"tag":"EXERCISE","title":"Exercise 4.29","id":"#ex-4.29","child":[{"body":"\n    The approach taken in this section is somewhat unpleasant, because it\n    makes an incompatible change to\n    JavaScript.\n    It might be nicer to implement lazy evaluation as an\n    ","tag":"#text"},{"tag":"EM","child":[{"body":"upward-compatible extension","tag":"#text"}]},{"body":", that is, so that ordinary\n    JavaScript\n    programs will work as before.  We can do this by \n    introducing optional parameter declaration as a new\n      syntactic form inside function\n    declarations to let the user control whether or not arguments are to be\n    delayed.  While we're at it, we may as well also give the user the\n    choice between delaying with and without memoization.  For example, the\n    \n\tdeclaration\n      ","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nfunction f(a, b, c, d) {\t\n    parameters(\"strict\", \"lazy\", \"strict\", \"lazy_memo\");\n    $\\ldots$\n}\n      "},{"body":"\n    would define ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"f"},{"body":" to be a\n    function\n    of four arguments, where the first and third arguments are evaluated when the\n    function\n    is called, the second argument is delayed, and the fourth argument is both\n    delayed and memoized.\n    \n\tYou can assume that the parameter declaration is always\n\tthe first statement in the body of a function declaration,\n\tand if it is omitted, all parameters are strict.\n\tThus, ordinary function declaration\n\twill produce the same behavior as ordinary JavaScript,\n\twhile adding the\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"lazy_memo\""},{"body":"\n\tdeclaration to each parameter of every compound\tfunction\n\twill produce the behavior of the lazy evaluator defined in this section.\n\tDesign and implement the changes required to produce such an extension to\n\tJavaScript. The ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"parse"},{"body":" function will\n\ttreat parameter declarations as\tfunction applications, so you need to\n\tmodify ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":" to dispatch to your\n\timplementation of the new syntactic form.\n      \n    You must also arrange for\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    or ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":" to determine when arguments are to be\n    delayed, and to force or delay arguments accordingly, and you must arrange\n    for forcing to memoize or not, as appropriate.\n    ","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-1","count":1,"href":"/sicpjs/4.2.2#footnote-link-1","child":[{"body":"The word ","tag":"#text"},{"tag":"EM","child":[{"body":"thunk","tag":"#text"}]},{"body":" was invented by an informal\n      \n      working group that was discussing the implementation of call-by-name\n      \n      in Algol 60.  They observed that most of the analysis of (\"","tag":"#text"},{"body":"thinking\n      about","tag":"#text"},{"body":"\") the expression could be done at compile time; thus, at run\n      time, the expression would already have been \"","tag":"#text"},{"body":"thunk","tag":"#text"},{"body":"\" about \n      \n      (Ingerman et al. 1960).","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-2","count":2,"href":"/sicpjs/4.2.2#footnote-link-2","child":[{"body":"This is analogous to the\n    \n\tforcing of \n      \n    the delayed objects that were introduced in chapter ","tag":"#text"},{"tag":"REF","body":"3","href":"/sicpjs/3"},{"body":" to\n    represent streams.  The critical difference between what we are\n    doing here and what we did in chapter ","tag":"#text"},{"tag":"REF","body":"3","href":"/sicpjs/3"},{"body":" is that we are building\n    delaying and forcing into the evaluator, and thus making this uniform\n    and automatic throughout the language.","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-3","count":3,"href":"/sicpjs/4.2.2#footnote-link-3","child":[{"body":"Lazy evaluation combined with memoization is sometimes\n    referred to as\n    ","tag":"#text"},{"tag":"EM","child":[{"body":"call-by-need","tag":"#text"}]},{"body":" argument passing, in contrast to\n    ","tag":"#text"},{"tag":"EM","child":[{"body":"call-by-name","tag":"#text"}]},{"body":" argument passing.  \n    \n    (Call-by-name, introduced in\n    \n    Algol 60, is similar to non-memoized lazy\n    evaluation.) As language designers, we can build our evaluator to memoize,\n    not to memoize, or leave this an option for programmers\n    (exercise ","tag":"#text"},{"tag":"REF","body":"4.29","href":"/sicpjs/4.2.2#ex-4.29"},{"body":").  As you might\n    expect from chapter ","tag":"#text"},{"tag":"REF","body":"3","href":"/sicpjs/3"},{"body":", these choices raise issues that become both\n    subtle and confusing in the presence of assignments.  (See\n    exercises ","tag":"#text"},{"tag":"REF","body":"4.25","href":"/sicpjs/4.2.2#ex-4.25"},{"body":"\n    and ","tag":"#text"},{"tag":"REF","body":"4.27","href":"/sicpjs/4.2.2#ex-4.27"},{"body":".)\n    An excellent article by\n    \n    Clinger (1982) attempts to clarify the\n    multiple dimensions of confusion that arise here.","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-4","count":4,"href":"/sicpjs/4.2.2#footnote-link-4","child":[{"body":"Notice that we also erase the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"env"},{"body":" from the thunk once the expression's\n    value has been computed.  This makes no difference in the values returned by\n    the interpreter.  It does help save space, however, because removing the\n    reference from the thunk to the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"env"},{"body":" once it is\n    no longer needed allows this structure to be\n    ","tag":"#text"},{"tag":"EM","child":[{"body":"garbage-collected","tag":"#text"}]},{"body":" and its space \n    recycled, as we will discuss in\n    section ","tag":"#text"},{"tag":"REF","body":"5.3","href":"/sicpjs/5.3"},{"body":".\n    ","tag":"#text"},{"tag":"TEXT","id":"#p14","child":[{"body":"\n      Similarly, we could have allowed unneeded environments in the memoized\n      delayed objects of section ","tag":"#text"},{"tag":"REF","body":"3.5.1","href":"/sicpjs/3.5.1"},{"body":"\n      to be garbage-collected, by having\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"memo"},{"body":"\n      do something like\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"fun = null;"},{"body":"\n      to discard the\n      function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"fun"},{"body":"\n      (which includes the environment in which the\n      \n\t  lambda expression\n\t  that makes up the tail of the stream\n\t\n      was evaluated) after storing its\n      value.\n    ","tag":"#text"}]}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-5","count":5,"href":"/sicpjs/4.2.2#footnote-link-5","child":[{"body":"This exercise demonstrates that the interaction between\n  lazy evaluation and side effects can be very confusing.  This is just what you\n  might expect from the discussion in chapter ","tag":"#text"},{"tag":"REF","body":"3","href":"/sicpjs/3"},{"body":".","tag":"#text"}]}]