[{"id":"/sicpjs/4.1.4","tag":"TITLE","body":"4.1.4  \n    Running the Evaluator as a Program"},{"tag":"TEXT","id":"#p1","child":[{"body":"\n    Given the evaluator, we have in our hands a description\n    (expressed in JavaScript)\n    of the process by which\n    JavaScript statements and expressions\n    are evaluated.  One advantage of expressing the evaluator as a program is\n    that we can run the program.  This gives us, running within\n    JavaScript,\n    a working model of how\n    JavaScript\n    itself evaluates expressions.  This can serve as a framework for\n    experimenting with evaluation rules, as we shall do later in this chapter.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p2","child":[{"body":"\n    Our evaluator program reduces expressions ultimately to the application of\n    \n    primitive\n    functions.\n    Therefore, all that we need to run the evaluator is to create a mechanism\n    that calls on the underlying\n    JavaScript\n    system to model the application of primitive\n    functions.","tag":"#text"}]},{"tag":"TEXT","id":"#p3","child":[{"body":"\n    There must be a binding for each primitive\n    function\n    name and operator, so that when\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    evaluates the\n    function expression\n    of an application of a primitive, it will find an\n    object to pass to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":".  We thus set up a \n    \n    global environment that associates unique objects with the names of the\n    primitive\n    functions and operators\n    that can appear in the expressions we will be evaluating.  \n    \n\tThe global environment also includes bindings for\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"undefined"},{"body":"\n\tand other names,\n      \n    so that they can be used as constants in expressions to be evaluated.\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":1,"eval":true,"prependLength":75,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiUDOA+uQIYDm7ApgCZMA2jcgApS1ALYAHWl2LkANKHIALLiw4BKUAG8cofaABOXcoUN1GTSa0qHRE6cVnktAMlehVrHvaky5WgC8wUqq6uwA3DgAvnhEZFS0oFwAHuSyfLIAbra04s7CDACe4gBG1PwMilmslYqlrAxq2Vq6BkYmZnT8suwqhSXllUEhPcR9ysI1w3rtc6AA-KDWtsLirADWaviGrPkDZRVVoNMMGvWNzcRZGrPzBgBcoGMTB0NnoAA8z739p7f3dpLLiGQzUOwAInI1GooHWxCKoFYhnYhHycgYoAYhEkkkEvCeENAAGpQHdAYCGORDJRxpR8EU3kctKSIYoiaTyRT5lSaXSGVNamcAdyniCwZDobD8FwAO5IlFo5yY7G4-E8Qkksncim82nsemM4qHYZatmgDnanX3PX8xn-DRRWIEEgUGh0WSkfjUBj6pjZXLEdEiFo6DqmcxKGz8YQtCKgZ3xN1JfC2KlMHZ7Lix66tcNdTxcbw5m7x51iYhU0LNKTkIr+66B4OgQKgYiEfj8KIuhLuuGbba7fbG97VWqELgfbT5yMrOwjo5j-gTs5luKuxJ0TP5JgLyrCbdcPPGCN0Lw+Q+OhPr3spodqaYrg-34+dSNsSgxy9rnAVquSGlxEoKgsjUP82AxFtniEYRBCpYQIRIHguFTJweHNJCUNpXhzi5a18IMOCRAhSBiFQ4CinNUBSPIutcIIhj2iIhD1hUJhYEgKj+zYjj6MYxjmIhVjlCYABRLjuJE0S+P4gjBIAOVYeSJIMRT5JFWTrUdX9aH-QDgMoUCmHA1g5F3QYjhbcl1kkUQWwAPkLYtSHOZZ9JAsDdIg8hVx0ytyDcyggI84yvNM8gmEfScrPaGy7MCRzz2ED8Yxc1yAKCgyjJMjFtL8vTMpCpNN0xVtmLw6D4Ihc8JPPfCZKYmCoWjCSUvq+QKsEucJLndrOqaoiJKIvr7kEyx207c1xo7fhuQawimp4Rg8VYSjFCWhgVsRCl5v0QTxXBLiDsMLSOtGprhKYVhSgYNlLuuzFAV2yriOJFT9GEFJFCKIJHJSLVtuewSAFp3tAT7vt+0B-uB0BAbO+YQZIZE1oMf72gSgxYfRoGmoAKjBiG4ah-68bh-Rcaq4BCa+4mHOh0AwHh-qqoAUhpyH6f+1nydASniOCQIVKJn6uZbEIfoRuZBIAQmCYXadFzH-rl1tJZZ4jPg5unla+Ax1fOqrPiFxQ5hFkmvlbYmpcaqr7O1pW-tARz9ANxGmvsk35nNsXPdd-mEJlsGGYxl3QBltGNPabTwMC4LDO2Dd3XMk1Sus1hbPPRQMvjozivdXzY5zrLE9vYgmGoUoACsuAoNPYozg8SHprr3IT80kpSpviA0XubfaYuiqT3S8vzpJLEHhOM2H4hu9ackTwLSw2E4XgBBg+J2Un0CIW0xMZ7jkumCCvEuGDVhNznsNF8jTvoznq997LrFOkkBscjBIMCnn9ob49NIMjvybAUDOkgMjCG3qXZM5c9xVAqppHUkDQr+XCind4z0EEGFAeApBY9y6VxrnXRQ8DMGAiQTlCKUUzj91IQYFQNZJB1iAZ-YMe88Cx3oUwdg3oGj8GYXkZwUEmimDfgGFh39uycO4ZXWo-Cv5yAiEAA","body":"function setup_environment() {\n    return extend_environment(append(primitive_function_symbols,\n                                     primitive_constant_symbols),\n                              append(primitive_function_objects, \n                                     primitive_constant_values),\n                              the_empty_environment);\n} "},{"tag":"SNIPPET","latex":false,"id":2,"eval":true,"prependLength":83,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiUDOA+uQIYDm7ApgCZMA2jcgApS1ALYAHWl2LkANKHIALLiw4BKUAG8cofaABOXcoUN1GTSa0qHRE6cVnktAMlehVrHvaky5WgC8wUqq6uwA3DgAvnhEZFS0oFwAHuSyfLIAbra04s7CDACe4gBG1PwMilmslYqlrAxq2Vq6BkYmZnT8suwqhSXllUEhPcR9ysI1w3rtc6AA-KDWtsLirADWaviGrPkDZRVVoNMMGvWNzcRZGrPzBgBcoGMTB0NnoAA8z739p7f3dpLLiGQzUOwAInI1GooHWxCKoFYhnYhHycgYoAYhEkkkEvCeENAAGpQHdAYCGORDJRxpR8EU3kctKSIYoiaTyRT5lSaXSGVNamcAdyniCwZDobD8FwAO5IlFo5yY7G4-E8Qkksncim82nsemM4qHYZatmgDnanX3PX8xn-DRRWIEEgUGh0WSkfjUBj6pjZXLEdEiFo6DqmcxKGz8YQtCKgZ3xN1JfC2KlMHZ7Lix66tcNdTxcbw5m7x51iYhU0LNKTkIr+66B4OgQKgYiEfj8KIuhLuuGbba7fbG97VWqELgfbT5yMrOwjo5j-gTs5luKuxJ0TP5JgLyrCbdcPPGCN0Lw+Q+OhPr3spodqaYrg-34+dSNsSgxy9rnAVquSGlxEoKgsjUP82AxFtniEYRBCpYQIRIHguFTJweHNJCUNpXhzi5a18IMOCRAhSBiFQ4CinNUBSPIutcIIhj2iIhD1hUJhYEgKj+zYjj6MYxjmIhVjlCYABRLjuJE0S+P4gjBIAOVYeSJIMRT5JFWTrUdX9aH-QDgMoUCmHA1g5F3QYjhbcl1kkUQWwAPkLYtSHOZZ9JAsDdIg8hVx0ytyDcyggI84yvNM8gmEfScrPaGy7MCRzz2ED8Yxc1yAKCgyjJMjFtL8vTMpCpNN0xVtmLw6D4Ihc8JPPfCZKYmCoWjCSUvq+QKsEucJLndrOqaoiJKIvr7kEyx207c1xo7fhuQawimp4Rg8VYSjFCWhgVsRCl5v0QTxXBLiDsMLSOtGprhKYVhSgYNlLuuzFAV2yriOJFT9GEFJFCKIJHJSLVtuewSAFp3tAT7vt+0B-uB0BAbO+YQZIZE1oMf72gSgxYfRoGmoAKjBiG4ah-68bh-Rcaq4BCa+4mHOh0AwHh-qqoAUhpyH6f+1nydASniOCQIVKJn6uZbEIfoRuZBIAQmCYXadFzH-rl1tJZZ4jPg5unla+Ax1fOqrPiFxQ5hFkmvlbYmpcaqr7O1pW-tARz9ANxGmvsk35nNsXPdd-mEJlsGGYxl3QBltGNPabTwMC4LDO2Dd3XMk1Sus1hbPPRQMvjozivdXzY5zrLE9vYgmGoUoACsuAoNPYozg8SHprr3IT80kpSpviA0XubfaYuiqT3S8vzpJLEHhOM2H4hu9ackTwLSw2E4XgBBg+J2Un0CIW0xMZ7jkumCCvEuGDVhNznsNF8jTvoznq997LrFOkkBscjBIMCnn9ob49NIMjvybAUDOkgMjCG3qXZM5c9xVAqppHUkDQr+XCind4z0EEGFAeApBY9y6VxrnXRQ8DMGAiQTlCKUUzj91IQYFQNZJB1iAZ-YMe88Cx3oUwdg3oGj8GYXkZwUEmimDfgGFh39uycO4ZXWo-Cv5yAiEAA","body":"const the_global_environment = setup_environment(); "}]},{"tag":"TEXT","id":"#p4","child":[{"body":"\n\tIt does not matter how we represent primitive function objects, so long\n\tas ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":" can identify and apply them using\n\tthe functions ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"is_primitive_function"},{"body":"\n\tand ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply_primitive_function"},{"body":".  We\n\thave chosen to represent a primitive function as a list beginning with\n\tthe string ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"primitive\""},{"body":" and\n\tcontaining a function in the underlying JavaScript that implements that\n\tprimitive.\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":3,"eval":true,"prependLength":5,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiUDOA+uQIYDm7ApgCZMA2jcgApS1ALYAHWl2LkANKHIALLiw4BKUAG8cofaABOXcoUN1GTSa0qHRE6cVnktAMlehVrHvaky5WgC8wUqq6uwA3DgAvnhEZFS09MyShpTilFQAbmrxFDTEwvFaugZGJmYWzGycvAJCRSSKAESp6ZmUOc0aUbEEJPlJbRnZaumS-FzizqyJhcU65abmnlzewmyU-I3EGj2gfWLEDOSg4gCeVmkjnWoThAyggXoGgifCrdcdXYrCAB6Kc5BAB8oD+oAA1KBzqAejgeIwJqxzsJLMNvrkBnNhBcru1RlZ+A89lEEQwkSj0QTxpNpnJZgUcZcqbdCcSekA","body":"function is_primitive_function(fun) {\n    return is_tagged_list(fun, \"primitive\");\n}\n\nfunction primitive_implementation(fun) { return head(tail(fun)); } "}]},{"tag":"TEXT","id":"#p5","child":[{"body":"The function\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"setup_environment"},{"body":"\n    will get the primitive names and implementation \n    functions\n    from a list:","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-1","body":"1","href":"/sicpjs/4.1.4#footnote-1"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nconst primitive_functions = list(list(\"head\",    head             ),\n                                 list(\"tail\",    tail             ),\n                                 list(\"pair\",    pair             ),\n                                 list(\"is_null\", is_null          ),\n                                 list(\"+\",       (x, y) => x + y  ),\n                                 $\\langle{}$more primitive functions$\\rangle$\n                                );\n\n\nconst primitive_function_symbols =\n    map(f => head(f), primitive_functions);\n\n\nconst primitive_function_objects =\n    map(f => list(\"primitive\", head(tail(f))),\n        primitive_functions);\n      "}]},{"tag":"TEXT","id":"#p6","child":[{"body":"\n\tSimilar to primitive functions, we define other primitive constants that are\n\tinstalled in the global environment by the function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"setup_environment"},{"body":".\n\t","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nconst primitive_constants = list(list(\"undefined\", undefined),\n                                 list(\"math_PI\",   math_PI)\n                                 $\\langle{}$more primitive constants$\\rangle$\n                                );\n\n\t\t\t\t \nconst primitive_constant_symbols =\n    map(c => head(c), primitive_constants);\n\n\nconst primitive_constant_values =\n    map(c => head(tail(c)), primitive_constants);\n\t  "}]},{"tag":"TEXT","id":"#p7","child":[{"body":"\n    To apply a \n    primitive function,\n    we simply apply the implementation\n    function\n    to the arguments, using the underlying\n    JavaScript\n    system:","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-2","body":"2","href":"/sicpjs/4.1.4#footnote-2"},{"tag":"SNIPPET","latex":false,"id":4,"eval":true,"prependLength":16,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiUDOA+uQIYDm7ApgCZMA2jcgApS1ALYAHWl2LkANKHIALLiw4BKUAG8cofaABOXcoUN1GTSa0qHRE6cVnktAMlehVrHvaky5WgC8wUqq6uwA3DgAvnhEZFS09MyShpTilFQAbmrxFDTEwvFaugZGJmYWzGycvAJCRSSKAESp6ZmUOc0aUbEEJPlJbRnZaumS-FzizqyJhcU65abmnlzewmyU-I3EGj2gfWLEDOSg4gCeVmkjnWoThAyggXoGgifCrdcdXYrCAB6Kc5BAB8oD+oAA1KBzqAejgeIwJqxzsJLMNvrkBnNhBcru1RlZ+A89lEEQwkSj0QTxpNpnJZgUcZcqbdCcS4f0EgVQKxJBNmV8CXlsfFFKxDOw3i4dC99MZlnRefymJRiEwSDwuIZ+OdVewmAArVhZVgMUhpSQiWVlG0GFk5FVSWkzEUkDRiiVSuF9JU6vE3B3Cxm4+13IkMRRS4QYRQAJhJQA","body":"function apply_primitive_function(fun, arglist) {\n    return apply_in_underlying_javascript(\n               primitive_implementation(fun), arglist);\n} "}]},{"tag":"TEXT","id":"#p8","child":[{"body":"\n\tFor convenience in running the metacircular evaluator, we provide a\n\t","tag":"#text"},{"tag":"EM","child":[{"body":"driver loop","tag":"#text"}]},{"body":" that models the read-evaluate-print loop of \n\tthe underlying JavaScript system. It prints a \n\t","tag":"#text"},{"tag":"EM","child":[{"body":"prompt","tag":"#text"}]},{"body":" and reads an input program as a string.\n\tIt transforms the program string\n\tinto a tagged-list representation of the statement as described in\n\tsection ","tag":"#text"},{"tag":"REF","body":"4.1.2","href":"/sicpjs/4.1.2"},{"body":"—a\n\tprocess called parsing and accomplished by the primitive function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"parse"},{"body":".\n\tWe precede each printed result by\n\tan ","tag":"#text"},{"tag":"EM","child":[{"body":"output prompt","tag":"#text"}]},{"body":" so as to distinguish the value of the\n\tprogram from other output that may be printed. The driver loop gets\n\tthe program environment of the previous program as argument.\n\tAs described at the end of section ","tag":"#text"},{"tag":"REF","body":"3.2.4","href":"/sicpjs/3.2.4"},{"body":", the\n\tdriver loop treats the program as if it were in a block: It\n\tscans out the declarations, extends the given environment by a frame\n\tcontaining a binding of each name to\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"*unassigned*\""},{"body":", and evaluates\n\tthe program with respect to the extended environment, which\n\tis then passed as argument to the next iteration of the driver loop.\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":5,"eval":true,"prependLength":481,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqSlbdpzk2DgIgoitbmEj7WfiGqLQEKsObwjn4o7Xf2s7j4dnsCT2ZkmobC4z4us9+0Qg5kgVQfTzOdZbquHMTlz24+UP80t4tFFuJvo9163y7Z14++2t3eP4oQVlABglhXWhSY-I8oJWWs4SSYPCecDWi0zY+OdAHZyHIYg2DC6ldk0cVGuawJSDC6QP8-ixwbWy3t0XekETzQj-v-QIF8My+3XEfJ4Ok-wzDAUBVC84vgblQUSX0nQvysxvukb+0hpDK1XoJNWSo+ztiIkDIeoBU6gASrnahZR4q0GjN+KujDWxLADLnTekht6gM-AfaEigErdRTtCCKZAEL3CQhtJg0VMG-CcHIzCG1nRthkHZCYI8jjXgSkjDK3k2q5RQrw3RkCoH-w0Qol2gMaq2I+OzMhH1VE-XsdQRR4prZ+iaFJU+vUDKAI6P6GGoBiIACpvG+OicRXQ4TAko3IUSdCk0S5+3yjhfW9DQY2jtE4OurQlAF0mlcY0ppuSsxsS41xrxUnvVVuheRPi8oblya8YOjCc7RQLm0pC64W5GkhKeHGfJ6kWCFFXQZK5knNHrnM4ZCzFagCGvHEGIT7BDTIc0teIh0bYPGcfPG9C5m4P9C3Aqkxjl3lWbUvOkwC53MGqU0ZJooTAQmfPQwdTzAzP0ds0ATt1quzegQTSTBCCsA4FAOAiBkDoCwAAJjSevImkgQQgg2i4L6tDyb2krCCe25gz7ukkDlb8oAABkNLQBk1EJIPxrMoqRWioSp8WK9kfRmGEOk+CQLBInPYTF2LcWYNocRflHhpBPRXh4twArrmsuMAEIFIqGVMr8ZWaggqflNI+oU+0MrPBDVJSFTVkrpVKtlYk9ZpTDUtJmP0K+TxhV9TFTi7ykqcLEVdfKlWBz7DGr6F6fxeCLWg2tQGpJATpBOuDRveNajXXUvycCxlzLFC6v1dfRNFD4KYRQqqjVnrnDEu9Xi74UrlmJEDfswtdb3wPKFRmzVWadWUq-J2nN3bvw6VSR9Zt2d3mVLGTUttZaDK9tzX2vVA6C3pJQaI8B3zr4eoMl6iV+K-WpyET8V5HFQAAB8T2Nm3T63dZ4SJSFMpIFs9oj1GDPReitWKq2+pvVEuKz6eUtNeZcpo6bp00RTT9NNs7+0EKHQB1dQERnjs+Sc917a+pQYXXOmD-6k2hv3e+V5ihXW6CGh86ppAo3Autfhw98GiT2uIw66aSHyNLoxc4cM+pDQsa+SBrZmrL3Vs6d+6VrpuMQmQ-QBtHixMUrKt6HECyEFyk3SGuYEarkQa9LoDDebEGwaTZxyMHCYxTv4+h7V86vxYZAjpHDhbQ1GfE1U3jpUvQVV0JI1Tn0a2iYjM5idpB7VufKhiQGkj7PLucL+ujKGVPGAAJDqvM1u994qr01r9TF-ea7pMtOy4BHBabS0pfsKoqwhBaEYAM4WgrYiVwhYU8pjY3nyurVoSimr6S6trvYZwkrBMqNfWKe1nCABmLr68CtPloGKKOBHPx8cG5qvDMiD170Kw8Zxl1g0bfq2GgYtTtuOdkzxrbn8esIcaxVRW22AiXZwQlRdkX2MjZFXAoWPyDbksrTuzLInMmVlLloPLSaKkSfI0ty1Fns02YNS9kQMweZ02xhutDqWuXpaE1K5Hqpmhnaky+89ApBNfomSRXHfMPsg8myISn0sTIbWoMzN18XCjRuGxVqrtP7D0-pnNy2wmvtDw5z7LnOFOvuJaXziIssMTy1Zy1kXQ2xeje-RNhHorz5jy1jrUlP2P1-Y3AHEiMDiyg8LWb+0WT4Gzz1yYCw7PM2WbnQHOzCr8tF2p8bue33nfZtjjzkKmdp6AkD37zVru55S6TSbM2xkrd28DhH8tfQf5J70XxXlHGEJT2Bz722+vgUuvT1HwvbHEfOFYVD6HGPfsZaF6cqJrCLfpNYX10zwvQNath9B2zMeHO2ntNXm3Svu-Wpb0koH2Skia51LSTEDI8QEjQaqpLjvSs6jkcwYyC-6Q4mXyySdX3X0k6ryvnf3R0SL4P0yFf0EQID6i+orIl+99Ylvw0e-cWlfr-MN30na9cnKJbfXfa-ffRkL-I-ILIPGYZkYEMAukD-SA+Ah-YXP-J5ZbVPevbHP1eAt-cA5Aw-ICVvded-BkVtLvTfNrSrHCarJ-KbL3PfCUGvUXH4cXb9SXD3JNZMHmK-OkFggbMlFXdgtXYAjXFeRtdJUNYSZnNBVqCHL5cSUER+RIMjL5IJdHMrfFYiWQ5mFYRJO7BQlzFYZQkEVQ98AnRgCvewcgz-VA1kWbPQ1fMzCwRhOw3OOwoDPTOUKuclUA-gm-FA7-Y-a+NCGQjkOQp0UNNNOw5KKZAISVLub6cAwQ2zQhMGIfdkBYKIh4GI8NOI-5FxJIpg1IllYWO7T+XgyWQIoRcog1Gw+CSI-Q0I1DJ3ATNLT9IApvXQ5okgoPYwwLKHUGXTAdBgoSUEdQw+YY-3LtTDPvBovZSFVWaFWFTgBFHgZFNAMbdFSvJ8EmcmfYS4SjDo9hJoJlVYY4zArYEIS4P8Q6QiS4EiRoc4oRMQa4Q8BQd+EKYsagdScUUgvYwgXRI46SWvewAAQh1GJlJgpkUGOM4lACDUHyKU0kUGuzC08xMzOXHx0M8kyk0mC09FCwzixOjHjiz2dQ8m8C8h8mDRvBOOwMNwbxvApxpIJNVkBPsBKmJKawZIdzYJG0q0IF0HoKRN2O5NVg735LVUFK5xFNAEl3FKkKmylPMQ6hnEIDBLlPawVI12VKNSyJKWiC8C0DH2oJ0ONLaHtRfFmlgOcCtKUHNW80AJrQ2SiUdK5PBJGVtJnGdK0J7zmK-HNUaKLFbHuFIDBHVI6QOG6VlOBTnRmQNM90bgdHk1jMMAFNmIzK4mVMYU5VNlUHNmjPXFzmIVIQlMyNRPTKUxI1KU0PBNAA9CpVrKYwBFzORO63k28Mqnk21OzJhS9A7MrMHJyBbl7KHKzMj37VHNbkRM7PXnSjfiynEHahjNbKiHCwQntDyXH00BBHJg0xSTZRUX3MPM3JvhCGbMIlDVnKPIDDrIDB-HqG3JXIyOkDPLJnvKCQAB5QhPzFALy0IHjFBiIsRaBMjSAagbJzD4EN5KgciNp0hiJQAABqa42qb4UySMuSfYJTIwdC+1FC9Cyo8wLCgkEEXCwC3RJBPCZgAiUC8CogUQSiGCiw3WeCyIpCqJNCjCoqcinCwgPC+NIJQikiXi0ijeYmCiqii8xo1scoSobw65BZHE+7FpMYFwUoCGXcyYD6QRVYDcmi5OB2YvTIdPfCySikfQLStEWMo8WgCMqM7KCxGcdmSS9IBZE8wM78m+SYEIXtICz+TyreKzXy3QOdOSxeF6S0T2MYbygs+PFctc9cC1Z5eio6VSkA0gRoLyUAANKRIod2JOehQKGRFgL0XOZItM8NQFUMUGAym8bspTJqoc3QWc8c1qnId3SYPiBybvTShSnSheSQ4dTCZS+uLKqINSlqDSmyoanMky8wfS0Koyp8pakOMytPEhXyqy+MWy4ahypy5K1y-Kdy4K5NPBby3tSyz+EIZMH4QK6xJjPypaDeUK13ESn8SKmiwqlIRyWKtyeK9lDlRlC4JKks80gUECrK0iHKneCUfKyq5iQyYtetP6wIYqweQqRhWcqqr3O8uqjuYFRqjqlq2cn8DqoaCc7qjG-q+mrAgyQa7SnMpYsAKFFgdgdY7gJFPgXAFUvY5SVSGgdSOkihY6CjF0zoo3CWkiIW8yBtAW+weWkW+0FSBYGfeQpKKcmHIMiWuzPM8qlWv4iyYNZRHzDcfka1Tte1CwTtFKeIwIa1XNW28wXNB2-5a1a812psylZgD2q2nQzBH2zBAOooa1EvEhe1SO6QD4R2xInQyUBgBYSQGoe1JOlO6CrYeOiwa1B412h40MHO8wa1G0cmWYeoBgRJMusmCupgSYYui20C1Cn2iweE3QGoIwSKWGBidCrOxu61RiVu8wdu0ATuyJBiFifuz2nQxiUA12hiAIbuiwFiRegenQhJXQFIUe8e5ehiaJMe8wde3zYAYehSJ4serunu0AMAaewO3zAAUjPp3qvtAAYgfsPtAGPo3GIhBtbpfonu8s7pnt8whPZX-ovt3uvrAeimAfvp-p-OfsgdfoYj-PMDgfDp0J-MimHoAb3tAGwfQe-tAuhiQY7pQdAFhiIZAZ-uhhwa3oCDwevroeofgdAohLPrfsCGXvMChPMGOP5G6kYWNtFriiUyigmEAU7V0BEdNooT0WEdMmFpNrFpwVoHqAACtPjlFJH1NBBIkvalGFadMXcZykodIijZHVHD5uocBFGzJVa5s3wOKVF8VrVQUXZ7UPGNpG6EjrVIBSBnY3A06t6AmgmbpfGplS75Ba7YBIBXaa6nA4nIn6lony6ABRH2xJ9JlJ4onQgAOUkHybPsKfydes-iEaNqMccZox7IkYCEAXIEiV7XIB-CsZowUaqYcZUdqepvqYAXUyaeXtGNabaeqZ6bWxrFseHQ5GMisbROsgkkwUZIMiMicAJBfwPGYBEgoqcA0ckCkE3lMiLJuVSisfVo-PXC1oozMOWbnweqUshvyhWbVkuFMROo1PylfhYPmalNrMkuanacmeLi+qKNsW+b8V+d23Ua0aoCcQSIFCBdfHW2ptyc-kSqLOMiedn0kPzLBpBFbBfPxxcs+YimigeaqGxcUGmZaTZAEpBBpE0c+JeZ1HxO8jRJheZbQmIh-LZcYk0lIeQWcChfFs5aoEvKiR-Nkf5dVkFbgiUj9sZdhbGg+BCGIgAG1iLQA6XpLIzFBe0xWkgCKokSJKj0KdXsKGW51DWg5CKABdYiP8elqim1ufYgZMHEZSfKG4NQJuS13QG14ODOl0fYYiZicNiNyNqN6NoesFiwH1s2CsS13i4iAAHSC14otYoqVeZZTfTcVo+ndZ9CsGzQTaLKTYopZbLY3GrYrcjKaUYQJFUF3mrdzjTdIAAFlGIw4HBSBm3KBUh83uJ3DSZ+2TJfW2302u2e2hpB2gtuIlbQBxRTJ1IcQFqxgdMvpsRx76FG2+3SZc4i2cQS2-EyYt2d8Maa5zKdqm3SY25LRg3U7QL7Uz3vht283SBw2N5JM1ZEbw382MasaNrFHaAQQypc5SpkxFJ92cWyrXwSg+FzaDKQFaMcsgJAQfWwPsg6a3Dyq4lHFc5PFeh8OtErEnzoqGEqnQOyoVzc4lzMoqWAXQwyPAYSPxQ9YRq4Pgod5KB+26P-hqRMOyoZHWAsO2A3yKPGEEhKInBX2P9oLoo5P33ULnFb2fhW2VPUo1O0LnEeOx2NPnEs29W9O72KPQZl2Ta12WahPsgVzdBpPZPz3O6q5Xo8BiJypJByAcoH5jw4ZsQShmUNpiIF2LPV2Dqc18XCWIhsWSIv3kxyMpLgQIpw2nogA","body":"const input_prompt = \"M-evaluate input: \";\nconst output_prompt = \"M-evaluate value: \";\n\nfunction driver_loop(env) {\n    const input = user_read(input_prompt);\n    if (is_null(input)) {\n       display(\"evaluator terminated\");\n    } else {\n       const program = parse(input);\n       const locals = scan_out_declarations(program);\n       const unassigneds = list_of_unassigned(locals);\n       const program_env = extend_environment(locals, unassigneds, env);\n       const output = evaluate(program, program_env);\n       user_print(output_prompt, output);\n       return driver_loop(program_env);\n    }\n} "},{"body":"\n\tWe use JavaScript's ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"prompt"},{"body":" function\n\tto request and read the input string from the user:\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":6,"eval":true,"prependLength":0,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiEDOApgE4D6LTAhgCYAUABxbUAtgPJsG5FpWIBzAJSgA3jlDrQncoRZ0ho8YOFiJUmfIUBuHAF8gA","body":"function user_read(prompt_string) {\n    return prompt(prompt_string);\n} "},{"body":"\n    The function\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"prompt"},{"body":" returns\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"null"},{"body":" when the user cancels the\n    input. We use a special printing\n    function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"user_print"},{"body":",\n      \n    to avoid printing the environment part of a compound\n    function,\n    which may be a very long list (or may even contain cycles).\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":7,"eval":true,"prependLength":461,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqSlbdpzk2DgIgoitbmEj7WfiGqLQEKsObwjn4o7Xf2s7j4dnsCT2ZkmobC4z4us9+0Qg5kgVQfTzOdZbquHMTlz24+UP80t4tFFuJvo9163y7Z14++2t3eP4oQVlABglhXWhSY-I8oJWWs4SSYPCecDWi0zY+OdAHZyHIYg2DC6ldk0cVGuawJSDC6QP8-ixwbWy3t0XekETzQj-v-QIF8My+3XEfJ4Ok-wzDAUBVC84vgblQUSX0nQvysxvukb+0hpDK1XoJNWSo+ztiIkDIeoBU6gASrnahZR4q0GjN+KujDWxLADLnTekht6gM-AfaEigErdRTtCCKZAEL3CQhtJg0VMG-CcHIzCG1nRthkHZCYI8jjXgSkjDK3k2q5RQrw3RkCoH-w0Qol2gMaq2I+OzMhH1VE-XsdQRR4prZ+iaFJU+vUDKAI6P6GGoBiIACpvG+OicRXQ4TAko3IUSdCk0S5+3yjhfW9DQY2jtE4OurQlAF0mlcY0ppuSsxsS41xrxUnvVVuheRPi8oblya8YOjCc7RQLm0pC64W5GkhKeHGfJ6kWCFFXQZK5knNHrnM4ZCzFagCGvHEGIT7BDTIc0teIh0bYPGcfPG9C5m4P9C3Aqkxjl3lWbUvOkwC53MGqU0ZJooTAQmfPQwdTzAzP0ds0ATt1quzegQTSTBCCsA4FAOAiBkDoCwAAJjSevImkgQQgg2i4L6tDyb2krCCe25gz7ukkDlb8oAABkNLQBk1EJIPxrMoqRWioSp8WK9kfRmGEOk+CQLBInPYTF2LcWYNocRflHhpBPRXh4twArrmsuMAEIFIqGVMr8ZWaggqflNI+oU+0MrPBDVJSFTVkrpVKtlYk9ZpTDUtJmP0K+TxhV9TFTi7ykqcLEVdfKlWBz7DGr6F6fxeCLWg2tQGpJATpBOuDRveNajXXUvycCxlzLFC6v1dfRNFD4KYRQqqjVnrnDEu9Xi74UrlmJEDfswtdb3wPKFRmzVWadWUq-J2nN3bvw6VSR9Zt2d3mVLGTUttZaDK9tzX2vVA6C3pJQaI8B3zr4eoMl6iV+K-WpyET8V5HFQAAB8T2Nm3T63dZ4SJSFMpIFs9oj1GDPReitWKq2+pvVEuKz6eUtNeZcpo6bp00RTT9NNs7+0EKHQB1dQERnjs+Sc917a+pQYXXOmD-6k2hv3e+V5ihXW6CGh86ppAo3Autfhw98GiT2uIw66aSHyNLoxc4cM+pDQsa+SBrZmrL3Vs6d+6VrpuMQmQ-QBtHixMUrKt6HECyEFyk3SGuYEarkQa9LoDDebEGwaTZxyMHCYxTv4+h7V86vxYZAjpHDhbQ1GfE1U3jpUvQVV0JI1Tn0a2iYjM5idpB7VufKhiQGkj7PLucL+ujKGVPGAAJDqvM1u994qr01r9TF-ea7pMtOy4BHBabS0pfsKoqwhBaEYAM4WgrYiVwhYU8pjY3nyurVoSimr6S6trvYZwkrBMqNfWKe1nCABmLr68CtPloGKKOBHPx8cG5qvDMiD170Kw8Zxl1g0bfq2GgYtTtuOdkzxrbn8esIcaxVRW22AiXZwQlRdkX2MjZFXAoWPyDbksrTuzLInMmVlLloPLSaKkSfI0ty1Fns02YNS9kQMweZ02xhutDqWuXpaE1K5Hqpmhnaky+89ApBNfomSRXHfMPsg8myISn0sTIbWoMzN18XCjRuGxVqrtP7D0-pnNy2wmvtDw5z7LnOFOvuJaXziIssMTy1Zy1kXQ2xeje-RNhHorz5jy1jrUlP2P1-Y3AHEiMDiyg8LWb+0WT4Gzz1yYCw7PM2WbnQHOzCr8tF2p8bue33nfZtjjzkKmdp6AkD37zVru55S6TSbM2xkrd28DhH8tfQf5J70XxXlHGEJT2Bz722+vgUuvT1HwvbHEfOFYVD6HGPfsZaF6cqJrCLfpNYX10zwvQNath9B2zMeHO2ntNXm3Svu-Wpb0koH2Skia51LSTEDI8QEjQaqpLjvSs6jkcwYyC-6Q4mXyySdX3X0k6ryvnf3R0SL4P0yFf0EQID6i+orIl+99Ylvw0e-cWlfr-MN30na9cnKJbfXfa-ffRkL-I-ILIPGYZkYEMAukD-SA+Ah-YXP-J5ZbVPevbHP1eAt-cA5Aw-ICVvded-BkVtLvTfNrSrHCarJ-KbL3PfCUGvUXH4cXb9SXD3JNZMHmK-OkFggbMlFXdgtXYAjXFeRtdJUNYSZnNBVqCHL5cSUER+RIMjL5IJdHMrfFYiWQ5mFYRJO7BQlzFYZQkEVQ98AnRgCvewcgz-VA1kWbPQ1fMzCwRhOw3OOwoDPTOUKuclUA-gm-FA7-Y-a+NCGQjkOQp0UNNNOw5KKZAISVLub6cAwQ2zQhMGIfdkBYKIh4GI8NOI-5FxJIpg1IllYWO7T+XgyWQIoRcog1Gw+CSI-Q0I1DJ3ATNLT9IApvXQ5okgoPYwwLKHUGXTAdBgoSUEdQw+YY-3LtTDPvBovZSFVWaFWFTgBFHgZFNAMbdFSvJ8EmcmfYS4SjDo9hJoJlVYY4zArYEIS4P8Q6QiS4EiRoc4oRMQa4Q8BQd+EKYsagdScUUgvYwgXRI46SWvewAAQh1GJlJgpkUGOM4lACDUHyKU0kUGuzC08xMzOXHx0M8kyk0mC09FCwzixOjHjiz2dQ8m8C8h8mDRvBOOwMNwbxvApxpIJNVkBPsBKmJKawZIdzYJG0q0IF0HoKRN2O5NVg735LVUFK5xFNAEl3FKkKmylPMQ6hnEIDBLlPawVI12VKNSyJKWiC8C0DH2oJ0ONLaHtRfFmlgOcCtKUHNW80AJrQ2SiUdK5PBJGVtJnGdK0J7zmK-HNUaKLFbHuFIDBHVI6QOG6VlOBTnRmQNM90bgdHk1jMMAFNmIzK4mVMYU5VNlUHNmjPXFzmIVIQlMyNRPTKUxI1KU0PBNAA9CpVrKYwBFzORO63k28Mqnk21OzJhS9A7MrMHJyBbl7KHKzMj37VHNbkRM7PXnSjfiynEHahjNbKiHCwQntDyXH00BBHJg0xSTZRUX3MPM3JvhCGbMIlDVnKPIDDrIDB-HqG3JXIyOkDPLJnvKCQAB5QhPzFALy0IHjFBiIsRaBMjSAagbJzD4EN5KgciNp0hiJQAABqa42qb4UySMuSfYJTIwdC+1FC9Cyo8wLCgkEEXCwC3RJBPCZgAiUC8CogUQSiGCiw3WeCyIpCqJNCjCoqcinCwgPC+NIJQikiXi0ijeYmCiqii8xo1scoSobw65BZHE+7FpMYFwUoCGXcyYD6QRVYDcmi5OB2YvTIdPfCySikfQLStEWMo8WgCMqM7KCxGcdmSS9IBZE8wM78m+SYEIXtICz+TyreKzXy3QOdOSxeF6S0T2MYbygs+PFctc9cC1Z5eio6VSkA0gRoLyUAANKRIod2JOehQKGRFgL0XOZItM8NQFUMUGAym8bspTJqoc3QWc8c1qnId3SYPiBybvTShSnSheSQ4dTCZS+uLKqINSlqDSmyoanMky8wfS0Koyp8pakOMytPEhXyqy+MWy4ahypy5K1y-Kdy4K5NPBby3tSyz+EIZMH4QK6xJjPypaDeUK13ESn8SKmiwqlIRyWKtyeK9lDlRlC4JKks80gUECrK0iHKneCUfKyq5iQyYtetP6wIYqweQqRhWcqqr3O8uqjuYFRqjqlq2cn8DqoaCc7qjG-q+mrAgyQa7SnMpYsAKFFgdgdY7gJFPgXAFUvY5SVSGgdSOkihY6CjF0zoo3CWkiIW8yBtAW+weWkW+0FSBYGfeQpKKcmHIMiWuzPM8qlWv4iyYNZRHzDcfka1Tte1CwTtFKeIwIa1XNW28wXNB2-5a1a812psylZgD2q2nQzBH2zBAOooa1EvEhe1SO6QD4R2xInQyUBgBYSQGoe1JOlO6CrYeOiwa1B412h40MHO8wa1G0cmWYeoBgRJMusmCupgSYYui20C1Cn2iweE3QGoIwSKWGBidCrOxu61RiVu8wdu0ATuyJBiFifuz2nQxiUA12hiAIbuiwFiRegenQhJXQFIUe8e5ehiaJMe8wde3zYAYehSJ4serunu0AMAaewO3zAAUjPp3qvtAAYgfsPtAGPo3GIhBtbpfonu8s7pnt8whPZX-ovt3uvrAeimAfvp-p-OfsgdfoYj-PMDgfDp0J-MimHoAb3tAGwfQe-tAuhiQY7pQdAFhiIZAZ-uhhwa3oCDwevroeofgdAohLPrfsCGXvMChPMGOP5G6kYWNtFriiUyigmEAU7V0BEdNooT0WEdMmFpNrFpwVoHqAACtPjlFJH1NBBIkvalGFadMXcZykodIijZHVHD5uocBFGzJVa5s3wOKVF8VrVQUXZ7UPGNpG6EjrVIBSBnY3A06t6AmgmbpfGplS75Ba7YBIBXaa6nA4nIn6lony6ABRH2xJ9JlJ4onQgAOUkHybPsKfydes-iEaNqMccZox7IkYCEAXIEiV7XIB-CsZowUaqYcZUdqepvqYAXUyaeXtGNabaeqZ6bWxrFseHQ5GMisbROsgkkwUZIMiMicAJBfwPGYBEgoqcA0ckCkE3lMiLJuVSisfVo-PXC1oozMOWbnweqUshvyhWbVkuFMROo1PylfhYPmalNrMkuanacmeLi+qKNsW+b8V+d23Ua0aoCcQSIFCBdfHW2ptyc-kSqLOMiedn0kPzLBpBFbBfPxxcs+YimigeaqGxcUGmZaTZAEpBBpE0c+JeZ1HxO8jRJheZbQmIh-LZcYk0lIeQWcChfFs5aoEvKiR-Nkf5dVkFbgiUj9sZdhbGg+BCGIgAG1iLQA6XpLIzFBe0xWkgCKokSJKj0KdXsKGW51DWg5CKABdYiP8elqim1ufYgZMHEZSfKG4NQJuS13QG14ODOl0fYYiZicNiNyNqN6NoesFiwH1s2CsS13i4iAAHSC14otYoqVeZZTfTcVvdZ9C9Z-p3koFUFJmQt0EbALlKmTFAowF4pRU4g4jjY+E5QJfUYiGxbsyAA","body":"function user_print(string, object) {\n    function prepare(object) {\n        return is_compound_function(object)\n               ? \"< compound-function >\"\n               : is_primitive_function(object)\n               ? \"< primitive-function >\"\n               : is_pair(object)\n               ? pair(prepare(head(object)),\n                      prepare(tail(object)))\n               : object;\n    }\n    display(string + \" \" + stringify(prepare(object)));\n} "}]},{"tag":"TEXT","id":"#p9","child":[{"body":"\n    Now all we need to do to run the evaluator is to initialize the global\n    environment and start the driver loop.  Here is a sample interaction:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":8,"eval":true,"prependLength":506,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqSlbdpzk2DgIgoitbmEj7WfiGqLQEKsObwjn4o7Xf2s7j4dnsCT2ZkmobC4z4us9+0Qg5kgVQfTzOdZbquHMTlz24+UP80t4tFFuJvo9163y7Z14++2t3eP4oQVlABglhXWhSY-I8oJWWs4SSYPCecDWi0zY+OdAHZyHIYg2DC6ldk0cVGuawJSDC6QP8-ixwbWy3t0XekETzQj-v-QIF8My+3XEfJ4Ok-wzDAUBVC84vgblQUSX0nQvysxvukb+0hpDK1XoJNWSo+ztiIkDIeoBU6gASrnahZR4q0GjN+KujDWxLADLnTekht6gM-AfaEigErdRTtCCKZAEL3CQhtJg0VMG-CcHIzCG1nRthkHZCYI8jjXgSkjDK3k2q5RQrw3RkCoH-w0Qol2gMaq2I+OzMhH1VE-XsdQRR4prZ+iaFJU+vUDKAI6P6GGoBiIACpvG+OicRXQ4TAko3IUSdCk0S5+3yjhfW9DQY2jtE4OurQlAF0mlcY0ppuSsxsS41xrxUnvVVuheRPi8oblya8YOjCc7RQLm0pC64W5GkhKeHGfJ6kWCFFXQZK5knNHrnM4ZCzFagCGvHEGIT7BDTIc0teIh0bYPGcfPG9C5m4P9C3Aqkxjl3lWbUvOkwC53MGqU0ZJooTAQmfPQwdTzAzP0ds0ATt1quzegQTSTBCCsA4FAOAiBkDoCwAAJjSevImkgQQgg2i4L6tDyb2krCCe25gz7ukkDlb8oAABkNLQBk1EJIPxrMoqRWioSp8WK9kfRmGEOk+CQLBInPYTF2LcWYNocRflHhpBPRXh4twArrmsuMAEIFIqGVMr8ZWaggqflNI+oU+0MrPBDVJSFTVkrpVKtlYk9ZpTDUtJmP0K+TxhV9TFTi7ykqcLEVdfKlWBz7DGr6F6fxeCLWg2tQGpJATpBOuDRveNajXXUvycCxlzLFC6v1dfRNFD4KYRQqqjVnrnDEu9Xi74UrlmJEDfswtdb3wPKFRmzVWadWUq-J2nN3bvw6VSR9Zt2d3mVLGTUttZaDK9tzX2vVA6C3pJQaI8B3zr4eoMl6iV+K-WpyET8V5HFQAAB8T2Nm3T63dZ4SJSFMpIFs9oj1GDPReitWKq2+pvVEuKz6eUtNeZcpo6bp00RTT9NNs7+0EKHQB1dQERnjs+Sc917a+pQYXXOmD-6k2hv3e+V5ihXW6CGh86ppAo3Autfhw98GiT2uIw66aSHyNLoxc4cM+pDQsa+SBrZmrL3Vs6d+6VrpuMQmQ-QBtHixMUrKt6HECyEFyk3SGuYEarkQa9LoDDebEGwaTZxyMHCYxTv4+h7V86vxYZAjpHDhbQ1GfE1U3jpUvQVV0JI1Tn0a2iYjM5idpB7VufKhiQGkj7PLucL+ujKGVPGAAJDqvM1u994qr01r9TF-ea7pMtOy4BHBabS0pfsKoqwhBaEYAM4WgrYiVwhYU8pjY3nyurVoSimr6S6trvYZwkrBMqNfWKe1nCABmLr68CtPloGKKOBHPx8cG5qvDMiD170Kw8Zxl1g0bfq2GgYtTtuOdkzxrbn8esIcaxVRW22AiXZwQlRdkX2MjZFXAoWPyDbksrTuzLInMmVlLloPLSaKkSfI0ty1Fns02YNS9kQMweZ02xhutDqWuXpaE1K5Hqpmhnaky+89ApBNfomSRXHfMPsg8myISn0sTIbWoMzN18XCjRuGxVqrtP7D0-pnNy2wmvtDw5z7LnOFOvuJaXziIssMTy1Zy1kXQ2xeje-RNhHorz5jy1jrUlP2P1-Y3AHEiMDiyg8LWb+0WT4Gzz1yYCw7PM2WbnQHOzCr8tF2p8bue33nfZtjjzkKmdp6AkD37zVru55S6TSbM2xkrd28DhH8tfQf5J70XxXlHGEJT2Bz722+vgUuvT1HwvbHEfOFYVD6HGPfsZaF6cqJrCLfpNYX10zwvQNath9B2zMeHO2ntNXm3Svu-Wpb0koH2Skia51LSTEDI8QEjQaqpLjvSs6jkcwYyC-6Q4mXyySdX3X0k6ryvnf3R0SL4P0yFf0EQID6i+orIl+99Ylvw0e-cWlfr-MN30na9cnKJbfXfa-ffRkL-I-ILIPGYZkYEMAukD-SA+Ah-YXP-J5ZbVPevbHP1eAt-cA5Aw-ICVvded-BkVtLvTfNrSrHCarJ-KbL3PfCUGvUXH4cXb9SXD3JNZMHmK-OkFggbMlFXdgtXYAjXFeRtdJUNYSZnNBVqCHL5cSUER+RIMjL5IJdHMrfFYiWQ5mFYRJO7BQlzFYZQkEVQ98AnRgCvewcgz-VA1kWbPQ1fMzCwRhOw3OOwoDPTOUKuclUA-gm-FA7-Y-a+NCGQjkOQp0UNNNOw5KKZAISVLub6cAwQ2zQhMGIfdkBYKIh4GI8NOI-5FxJIpg1IllYWO7T+XgyWQIoRcog1Gw+CSI-Q0I1DJ3ATNLT9IApvXQ5okgoPYwwLKHUGXTAdBgoSUEdQw+YY-3LtTDPvBovZSFVWaFWFTgBFHgZFNAMbdFSvJ8EmcmfYS4SjDo9hJoJlVYY4zArYEIS4P8Q6QiS4EiRoc4oRMQa4Q8BQd+EKYsagdScUUgvYwgXRI46SWvewAAQh1GJlJgpkUGOM4lACDUHyKU0kUGuzC08xMzOXHx0M8kyk0mC09FCwzixOjHjiz2dQ8m8C8h8mDRvBOOwMNwbxvApxpIJNVkBPsBKmJKawZIdzYJG0q0IF0HoKRN2O5NVg735LVUFK5xFNAEl3FKkKmylPMQ6hnEIDBLlPawVI12VKNSyJKWiC8C0DH2oJ0ONLaHtRfFmlgOcCtKUHNW80AJrQ2SiUdK5PBJGVtJnGdK0J7zmK-HNUaKLFbHuFIDBHVI6QOG6VlOBTnRmQNM90bgdHk1jMMAFNmIzK4mVMYU5VNlUHNmjPXFzmIVIQlMyNRPTKUxI1KU0PBNAA9CpVrKYwBFzORO63k28Mqnk21OzJhS9A7MrMHJyBbl7KHKzMj37VHNbkRM7PXnSjfiynEHahjNbKiHCwQntDyXH00BBHJg0xSTZRUX3MPM3JvhCGbMIlDVnKPIDDrIDB-HqG3JXIyOkDPLJnvKCQAB5QhPzFALy0IHjFBiIsRaBMjSAagbJzD4EN5KgciNp0hiJQAABqa42qb4UySMuSfYJTIwdC+1FC9Cyo8wLCgkEEXCwC3RJBPCZgAiUC8CogUQSiGCiw3WeCyIpCqJNCjCoqcinCwgPC+NIJQikiXi0ijeYmCiqii8xo1scoSobw65BZHE+7FpMYFwUoCGXcyYD6QRVYDcmi5OB2YvTIdPfCySikfQLStEWMo8WgCMqM7KCxGcdmSS9IBZE8wM78m+SYEIXtICz+TyreKzXy3QOdOSxeF6S0T2MYbygs+PFctc9cC1Z5eio6VSkA0gRoLyUAANKRIod2JOehQKGRFgL0XOZItM8NQFUMUGAym8bspTJqoc3QWc8c1qnId3SYPiBybvTShSnSheSQ4dTCZS+uLKqINSlqDSmyoanMky8wfS0Koyp8pakOMytPEhXyqy+MWy4ahypy5K1y-Kdy4K5NPBby3tSyz+EIZMH4QK6xJjPypaDeUK13ESn8SKmiwqlIRyWKtyeK9lDlRlC4JKks80gUECrK0iHKneCUfKyq5iQyYtetP6wIYqweQqRhWcqqr3O8uqjuYFRqjqlq2cn8DqoaCc7qjG-q+mrAgyQa7SnMpYsAKFFgdgdY7gJFPgXAFUvY5SVSGgdSOkihY6CjF0zoo3CWkiIW8yBtAW+weWkW+0FSBYGfeQpKKcmHIMiWuzPM8qlWv4iyYNZRHzDcfka1Tte1CwTtFKeIwIa1XNW28wXNB2-5a1a812psylZgD2q2nQzBH2zBAOooa1EvEhe1SO6QD4R2xInQyUBgBYSQGoe1JOlO6CrYeOiwa1B412h40MHO8wa1G0cmWYeoBgRJMusmCupgSYYui20C1Cn2iweE3QGoIwSKWGBidCrOxu61RiVu8wdu0ATuyJBiFifuz2nQxiUA12hiAIbuiwFiRegenQhJXQFIUe8e5ehiaJMe8wde3zYAYehSJ4serunu0AMAaewO3zAAUjPp3qvtAAYgfsPtAGPo3GIhBtbpfonu8s7pnt8whPZX-ovt3uvrAeimAfvp-p-OfsgdfoYj-PMDgfDp0J-MimHoAb3tAGwfQe-tAuhiQY7pQdAFhiIZAZ-uhhwa3oCDwevroeofgdAohLPrfsCGXvMChPMGOP5G6kYWNtFriiUyigmEAU7V0BEdNooT0WEdMmFpNrFpwVoHqAACtPjlFJH1NBBIkvalGFadMXcZykodIijZHVHD5uocBFGzJVa5s3wOKVF8VrVQUXZ7UPGNpG6EjrVIBSBnY3A06t6AmgmbpfGplS75Ba7YBIBXaa6nA4nIn6lony6ABRH2xJ9JlJ4onQgAOUkHybPsKfydes-iEaNqMccZox7IkYCEAXIEiV7XIB-CsZowUaqYcZUdqepvqYAXUyaeXtGNabaeqZ6bWxrFseHQ5GMisbROsgkkwUZIMiMicAJBfwPGYBEgoqcA0ckCkE3lMiLJuVSisfVo-PXC1oozMOWbnweqUshvyhWbVkuFMROo1PylfhYPmalNrMkuanacmeLi+qKNsW+b8V+d23Ua0aoCcQSIFCBdfHW2ptyc-kSqLOMiedn0kPzLBpBFbBfPxxcs+YimigeaqGxcUGmZaTZAEpBBpE0c+JeZ1HxO8jRJheZbQmIh-LZcYk0lIeQWcChfFs5aoEvKiR-Nkf5dVkFbgiUj9sZdhbGg+BCGIgAG1iLQA6XpLIzFBe0xWkgCKokSJKj0KdXsKGW51DWg5CKABdYiP8elqim1ufYgZMHEZSfKG4NQJuS13QG14ODOl0fYYiZicNiNyNqN6NoesFiwH1s2CsS13i4iAAHSC14otYoqVeZZTfTcVo+ndZ9CsGzQTaLKTYopZbLY3GrYrcjKaUYQJFUF3mrdzjTdIAAFlGIw4HBSBm3KBUh83uJ3DSZ+2TJfW2302u2e2hpB2gtuIlbQBxRTJ1IcQFqxgdMvpsRx76FG2+3SZc4i2cQS2-EyYt2d8Maa5zKdqm3SY25LRg3U7QL7Uz3vht283SBw2N5JM1ZEbw382MasaNrFHaAQQypc5SpkxFJ92cWyrXwSg+FzaDKQFaMcsgJAQfWwPsg6a3Dyq4lHFc5PFeh8OtErEnzoqGEqnQOyoVzc4lzMoqWAXQwyPAYSPxQ9YRq4Pgod5KB+26P-hqRMOyoZHWAsO2A3yKPGEEhKInBX2P9oLoo5P33ULnFb2fhW2VPUo1O0LnEeOx2NPnEs29W9O72KPQZl2Ta12WahPsgVzdBpPZPz3O6q5Xo8BiJypJByAcoH5jw4ZsQShmUNpiIF2LPV2Dqc18XCWIhsWSIv3kxyMpLgQIpw2nogA","body":"const the_global_environment = setup_environment();\ndriver_loop(the_global_environment); "},{"tag":"SNIPPET","latex":false,"id":9,"eval":true,"body":"function append(xs, ys) { \n    return is_null(xs)\n           ? ys\n           : pair(head(xs), append(tail(xs), ys)); \n} ","prependLength":508,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqSlbdpzk2DgIgoitbmEj7WfiGqLQEKsObwjn4o7Xf2s7j4dnsCT2ZkmobC4z4us9+0Qg5kgVQfTzOdZbquHMTlz24+UP80t4tFFuJvo9163y7Z14++2t3eP4oQVlABglhXWhSY-I8oJWWs4SSYPCecDWi0zY+OdAHZyHIYg2DC6ldk0cVGuawJSDC6QP8-ixwbWy3t0XekETzQj-v-QIF8My+3XEfJ4Ok-wzDAUBVC84vgblQUSX0nQvysxvukb+0hpDK1XoJNWSo+ztiIkDIeoBU6gASrnahZR4q0GjN+KujDWxLADLnTekht6gM-AfaEigErdRTtCCKZAEL3CQhtJg0VMG-CcHIzCG1nRthkHZCYI8jjXgSkjDK3k2q5RQrw3RkCoH-w0Qol2gMaq2I+OzMhH1VE-XsdQRR4prZ+iaFJU+vUDKAI6P6GGoBiIACpvG+OicRXQ4TAko3IUSdCk0S5+3yjhfW9DQY2jtE4OurQlAF0mlcY0ppuSsxsS41xrxUnvVVuheRPi8oblya8YOjCc7RQLm0pC64W5GkhKeHGfJ6kWCFFXQZK5knNHrnM4ZCzFagCGvHEGIT7BDTIc0teIh0bYPGcfPG9C5m4P9C3Aqkxjl3lWbUvOkwC53MGqU0ZJooTAQmfPQwdTzAzP0ds0ATt1quzegQTSTBCCsA4FAOAiBkDoCwAAJjSevImkgQQgg2i4L6tDyb2krCCe25gz7ukkDlb8oAABkNLQBk1EJIPxrMoqRWioSp8WK9kfRmGEOk+CQLBInPYTF2LcWYNocRflHhpBPRXh4twArrmsuMAEIFIqGVMr8ZWaggqflNI+oU+0MrPBDVJSFTVkrpVKtlYk9ZpTDUtJmP0K+TxhV9TFTi7ykqcLEVdfKlWBz7DGr6F6fxeCLWg2tQGpJATpBOuDRveNajXXUvycCxlzLFC6v1dfRNFD4KYRQqqjVnrnDEu9Xi74UrlmJEDfswtdb3wPKFRmzVWadWUq-J2nN3bvw6VSR9Zt2d3mVLGTUttZaDK9tzX2vVA6C3pJQaI8B3zr4eoMl6iV+K-WpyET8V5HFQAAB8T2Nm3T63dZ4SJSFMpIFs9oj1GDPReitWKq2+pvVEuKz6eUtNeZcpo6bp00RTT9NNs7+0EKHQB1dQERnjs+Sc917a+pQYXXOmD-6k2hv3e+V5ihXW6CGh86ppAo3Autfhw98GiT2uIw66aSHyNLoxc4cM+pDQsa+SBrZmrL3Vs6d+6VrpuMQmQ-QBtHixMUrKt6HECyEFyk3SGuYEarkQa9LoDDebEGwaTZxyMHCYxTv4+h7V86vxYZAjpHDhbQ1GfE1U3jpUvQVV0JI1Tn0a2iYjM5idpB7VufKhiQGkj7PLucL+ujKGVPGAAJDqvM1u994qr01r9TF-ea7pMtOy4BHBabS0pfsKoqwhBaEYAM4WgrYiVwhYU8pjY3nyurVoSimr6S6trvYZwkrBMqNfWKe1nCABmLr68CtPloGKKOBHPx8cG5qvDMiD170Kw8Zxl1g0bfq2GgYtTtuOdkzxrbn8esIcaxVRW22AiXZwQlRdkX2MjZFXAoWPyDbksrTuzLInMmVlLloPLSaKkSfI0ty1Fns02YNS9kQMweZ02xhutDqWuXpaE1K5Hqpmhnaky+89ApBNfomSRXHfMPsg8myISn0sTIbWoMzN18XCjRuGxVqrtP7D0-pnNy2wmvtDw5z7LnOFOvuJaXziIssMTy1Zy1kXQ2xeje-RNhHorz5jy1jrUlP2P1-Y3AHEiMDiyg8LWb+0WT4Gzz1yYCw7PM2WbnQHOzCr8tF2p8bue33nfZtjjzkKmdp6AkD37zVru55S6TSbM2xkrd28DhH8tfQf5J70XxXlHGEJT2Bz722+vgUuvT1HwvbHEfOFYVD6HGPfsZaF6cqJrCLfpNYX10zwvQNath9B2zMeHO2ntNXm3Svu-Wpb0koH2Skia51LSTEDI8QEjQaqpLjvSs6jkcwYyC-6Q4mXyySdX3X0k6ryvnf3R0SL4P0yFf0EQID6i+orIl+99Ylvw0e-cWlfr-MN30na9cnKJbfXfa-ffRkL-I-ILIPGYZkYEMAukD-SA+Ah-YXP-J5ZbVPevbHP1eAt-cA5Aw-ICVvded-BkVtLvTfNrSrHCarJ-KbL3PfCUGvUXH4cXb9SXD3JNZMHmK-OkFggbMlFXdgtXYAjXFeRtdJUNYSZnNBVqCHL5cSUER+RIMjL5IJdHMrfFYiWQ5mFYRJO7BQlzFYZQkEVQ98AnRgCvewcgz-VA1kWbPQ1fMzCwRhOw3OOwoDPTOUKuclUA-gm-FA7-Y-a+NCGQjkOQp0UNNNOw5KKZAISVLub6cAwQ2zQhMGIfdkBYKIh4GI8NOI-5FxJIpg1IllYWO7T+XgyWQIoRcog1Gw+CSI-Q0I1DJ3ATNLT9IApvXQ5okgoPYwwLKHUGXTAdBgoSUEdQw+YY-3LtTDPvBovZSFVWaFWFTgBFHgZFNAMbdFSvJ8EmcmfYS4SjDo9hJoJlVYY4zArYEIS4P8Q6QiS4EiRoc4oRMQa4Q8BQd+EKYsagdScUUgvYwgXRI46SWvewAAQh1GJlJgpkUGOM4lACDUHyKU0kUGuzC08xMzOXHx0M8kyk0mC09FCwzixOjHjiz2dQ8m8C8h8mDRvBOOwMNwbxvApxpIJNVkBPsBKmJKawZIdzYJG0q0IF0HoKRN2O5NVg735LVUFK5xFNAEl3FKkKmylPMQ6hnEIDBLlPawVI12VKNSyJKWiC8C0DH2oJ0ONLaHtRfFmlgOcCtKUHNW80AJrQ2SiUdK5PBJGVtJnGdK0J7zmK-HNUaKLFbHuFIDBHVI6QOG6VlOBTnRmQNM90bgdHk1jMMAFNmIzK4mVMYU5VNlUHNmjPXFzmIVIQlMyNRPTKUxI1KU0PBNAA9CpVrKYwBFzORO63k28Mqnk21OzJhS9A7MrMHJyBbl7KHKzMj37VHNbkRM7PXnSjfiynEHahjNbKiHCwQntDyXH00BBHJg0xSTZRUX3MPM3JvhCGbMIlDVnKPIDDrIDB-HqG3JXIyOkDPLJnvKCQAB5QhPzFALy0IHjFBiIsRaBMjSAagbJzD4EN5KgciNp0hiJQAABqa42qb4UySMuSfYJTIwdC+1FC9Cyo8wLCgkEEXCwC3RJBPCZgAiUC8CogUQSiGCiw3WeCyIpCqJNCjCoqcinCwgPC+NIJQikiXi0ijeYmCiqii8xo1scoSobw65BZHE+7FpMYFwUoCGXcyYD6QRVYDcmi5OB2YvTIdPfCySikfQLStEWMo8WgCMqM7KCxGcdmSS9IBZE8wM78m+SYEIXtICz+TyreKzXy3QOdOSxeF6S0T2MYbygs+PFctc9cC1Z5eio6VSkA0gRoLyUAANKRIod2JOehQKGRFgL0XOZItM8NQFUMUGAym8bspTJqoc3QWc8c1qnId3SYPiBybvTShSnSheSQ4dTCZS+uLKqINSlqDSmyoanMky8wfS0Koyp8pakOMytPEhXyqy+MWy4ahypy5K1y-Kdy4K5NPBby3tSyz+EIZMH4QK6xJjPypaDeUK13ESn8SKmiwqlIRyWKtyeK9lDlRlC4JKks80gUECrK0iHKneCUfKyq5iQyYtetP6wIYqweQqRhWcqqr3O8uqjuYFRqjqlq2cn8DqoaCc7qjG-q+mrAgyQa7SnMpYsAKFFgdgdY7gJFPgXAFUvY5SVSGgdSOkihY6CjF0zoo3CWkiIW8yBtAW+weWkW+0FSBYGfeQpKKcmHIMiWuzPM8qlWv4iyYNZRHzDcfka1Tte1CwTtFKeIwIa1XNW28wXNB2-5a1a812psylZgD2q2nQzBH2zBAOooa1EvEhe1SO6QD4R2xInQyUBgBYSQGoe1JOlO6CrYeOiwa1B412h40MHO8wa1G0cmWYeoBgRJMusmCupgSYYui20C1Cn2iweE3QGoIwSKWGBidCrOxu61RiVu8wdu0ATuyJBiFifuz2nQxiUA12hiAIbuiwFiRegenQhJXQFIUe8e5ehiaJMe8wde3zYAYehSJ4serunu0AMAaewO3zAAUjPp3qvtAAYgfsPtAGPo3GIhBtbpfonu8s7pnt8whPZX-ovt3uvrAeimAfvp-p-OfsgdfoYj-PMDgfDp0J-MimHoAb3tAGwfQe-tAuhiQY7pQdAFhiIZAZ-uhhwa3oCDwevroeofgdAohLPrfsCGXvMChPMGOP5G6kYWNtFriiUyigmEAU7V0BEdNooT0WEdMmFpNrFpwVoHqAACtPjlFJH1NBBIkvalGFadMXcZykodIijZHVHD5uocBFGzJVa5s3wOKVF8VrVQUXZ7UPGNpG6EjrVIBSBnY3A06t6AmgmbpfGplS75Ba7YBIBXaa6nA4nIn6lony6ABRH2xJ9JlJ4onQgAOUkHybPsKfydes-iEaNqMccZox7IkYCEAXIEiV7XIB-CsZowUaqYcZUdqepvqYAXUyaeXtGNabaeqZ6bWxrFseHQ5GMisbROsgkkwUZIMiMicAJBfwPGYBEgoqcA0ckCkE3lMiLJuVSisfVo-PXC1oozMOWbnweqUshvyhWbVkuFMROo1PylfhYPmalNrMkuanacmeLi+qKNsW+b8V+d23Ua0aoCcQSIFCBdfHW2ptyc-kSqLOMiedn0kPzLBpBFbBfPxxcs+YimigeaqGxcUGmZaTZAEpBBpE0c+JeZ1HxO8jRJheZbQmIh-LZcYk0lIeQWcChfFs5aoEvKiR-Nkf5dVkFbgiUj9sZdhbGg+BCGIgAG1iLQA6XpLIzFBe0xWkgCKokSJKj0KdXsKGW51DWg5CKABdYiP8elqim1ufYgZMHEZSfKG4NQJuS13QG14ODOl0fYYiZicNiNyNqN6NoesFiwH1s2CsS13i4iAAHSC14otYoqVeZZTfTcVo+ndZ9CsGzQTaLKTYopZbLY3GrYrcjKaUYQJFUF3mrdzjTdIAAFlGIw4HBSBm3KBUh83uJ3DSZ+2TJfW2302u2e2hpB2gtuIlbQBxRTJ1IcQFqxgdMvpsRx76FG2+3SZc4i2cQS2-EyYt2d8Maa5zKdqm3SY25LRg3U7QL7Uz3vht283SBw2N5JM1ZEbw382MasaNrFHaAQQypc5SpkxFJ92cWyrXwSg+FzaDKQFaMcsgJAQfWwPsg6a3Dyq4lHFc5PFeh8OtErEnzoqGEqnQOyoVzc4lzMoqWAXQwyPAYSPxQ9YRq4Pgod5KB+26P-hqRMOyoZHWAsO2A3yKPGEEhKInBX2P9oLoo5P33ULnFb2fhW2VPUo1O0LnEeOx2NPnEs29W9O72KPQZl2Ta12WahPsgVzdBpPZPz3O6q5Xo8BiJypJByAcoH5jw4ZsQShmUNpiIF2LPV2Dqc18XCWIhsWSIv3kxyMpLgQIpw35V8AwAXMokAAlMgFCrERL5gCKQlJdldjEEoNENL0AadgThQXt-t1ICrmZ9EFgy4QGGoBs8lcs+EoJEINrpsa8-VyzFrn8CFsKobjuu2ecirqrwxFyWdir7x8UPAAgabq8FyNT+rggEb61SQIi+oIi8gDiXQa1AEkiUQIiwgDibqZb7t6r2b0pDbsATVnb3QTVvbl74iA797k70ATVs797i7+zn+O14HkHoAA","output":"M-evaluate value:\nundefined"},{"tag":"SNIPPET","latex":false,"id":10,"eval":true,"body":"append(list(\"a\", \"b\", \"c\"), list(\"d\", \"e\", \"f\")); ","prependLength":508,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqSlbdpzk2DgIgoitbmEj7WfiGqLQEKsObwjn4o7Xf2s7j4dnsCT2ZkmobC4z4us9+0Qg5kgVQfTzOdZbquHMTlz24+UP80t4tFFuJvo9163y7Z14++2t3eP4oQVlABglhXWhSY-I8oJWWs4SSYPCecDWi0zY+OdAHZyHIYg2DC6ldk0cVGuawJSDC6QP8-ixwbWy3t0XekETzQj-v-QIF8My+3XEfJ4Ok-wzDAUBVC84vgblQUSX0nQvysxvukb+0hpDK1XoJNWSo+ztiIkDIeoBU6gASrnahZR4q0GjN+KujDWxLADLnTekht6gM-AfaEigErdRTtCCKZAEL3CQhtJg0VMG-CcHIzCG1nRthkHZCYI8jjXgSkjDK3k2q5RQrw3RkCoH-w0Qol2gMaq2I+OzMhH1VE-XsdQRR4prZ+iaFJU+vUDKAI6P6GGoBiIACpvG+OicRXQ4TAko3IUSdCk0S5+3yjhfW9DQY2jtE4OurQlAF0mlcY0ppuSsxsS41xrxUnvVVuheRPi8oblya8YOjCc7RQLm0pC64W5GkhKeHGfJ6kWCFFXQZK5knNHrnM4ZCzFagCGvHEGIT7BDTIc0teIh0bYPGcfPG9C5m4P9C3Aqkxjl3lWbUvOkwC53MGqU0ZJooTAQmfPQwdTzAzP0ds0ATt1quzegQTSTBCCsA4FAOAiBkDoCwAAJjSevImkgQQgg2i4L6tDyb2krCCe25gz7ukkDlb8oAABkNLQBk1EJIPxrMoqRWioSp8WK9kfRmGEOk+CQLBInPYTF2LcWYNocRflHhpBPRXh4twArrmsuMAEIFIqGVMr8ZWaggqflNI+oU+0MrPBDVJSFTVkrpVKtlYk9ZpTDUtJmP0K+TxhV9TFTi7ykqcLEVdfKlWBz7DGr6F6fxeCLWg2tQGpJATpBOuDRveNajXXUvycCxlzLFC6v1dfRNFD4KYRQqqjVnrnDEu9Xi74UrlmJEDfswtdb3wPKFRmzVWadWUq-J2nN3bvw6VSR9Zt2d3mVLGTUttZaDK9tzX2vVA6C3pJQaI8B3zr4eoMl6iV+K-WpyET8V5HFQAAB8T2Nm3T63dZ4SJSFMpIFs9oj1GDPReitWKq2+pvVEuKz6eUtNeZcpo6bp00RTT9NNs7+0EKHQB1dQERnjs+Sc917a+pQYXXOmD-6k2hv3e+V5ihXW6CGh86ppAo3Autfhw98GiT2uIw66aSHyNLoxc4cM+pDQsa+SBrZmrL3Vs6d+6VrpuMQmQ-QBtHixMUrKt6HECyEFyk3SGuYEarkQa9LoDDebEGwaTZxyMHCYxTv4+h7V86vxYZAjpHDhbQ1GfE1U3jpUvQVV0JI1Tn0a2iYjM5idpB7VufKhiQGkj7PLucL+ujKGVPGAAJDqvM1u994qr01r9TF-ea7pMtOy4BHBabS0pfsKoqwhBaEYAM4WgrYiVwhYU8pjY3nyurVoSimr6S6trvYZwkrBMqNfWKe1nCABmLr68CtPloGKKOBHPx8cG5qvDMiD170Kw8Zxl1g0bfq2GgYtTtuOdkzxrbn8esIcaxVRW22AiXZwQlRdkX2MjZFXAoWPyDbksrTuzLInMmVlLloPLSaKkSfI0ty1Fns02YNS9kQMweZ02xhutDqWuXpaE1K5Hqpmhnaky+89ApBNfomSRXHfMPsg8myISn0sTIbWoMzN18XCjRuGxVqrtP7D0-pnNy2wmvtDw5z7LnOFOvuJaXziIssMTy1Zy1kXQ2xeje-RNhHorz5jy1jrUlP2P1-Y3AHEiMDiyg8LWb+0WT4Gzz1yYCw7PM2WbnQHOzCr8tF2p8bue33nfZtjjzkKmdp6AkD37zVru55S6TSbM2xkrd28DhH8tfQf5J70XxXlHGEJT2Bz722+vgUuvT1HwvbHEfOFYVD6HGPfsZaF6cqJrCLfpNYX10zwvQNath9B2zMeHO2ntNXm3Svu-Wpb0koH2Skia51LSTEDI8QEjQaqpLjvSs6jkcwYyC-6Q4mXyySdX3X0k6ryvnf3R0SL4P0yFf0EQID6i+orIl+99Ylvw0e-cWlfr-MN30na9cnKJbfXfa-ffRkL-I-ILIPGYZkYEMAukD-SA+Ah-YXP-J5ZbVPevbHP1eAt-cA5Aw-ICVvded-BkVtLvTfNrSrHCarJ-KbL3PfCUGvUXH4cXb9SXD3JNZMHmK-OkFggbMlFXdgtXYAjXFeRtdJUNYSZnNBVqCHL5cSUER+RIMjL5IJdHMrfFYiWQ5mFYRJO7BQlzFYZQkEVQ98AnRgCvewcgz-VA1kWbPQ1fMzCwRhOw3OOwoDPTOUKuclUA-gm-FA7-Y-a+NCGQjkOQp0UNNNOw5KKZAISVLub6cAwQ2zQhMGIfdkBYKIh4GI8NOI-5FxJIpg1IllYWO7T+XgyWQIoRcog1Gw+CSI-Q0I1DJ3ATNLT9IApvXQ5okgoPYwwLKHUGXTAdBgoSUEdQw+YY-3LtTDPvBovZSFVWaFWFTgBFHgZFNAMbdFSvJ8EmcmfYS4SjDo9hJoJlVYY4zArYEIS4P8Q6QiS4EiRoc4oRMQa4Q8BQd+EKYsagdScUUgvYwgXRI46SWvewAAQh1GJlJgpkUGOM4lACDUHyKU0kUGuzC08xMzOXHx0M8kyk0mC09FCwzixOjHjiz2dQ8m8C8h8mDRvBOOwMNwbxvApxpIJNVkBPsBKmJKawZIdzYJG0q0IF0HoKRN2O5NVg735LVUFK5xFNAEl3FKkKmylPMQ6hnEIDBLlPawVI12VKNSyJKWiC8C0DH2oJ0ONLaHtRfFmlgOcCtKUHNW80AJrQ2SiUdK5PBJGVtJnGdK0J7zmK-HNUaKLFbHuFIDBHVI6QOG6VlOBTnRmQNM90bgdHk1jMMAFNmIzK4mVMYU5VNlUHNmjPXFzmIVIQlMyNRPTKUxI1KU0PBNAA9CpVrKYwBFzORO63k28Mqnk21OzJhS9A7MrMHJyBbl7KHKzMj37VHNbkRM7PXnSjfiynEHahjNbKiHCwQntDyXH00BBHJg0xSTZRUX3MPM3JvhCGbMIlDVnKPIDDrIDB-HqG3JXIyOkDPLJnvKCQAB5QhPzFALy0IHjFBiIsRaBMjSAagbJzD4EN5KgciNp0hiJQAABqa42qb4UySMuSfYJTIwdC+1FC9Cyo8wLCgkEEXCwC3RJBPCZgAiUC8CogUQSiGCiw3WeCyIpCqJNCjCoqcinCwgPC+NIJQikiXi0ijeYmCiqii8xo1scoSobw65BZHE+7FpMYFwUoCGXcyYD6QRVYDcmi5OB2YvTIdPfCySikfQLStEWMo8WgCMqM7KCxGcdmSS9IBZE8wM78m+SYEIXtICz+TyreKzXy3QOdOSxeF6S0T2MYbygs+PFctc9cC1Z5eio6VSkA0gRoLyUAANKRIod2JOehQKGRFgL0XOZItM8NQFUMUGAym8bspTJqoc3QWc8c1qnId3SYPiBybvTShSnSheSQ4dTCZS+uLKqINSlqDSmyoanMky8wfS0Koyp8pakOMytPEhXyqy+MWy4ahypy5K1y-Kdy4K5NPBby3tSyz+EIZMH4QK6xJjPypaDeUK13ESn8SKmiwqlIRyWKtyeK9lDlRlC4JKks80gUECrK0iHKneCUfKyq5iQyYtetP6wIYqweQqRhWcqqr3O8uqjuYFRqjqlq2cn8DqoaCc7qjG-q+mrAgyQa7SnMpYsAKFFgdgdY7gJFPgXAFUvY5SVSGgdSOkihY6CjF0zoo3CWkiIW8yBtAW+weWkW+0FSBYGfeQpKKcmHIMiWuzPM8qlWv4iyYNZRHzDcfka1Tte1CwTtFKeIwIa1XNW28wXNB2-5a1a812psylZgD2q2nQzBH2zBAOooa1EvEhe1SO6QD4R2xInQyUBgBYSQGoe1JOlO6CrYeOiwa1B412h40MHO8wa1G0cmWYeoBgRJMusmCupgSYYui20C1Cn2iweE3QGoIwSKWGBidCrOxu61RiVu8wdu0ATuyJBiFifuz2nQxiUA12hiAIbuiwFiRegenQhJXQFIUe8e5ehiaJMe8wde3zYAYehSJ4serunu0AMAaewO3zAAUjPp3qvtAAYgfsPtAGPo3GIhBtbpfonu8s7pnt8whPZX-ovt3uvrAeimAfvp-p-OfsgdfoYj-PMDgfDp0J-MimHoAb3tAGwfQe-tAuhiQY7pQdAFhiIZAZ-uhhwa3oCDwevroeofgdAohLPrfsCGXvMChPMGOP5G6kYWNtFriiUyigmEAU7V0BEdNooT0WEdMmFpNrFpwVoHqAACtPjlFJH1NBBIkvalGFadMXcZykodIijZHVHD5uocBFGzJVa5s3wOKVF8VrVQUXZ7UPGNpG6EjrVIBSBnY3A06t6AmgmbpfGplS75Ba7YBIBXaa6nA4nIn6lony6ABRH2xJ9JlJ4onQgAOUkHybPsKfydes-iEaNqMccZox7IkYCEAXIEiV7XIB-CsZowUaqYcZUdqepvqYAXUyaeXtGNabaeqZ6bWxrFseHQ5GMisbROsgkkwUZIMiMicAJBfwPGYBEgoqcA0ckCkE3lMiLJuVSisfVo-PXC1oozMOWbnweqUshvyhWbVkuFMROo1PylfhYPmalNrMkuanacmeLi+qKNsW+b8V+d23Ua0aoCcQSIFCBdfHW2ptyc-kSqLOMiedn0kPzLBpBFbBfPxxcs+YimigeaqGxcUGmZaTZAEpBBpE0c+JeZ1HxO8jRJheZbQmIh-LZcYk0lIeQWcChfFs5aoEvKiR-Nkf5dVkFbgiUj9sZdhbGg+BCGIgAG1iLQA6XpLIzFBe0xWkgCKokSJKj0KdXsKGW51DWg5CKABdYiP8elqim1ufYgZMHEZSfKG4NQJuS13QG14ODOl0fYYiZicNiNyNqN6NoesFiwH1s2CsS13i4iAAHSC14otYoqVeZZTfTcVo+ndZ9CsGzQTaLKTYopZbLY3GrYrcjKaUYQJFUF3mrdzjTdIAAFlGIw4HBSBm3KBUh83uJ3DSZ+2TJfW2302u2e2hpB2gtuIlbQBxRTJ1IcQFqxgdMvpsRx76FG2+3SZc4i2cQS2-EyYt2d8Maa5zKdqm3SY25LRg3U7QL7Uz3vht283SBw2N5JM1ZEbw382MasaNrFHaAQQypc5SpkxFJ92cWyrXwSg+FzaDKQFaMcsgJAQfWwPsg6a3Dyq4lHFc5PFeh8OtErEnzoqGEqnQOyoVzc4lzMoqWAXQwyPAYSPxQ9YRq4Pgod5KB+26P-hqRMOyoZHWAsO2A3yKPGEEhKInBX2P9oLoo5P33ULnFb2fhW2VPUo1O0LnEeOx2NPnEs29W9O72KPQZl2Ta12WahPsgVzdBpPZPz3O6q5Xo8BiJypJByAcoH5jw4ZsQShmUNpiIF2LPV2Dqc18XCWIhsWSIv3kxyMpLgQIpw35V8AwAXMokAAlMgFCrERL5gCKQlJdldjEEoNENL0AadgThQXt-t1ICrmZ9EFgy4QGGoBs8lcs+EoJEINrpsa8-VyzFrn8CFsKobjuu2ecirqrwxFyWdir7x8UPAAgabq8FyNT+rggEb61SQIi+oIi8gDiXQa1AEkiUQIiwgDibqZb7t6r2b0pDbsATVnb3QTVvbl74iA797k70ATVs797i7+zn+O14HkHoAA","output":"M-evaluate value: \n[\"a\", [\"b\", [\"c\", [\"d\", [\"e\", [\"f\", null]]]]]]"}]},{"tag":"EXERCISE","title":"Exercise 4.14","id":"#ex-4.14","child":[{"body":"\n    Eva Lu Ator and Louis Reasoner are each experimenting with the\n    metacircular evaluator.  Eva types in the definition of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":", and runs some test programs that use it.\n    They work fine.  Louis, in contrast, has installed the system version of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":" as a primitive for the metacircular\n    evaluator.  When he tries it, things go terribly wrong.  Explain why\n    Louis's ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":" fails even though\n    Eva's works.\n    ","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-1","count":1,"href":"/sicpjs/4.1.4#footnote-link-1","child":[{"body":"Any\n    function\n    defined in the underlying\n    JavaScript\n    can be used as a primitive for the metacircular evaluator.  The name of a\n    primitive installed in the evaluator need not be the same as the name of its\n    implementation in the underlying\n    JavaScript;\n    the names are the same here because the metacircular evaluator implements\n    JavaScript    \n    itself.\n    Thus, for example, we could put \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list(\"first\", head)"},{"body":" \n    or \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list(\"square\", x => x * x)"},{"body":"\n    in the list of \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"primitive_functions"},{"body":".\n      ","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-2","count":2,"href":"/sicpjs/4.1.4#footnote-link-2","child":[{"body":"\n        JavaScript's ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":" method \n\texpects the function arguments in a ","tag":"#text"},{"tag":"EM","child":[{"body":"vector","tag":"#text"}]},{"body":". (Vectors\n\tare called \"","tag":"#text"},{"body":"arrays","tag":"#text"},{"body":"\" in JavaScript.)\n\tThus, the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"arglist"},{"body":" is transformed into \n        a\n\t\n\tvector—here using a while\n\tloop (see exercise ","tag":"#text"},{"tag":"REF","body":"4.7","href":"/sicpjs/4.1.2#ex-4.7"},{"body":"):\n\t","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nfunction apply_in_underlying_javascript(prim, arglist) {\n    const arg_vector = [];               // empty vector\n    let i = 0;\n    while (!is_null(arglist)) {\n        arg_vector[i] = head(arglist);   // store value at index $\\texttt{i}$\n        i = i + 1;\n        arglist = tail(arglist);\n    }\n    return prim.apply(prim, arg_vector); // $\\texttt{apply}$ is accessed via $\\texttt{prim}$\n}\n\t  "},{"body":"\n\tWe also made use of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply_in_underlying_javascript"},{"body":"\n\tto declare the function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply_generic"},{"body":"\n\tin section ","tag":"#text"},{"tag":"REF","body":"2.4.3","href":"/sicpjs/2.4.3"},{"body":".\n      ","tag":"#text"}]}]