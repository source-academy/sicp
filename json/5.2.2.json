[{"id":"/sicpjs/5.2.2","tag":"TITLE","body":"5.2.2  \n    The Assembler"},{"body":"\n\n  The assembler transforms the sequence of controller\n  instructions\n  for a machine into a corresponding list of machine instructions, each with its\n  execution\n  function.\n  Overall, the assembler is much like the evaluators we studied in\n  chapter ","tag":"#text"},{"tag":"REF","body":"4","href":"/sicpjs/4"},{"body":"—there is an input language (in this case, the\n  register-machine language) and we must perform an appropriate action for each\n  type of component in the language.\n   \n  ","tag":"#text"},{"tag":"TEXT","id":"#p1","child":[{"body":"\n    The technique of producing an execution\n    function\n    for each instruction is just what we used in\n    section ","tag":"#text"},{"tag":"REF","body":"4.1.7","href":"/sicpjs/4.1.7"},{"body":" to speed\n    up the evaluator by separating analysis from runtime execution.  As we\n    saw in chapter ","tag":"#text"},{"tag":"REF","body":"4","href":"/sicpjs/4"},{"body":", much useful\n    \n    analysis of\n    JavaScript\n    expressions could\n    be performed without knowing the actual values of\n    names.\n    Here, analogously, much useful analysis of register-machine-language\n    expressions can be performed without knowing the actual contents of\n    machine registers.  For example, we can replace references to\n    registers by pointers to the register objects, and we can\n    replace references to labels by pointers to the place in the\n    instruction sequence that the label designates.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p2","child":[{"body":"\n    Before it can generate the instruction execution\n    functions,\n    the assembler must know what all the labels refer to, so it begins by\n    scanning the controller sequence to separate the labels from the\n    instructions.  As it scans the controller, it constructs both a list of\n    instructions and a table that associates each label with a pointer\n    into that list.  Then the assembler augments the instruction list by\n    inserting the execution\n    function\n    for each instruction.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p3","child":[{"body":"\n    The ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"assemble"},{"body":"function\n    is the main entry to the assembler. It takes the controller\n    sequence and the\n    machine model as arguments and returns the instruction sequence to be stored\n    in the model.\n    \n\tThe function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"assemble"},{"body":"\n    calls\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"extract_labels"},{"body":"\n    to build the initial instruction list and label table from the supplied\n    controller.  The second argument\n    to\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"extract_labels"},{"body":"\n    is a\n    function\n    to be called to process these results: This\n    function\n    uses\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"update_insts"},{"body":"\n    to generate the instruction execution\n    functions\n    and insert them into the instruction list, and returns the modified list.\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":1,"eval":true,"prependLength":467,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAVgHQCZMChsDMBXAOwGMAXASwHsjQBzAUzIH0AnBuigZzIdYAoAtgEMSACwpEGAGlDs6zIsMEMAlKADe2UDrlMCrWiPGSG-AESMW87r1bnV-eYuVqA3NgC+uQqUo1QMgBPAAczSR5WAnJqInUNPTIDWjEGYQATfgiyKJiaVTdQb3xiPNoAGyoqAGsCEOYQ1gpBfi4gwQAjKnLZKjDWYX8iLnjtXRIaHlAAN2Fy0ABeUGEuLioSVvauntA+vkHYkY9dROTQbmZidIY8U0zZ8tUxk5eAflA+VioBNs7u2XMxGqRCoAHdaHsBkNQABaGHLVYMTrlBgOZ4vXQALlAqQy-DIwgo5X4D1UBS8PlK0MqNTqzHKwg6DGJDKZ5S4slZzJcKlGJwmwzIMzmiwRaw2XPKPJkoElR3R7CShnOXEuRGutyk9zmTwxbw+rC+Akl0oBVxud1ljOZsPhKy4SI6KLRepO2IJRJJOo8xV8ZVAImqDAaTUEFEo02DDAAHvUbvwYyFZMYJFJOdb2XzdBQ8KAsqqBTxhEQWImE7GyZp0fzJkKSKLCwSS8xE8wHgQzInya7FWd+OoFgA+UAkY66TwfdkMc65-P0jMt2PlkKVrSuxvnQVcUU02r1SX8OXptmL-cZ5dkscY3vK-uLYfZLhXoqTh0zvMXGw8Pini9ZjEbqwopWGwHC2HwQiiKmMpfnYp6gXQf7PicN60HeQ70EwzACrwJZcE4BSgOiE7Mm+a56p83zLmaRDAmCtCJuwqyxIEoTTnCYqOs63bjhSJR+CxgbBpCBw0PB8aJsmUGmMepG9P0onDP+I61rsIQ7lUe4hs0-AiUM8F9Be8n7EM8o1oKyy+NuSwiCECb3gGwhBtpYYRlGsYtngCZSSYaZWmyIzSNWrohXpsQGQp6r4V2PE6KheYDsOwghCE5RBMwkhqtcrBpZICgAFbCLMXAkE0IRkPwwUhRifRSXZuYYV5qiyMIVmXnxfrQvaFB0EQThgd+rCmqAawGCQahVih+jKuUtgWN1vXmLIsE-koKiyKNrDjeS3idSxC1EAh0r8AdGWCrkQzKfFuKZB6xKndkF2xO1u1UvtzG9W2cwdr+D3ndEl2aERU1KikaS3YSxJ3SdH2HY9APPS9lICQEQnMKd8bZD50GyeyxlQocsghCQykbgSrBWMBWErQIKYyWKPWHc4a3hIK7XmVM7buepSynVzv7ZLFKkWfzviLFVKrMGFYllvzXYS+8aPS4drbxnLsbY-TR5qSZhy6nq2Jo40zThhQkbiV56tJo5vkynKQvxehw7kdVugOiwOEMHh+LCBTTCyKLxD9kLrsZLMpDBsT-DE4REvjj6yP+mHxbjQ0Gwx5NbtYZ73vE7I0MgTnZD4THl5Eb6b2o05wa8DwnlZIKmt+dryscqAeAMnQRMk5nOgbgK6SmwESy1x7NCD0MDc8ELOYfqqyu-gPQ9xMpHN1uPy-MGLNnV1LCn6arXlx67J99xvQxNzKx+n67Lf73ryG6I7iW9zfOju9hNC4cX-Ad8IXfCwnuFXwwdH6n2ThHNO0cSaFGvicTwz4SJTlficSiAgsagHMB0DIgQGBTHhv6Di9ouKoiFt4CuKNaCj34EvQGCR4qzR4BYUeS1AHL0IhQ-0o9P7qmXviPBLACF0IVNNMGeJobcKEYjWBnDoRow6AMUgYh64YLps3DMbc-4AIzi7YWUxrhTCWAolOyiDEVUFs+Wec4TRljMauCWG5HwaVpGeNkh4NG43ggeOxIcn6iISg5XRb8rGFy-l7H+Wj7Fv1dB-IuJcSCyEfL40+SCyJwNDukcOqco4xzASfbwb8EHEVfNOIJug0FTzIACbB6RQDGKUZuSICMAhEMRMiUhiCOqV1oPU8Q7i2TxFODNOaWDFHiFYZKDhidoS9NMQI-gsyzpNLKFdfxN0faekWVI-IsdZEsQuASOgjB0j0jmhMQQIQaDhPzqkZghzVmg0liEQkAhzmXKkCWdQAAyL5OJwY0KoBcq5nzFgLBHrcw5Cd+L+nkPwFmgyGEjPkKw+FhQ9kBE-ANOCZYuxA3igc-+xzTlMMkpg5FUzoXQhpvBWFuL6FrP+dDGKaLpksUbMWCqXMEX+MYRVcw7KSysK5Syyl+yCy1g5b+OlIjHkEqOQwE5vLqKYIFWQBwUK9oBFVfBLmF48UMvEZDJCRRWUBAPPC-VjylXmElCi1wFLNW0AuDYpcdKhlOtVIcolSrSU2ozOqk1oqzULlbAeN111GVGuZYGx1ak4X2stWca1fQ7W8hFbGi4C8cUVlfvi1UzyKACFxT8yWXqFXEoqusrsAIU07VNRCe+MsPKGT6Kebljz1nQ3Wa2mKDruk6wJk2+oIkoq6TjDm+ljzoY9orOm-taM6BUDuUuzGjcbY438nJUAOj0QbjMcBJdZAl1mMqTPWczqQ1Lh8Sg8YqknFLF3HSA82sXWuOZPwHxeTn4OViWE3OCTGnFzISU98c5qW2IEVEvUgEOBU2sFiiCaiYIIaGq2WFn6Jbfowr+ks4T4myFCbh728h2bjhA2UnQFSMFYJwYu5dgGnotLtG0p0HTiJdMofQQ9VB+nMnbUmkZdGj0TIzH2zjQnj3zIk0snIzS4hAxlWcTtRrpPbJXjI+t27DJFhINUB5ZwdPVAsJckI6qKSxpCAQLgYhWgEl0wHb6E1dHxUM8ZqzYgHBenKB2OtQajC7y4EVKMXlVHST8oZ7upNVLyDgwhcCtMwsykMzJo6LNT0O38U7G9IVLPWds6IaoBHs5-p-iR5JroIHZPTjA6+RTXqcbRkxI97AVFrqQxtOzhXt0910TBugsWaaQVth1grKXmauHS8+LDzt0nv2K0R0rHAibac66R8BmSU6R2q7HV2dXNOBcjP1Og-HhlMPMAd1Ey0OBiZhQI74ZgSOJtO3ypr93WEkbnZx5L2RUsTe+-9FZuaDUQ09P95Zl1fOxqNnwPA3xBCtZ4JfXGbdW6RdfhuUQ0Ilj9Fh6weHmPYinssee+ejaVZLgJzs7LeihSU8OtvRyzks0eXjHTpHs3omc50HfXWkxyvTYU1z5YZQt5Bx21zyrW3oHi5SYg8jEsqNrpo7UnHcOGNydtJxdpZn4Ecf9KrvHJ1AeToE2dg3ghWF05u9Cc36MyjRxh3DmTjH5POeBxs4ktu1NIz84z9yDASAEH0o6ypyOkfAyF6fPO7dO4jfs2pEYQOp1sVPaCpY5gDrmGvorXeGMQttcS2HhPkXr7uhT4LNPmCWHZ793cgRCOqnrq1h44vMf-4l9dmXsIqewXp9mVn12OfnKLNXYjpv6iAqyC0R36qXfWbT0r5YbjA-qpD+DNJ0fjf2ubrxt1-WIU5897BZgi7K+Qpr+YBdhv4eIt79L6xbvFfe9kru+wM-roL+vZa5vm-nWZ8H4f3nzIAHGP3MFy2UREFYCDCGiPUv063fz1Av3AOYEgOgOXTgNG3jG31vxjnv2CEfzZkX3YEjFYBYGS1gNQL4AQIxE-wYBILIM63QMoNQy8mwL-zv070AKP3T3N2oP1Gh1YFx3hx-3Hzthbz6DblwM4MVzH0BFohBHBHVy4TYk12IW10h3nV3myEqR4RyG6BRCGm9yTzOALXQUFF0K+HKAMOdzk1kCIAICsLrQzXMJwksOsLU1Tzdw7X+QsXM37R+xjADyD2ASDgry8LOGhl8Pq39A-gCOjCCOD1CLXV8GUg-kiOSOIA0M4zqHSEGGDEfEqTbm1iQyiwsmJgGxQyGw3TAJIB11vQsi0QqM4EGiqPpnMC0TqLPgskM1FCQwsEM06JpwT16MSwsFbkGPilxxbCgkqR-SwjiISJCL6g505yxhWOiTRkCMD0SMoUqkj2iR+1cP0J-A8MFiCn2LfmKML263OIuNPmnxGnYIkLJFuK5ySQ1U0OchsRLFYCCF4ylBZkSS3H02VFMP+OGneL12hBjByEx3nACgBR+OONYCu3GjNic0U2VAuHsKsMRL0KsL4H3w-z0DRMOxxJ2HJKJINg+GjFhPIHhNIj2OiWhiOIJNYGanWMKORxfgoxPg3CkFpJbBRBUBLFFHWVZIMPK1djzTgKaCIEQgFNLGFPCSpP2PeHYFJKAI5HWKFzBLRm+JyD+MVKFKRGuR1LuNWOBNeItJvntlVMj2xA1IYHROjheUgmcm0ONOZFNM+WtJtJPiST9P9JeHtjyRCk8CyP9DRlc2UhRCFB6KWHJOfDjPbgGBUFFCTPRAs3cxQN9mgLvF5LwDTOnGxzdNvyLPtS-X8XMHSCuXME6ROAs1bWYILIlgTL+TxArLTQli7JLMCCNV7P52rNrKkHrPY0bP7XAP4GjEGTbM61FDBOjDjz01gR7GHLrIbN0CbLslXmzBJ0UAcOJEMyg2qgqXMCRHKiCEeIK01xM0GPgXlz5NUiPR5g7MyGPLDLdnnJHiNQ-LgXihfLyQKV4gnM40kFNjmAoAAC8zBdz35vzQBMy1zHkayNzxytz+1B4uBnkyA+kVBVh-4MTkKzh8LAtGBF9wC+DiTwCOdDY8EyKSzQC7yOd3gTN+xaKAx6LCKKKczmCqLEDt1eK8yIJ7TXQ6KCLyLn8wDmzhL7AWKtN6gWzRLqTSLuKpLwLKBIKYL+KaDNwILZoYL2K35sQKlVLGAaI6JFD2AABHDsKYDiAYshTE2gLCnC8QD4hrXeZA5g9A5LLA64nAnrZygJDCXk12by2S-LXTKU6qSXKBXJdYvbKHXeYgvgBg0bCg2S+uNggrNHcI28Hk80kzXMqAiCP8oXOKnJGBCPQpDy-XIS0qmApdGMp7CoEZCKxq3y+AqZWNVK0gjA3TJgyKk7Nqs7Pq9KwazKxqgNdFWgYqls484w5UVzaSxS2SszaIm3Bq-Mxa-K2gFajq6AjazTRrSoi1XRFMuJUUcwAAKmIAOgVRurHNAv9FcsGDwq4sYDgvdU4oksYvTysB0v1DiQ4rMv+pPyYCBpOHeC5kCWFm-msmFG8wYBZWMoNCNCEE+plDkMstoBsrsqFA4lOuaLsEGOArin8TetwrEDqupE0jqH4CDCCHzkZBRFKKmA1O+FqV5lWHWEZoYGZv7M9AJFYzWx+ouHNE1AVX6gmFYHSGUp0HeElruDwKNU5rlqcP7XtD5qZtRK5sTz2slnJJlv1oVtACVvVAtC1HvwYFsrmH5sFvWXWXVvSBGDJBr2doD1Nvv21o2F1qFuJBdrdtppYkIwRqO3ixBLxsqMsEhs1q+3m3Dppgc2Rqjr0BJognOzjq8x8xDqrmcikFBFzNtlbLXm6xGOckGxqMGI3EaJ3krpjo6KFg3HbOjM637GTKYECFuTU0v1to7AjgzMPM7qFDIFuQkJ3DmmtQ0ooC0uDAGNkCyxWpnrnocDFpTOpRFpREnqYWtWJlYRjk5BGQ6Kn07jFtjTmEqBIDyLixaPOolisQlstqlsyF9vjXWnTvizuVZrUBPJCk3p-oXLdKVUBNr0G3hQ5ODL1AAdFqAsfNdgqVAfMEEAcMoFSivI1EtBpnvJAugerJpmWCsPWDyPSGetwZ0FjUfXqHAYTV5I3AeFFDftAZgbZqrNlVVGVq1C8zNuhvRqoiQaBAUOjozvsB4axDfI924acpeuhPiO2Ngup0cS3FiziWlzyUftVGNqSW+pBjOFQtHLgdIlKTgQWO2KWP4HWW0Y7v-P8S2KD1gqAvQoocwu4DcpszBu+tjSLFINLtdhw3DujzHvyIB30gdFsq9m2k-IpseTsd4GsddHJpeHijBsX28bVXkrSaMpvnEoYsX2yEvpsJFzCYHvGiht0HeDCbhqCcKdCf7oib7LCdRuyd+tyaksvuId4FvtJvkvaevs6ZplBqxsXxAmwfkqoa6b4EGb+rycFAKfGPkontCu7uEhCERuSjCHVHxHHtWfkiOBNTRpSakoGIyc6ymdadAPmbfneGqYkI4tMqxosqEb0HCfsvhCQzJuCqpvcqhMEl3j6OpRZhRx2fhrcMJPR1UiQwruDELuLugnia3O+GmL6QBdcAcg5z6IzyIb6eDGwccBRd5FkHSXxbwSFgxfyasL3l52GE82eOfDJdmYpd7uKfqZdGqhhgdHaTxNBZRNELFuScSzzv2vJgqhKKWv8xLvO2FeOtjRGZQ10Lw1aL8mJbTrDoVdlZEcVeQxEelCRi8epjldUe32JZTp81fn8bVf1Y1aNblfhRNfcGCv0dREFa11Yy5eRMvjTphIGHpLlDdbZKDMjy5J30T1CvNNdhyJvoKMfCLxKKiaF3xS3DjZvgjKhQ3DoBIBOUhYWHRDRj6IlmtWEFYSwSLbVUgb1CVWtXYAt0XuEFkA6BfmEFAAAFI6ky3b4RkFhWETo62G3K96222Qy5pj5zBuEOglo4FqElVDJzBO3mp06LAx253VV+AAAGMkAd10WZf4iwdNk5Ec0hDdvUA6ZhCZOaadqthwK7RCDPS9+d4t9dgNl4Y9m9q9hdtex9k4Z9sd19kd99uBCTbdkd+vRdw9k4SwDN5gfdtejwD+alVR3d2Ftowt2QDAFdgANnJFg4NZK3wgQ+32LdkAABY12YPhX+A8PEtyR1Wv74OIP8PC2CggA","body":"function assemble(controller, machine) {\n    return extract_labels(controller,\n                          (insts, labels) => {\n                              update_insts(insts, labels, machine);\n                              return insts;\n                          });\n} "}]},{"tag":"TEXT","id":"#p4","child":[{"body":"\n\t      The function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"extract_labels"},{"body":" takes\n\t      a list ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"controller"},{"body":" \n\t      and a function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"receive"},{"body":"\n\t      as arguments. The function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"receive"},{"body":" will\n\t      be called with two values: (1) a list ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"insts"},{"body":"\n\t      of instruction data structures, each containing an instruction from\n\t      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"controller"},{"body":"; and (2) a table called\n\t      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"labels"},{"body":", which associates each label from\n\t      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"controller"},{"body":" with the position in the list\n\t      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"insts"},{"body":" that the label designates.\n      ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":2,"eval":true,"prependLength":457,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAVgHQCZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQBsGAjFjtlkTIAnAJ4AKLr35EGdFgBpQFIgGcyqgJSgA3tlAHQwlmQLDaABwYVhknnzaz5Sleq0BubAF9chUpRpQAHMTNmMginUWW0YSAAsVRSMWIMc5Fm09Q2TTc3oGeMTxACIQsjCUyLJo4s1xcLT5TU8ffGJyaloyUQsWcVcRAg6aTJyzWjiWBgATfrVB4aJm0Fa-RdAOKiomAgs2C2EKOnFVUTpuKg4lKl7hBgC1TP1DEhp1UAA3Bg5QAF5QBiqVRUEgnM4XK6gG7Re6dDzPAzGXK0SJsYjTFh4RKzL4cTQI7LZAD8oGiwiotlO50uSmKxCYRCoAHdaNC7g9QABaTkAoEsc4cFi1AmEgwALlAkxm4jI1g44lxmma3l87Q5m22u049nlUj4qiUepk6Se2Ve80+3z+vOBoKNjSSRvh2SR42UqjRRAxWKILBx33xosJJLJFLs0gdtPRmOxGx1XJ5gNU-O4guFQeyEtlFHlipaqv8nXyrH2hzoFEoH3YLAAHntMeJaxYlLEEr7DTqtLoCRQ8KB+h7zeoGEIBHXG3Wld2M0OyKASNbZyPyk22LiCH0m8qM668uJtL8AHzzzzZLykjjJ5R9gfaiNNicWKdZIOz5TzVTWjU7PZG8P6jt7zrO8+EfJVTyDXdaH3P5jwGVQIIMc99RYa9+1RcIqmiMcLDA01XzeOdhGtMoKgiKIYgKNskkwiicLIvDEMJKD+wPY9SPNaohFUeplgJZDL1Ql9RVDWwmyjIgGWZWgm2MIEi26XoExtFM023QwfFWNUi0YEs2VhGh6IbcT8kKds42kA0oVuAzHmnF5COsr8th-UsjnEfSHnom4wOuGyHmdByLQYPxP3+RhcNQo9i3YA4jgrCgqyMvBGxbKjEkA-VNAUEUMzyzzOm8myvR4rd1MREw3Rg6KGAsCwOFENgVE9DFhAalRUgAKwYL5VBIQ4LDIcRcry0UbjS3C+2ilLsoBULwJVNpC0CJMKCCIh6kqOinCSYEzBIDJ7Iq5ENiqEpVvW4olFo6phEjUA9uEA7lR8NYOQuogyIdcQPqa+ZhCGB58OOt0pVmbN5V+gYAcWBbXu0lb5PWtdvg3HCfqRz7ocBzpRgJFiwZlOUiZzDHVDWrH-pxkY4YLdZdPYX6GwGNKzMdTs-JhAKlAsEhgfnRzZWEMoSNCG7onEVsMptCmvp2uZ1AWs1HPXas62tX7VfRgZyoFi0tb8P4RvdNgCsMh8ta3Y2SQZ03-MK1cG0tutWeozLL059k4UDIMJVtuLy0rNX6xS53m1Mt2LKypiWOq49hNGgxk3KTjBA0InhZMJQDeIfddcTmYvlIWLQV5vjE68fMlvWQuRwO-ZS75o6HtCVPuPEXmlAh8QOJoLj07L8DQEWt6dOYdhqnUAQUpZiPpadT3bKsvAuCCHmm4Tt9zWmBLAn+SeU5oHeHgVshdd7dCPTNz6H233eln55WLTvrzDfC8e7a5h3gIbY3E--oKx9Oiu2ln-AB-8F7WS-m8fOhhY5sWbuAluh8hBpx4ivBga89ZAMMn4POTEkG12Lg3DufN3DDyQZXfiF4rwJ2yKJU+tJuAzFAAfd86gYYcm5CpAUQpdaaTphyA+4gX6410GMPIHAzrFAPldbB99lhaWWl0FgU9RE0BlKo8o2NYbNwJlMcGxMD5-Q4dTB+5CR4I1oLbbgdxSBxGnowue5lIEYKwWXZub4MTvH+LYuuDjvFDR1kxC+t57QPkCc+Y2b54LOU1L+HU-4PZR34KuP8kTYEgz3Aguh4DQm91Qe3NxUSkEZmTmwNuA8SAuA-Jk-+AlaFgIAUQ+uvNSF1Irk0s8TEGlCWNgw2exRmHTFAH4+x7CFhcMTHyXhtQemWOUaMux8QkmjBYlI9QJQxnxDkUaRRgiizbICVo8QRyTGTLEQnfR0pu5nJ0UDPiSj1iollEEEI0xOBnVeHQCwNA05d0mGwV5-MWKoisDYERVAfl-KENoAAZHCyUBjIXQt9LCv4vx96AteVXUegRwjiB2msyqkjpHhDkUS8hTyOQYS2rddGW5xGgo9K895nzNkmWKOS-Z1cOTizuquAljKdASImMi7uZUqUHMCEuIQCpUaHRFes6RsqyByNVjyvFKJByEWXAyyceiSXaqBZgtlGyhqctVXMhZ6xVX0VVmBJlRqkU3OJpKlY0raB-iJU6k65qShGgpSaKVvKiyonCeOYVoqTasr9Oyi1LtQDFEDZqqxKT6J-ijdcwxpN3XUqLD5H1SrnX+uKDcINTQQ1apNtffVT5DUnTBdYMSBqEUxtNXG-1hMty0nLS9T1UCvbm2Aj5G4OFiUnUJt3QmY6yqpsWbW1c+kSoeXrAa4tJ1u6zsnFWtNtsghUCBYe5m8wQEuI5qADxm9HKBJIoesgh7Amn3PjecNOp0YZMQUFd4sT-jfi1H+SBEaEnSHEBkghcDnVx2QRUvuaDSE1LcPwmhqFQm0vIvSiJWiSkEQtOEUW5R+WS3SuZfl9ECXgeNvA2CMHKk8U7sEVucH27hCVhpFDX6DADNPUm4ZwR71UAmZwos3CkyqT4fM-NgQD1HtWb6t0paZMPt2Tqed6wlOPpORp85wmRjiPxs6qdxNtP3Nxo8gdvzcLDhIEwEFzrrNMBKJZ618NFkWAIKoOIJxZQ2ezgquzJ0HNOY83EWo8qOAbn7aGwIttVA9WrDPHjUtzIOfXvzN8+H-ikSI8l3aPmmDnLlukZ9utqPRVyXldznnvMFCYEoAp-ceKsY6aKFpJd2kQcJFQ1z9MP5yQfcYRxs9ctKFS5ejeBIMspAI2RLClE2ajfy4Vho8sdalagzkrphhyl0c2u4nyDm2PNOmEXVpjdy6jW6wOuLVY9sToU9Im7QpropDU3yrRFI+isfk6SzZXKPvGDkax3diyHPLZSN9MHpm9NXMM+K4mUOqawyi9W-20Q8AUjoENpLJH2aWUXtzcb6XHIFA5P8W4GPhBY9J50Z9ITX1X3tsO3CNOaacb1u8Vnn034xU-kOm+P8Upc7PYoLbpTxeGEgdfQKooyvxwoRLrnbA8EXfF21khZcLGUJ6RxirpJhDklsIMvjFPMdCbMcpMTsz+E2o5KbqnP1dEboe39+3dA5Fc7e0WN3bAucd3R5jnTZiAug3h6TH30PzG27HiWWsLASAEFflYpxkCRsK4lwAhjbjFu1b8l2WHm6eh9B1hi-4xQPrFCaTbD+TNEvqBF+7KyNwrJlyaVmIvz7S9JtkVX3nxiT31+cXjgC1ll6rzS231hHeS+YrL0cyvidq8ljOQPsgDeUlj8wRPxO7feid9n0mjTC-RpL-YNp1f6-IGt531PvfM-MVJqe8fvKp+2BPex4PtPY3r+jV38X+YB4D+-26gn2z+GYr+-Wn2H+a+Q+OevmROk+ik-+isXexQVWDijAwgrAd0D6b++WYBQYr+6BbAmB2BR6eBtWjiX++W2+v+t+yBZ8qBxgVYwg5QYOuBpBNQvetszB0QbBS2HBDAWB2EDY1BueCBN+SB++QBbuBBooRBAeVO0Bl+F6zetBeUEo3Gg+dIkkjILI5u6wSBluMyqYEm0eMWH8Awp8sGQg5IHAgod0keIeeQ4KRu8wNhIglwDhQeiwSgRABA9h-a1aAwHhdh3hkeneBeoe0owSKowR7hceCeSeG0JeUReQ3csRPWHI5SIRiRiehUeCs8fg-M5SGRPGxRuKaauw0w9w7A8Ep8VkqeuOxOFovMM2OWuOtIvM1qT87wbi7RdKEsaexQbiPR36c4Dm1ouWJQDmYxBgb4zeUxuOJQ0ucx0alOAgVEp8NGORCRNY8e+RuCucYuEuLMJx4utseRyRiww0Ge4uIRnEYR2EEROsOUdxpSTRC242bx7x4C2eD0NBo+SoPxpxtSlRiyVuphkKthXh0QIuzhMkNYIgpOIEl40Jnh9hcJ5xo0DRjem2vxGY1RtR5yPE8Eje8JnWBJoKH4lJEuXgKOe6H8QW-MgoEx+W1o-h9hTErJoAeAdw8gHJARHATE1axBnBtgj8hgfJ6Q1orhNW8B0plaVGzqxQ0wfyxQ8y2QopY64pMEeukx-whMipGQlJxp1o3cxpdSLEqp6pmpUpaa6B4gNYeMZS7J5OzaTpcBtmWukEKpapvoGp-EBI2puEkpBgaGHonJ8oh2YZhIDCxQ-Ig0ogAJtWykzmdSvS7OvRc4D6Fg1ohMh2tJ22bprCCO+WLWWSXQNwlJPgZ4wZaaKgCU3wFAAAXn0LGQaaAFGZSdaf6UKHaQYNWjvKoFYGQCsvIECJgoqsqSdBOXFiEKgegXIS-peiFicX7KovOVFDIeWicSSJZvuOufQJuVOYuSFiQUIdgcueAauZ5hecIRKUeXOaeQfmgTqZeVwUgvue+Q+YeUghuZOQua+Y2ZQM2W2deYQe+E2VIm2X+eApoQbmGM+SEBJFJPocYAAI4bjvDcKzE24ujOrDmjnxDgm9Ylhikfk4GHpg6iGdEpnwFXoGYnTQZ66JwUW-mFnYkGDq5tKa7YlXao59YsAsH8GUGCEPlUF0Xf4TYEXMX4kS6Wb3nYHynelcUAgnZ1ztaa7p7gJXbRaWDnninkHMk-ZerSLsVkG4F4VSrVq8GsEUE2bkG6n3a-ZDT-YiUOUFbiVXle6BCKW6mHYNpuhBZvl7Dikub6W3kYGUUqUIn0WOZoGGWUURWRU8GDG2BFoEg8l0bWjFAABUxAH0foeVgZWpaaRF9w45J5IQsZLEyF25ZeZQEF8hesjWT51VDVj+JgzVwYloEWUU8uOV-wqsUq-5+uhuksHVqFehtAmF2Fc43CaVGGNQ+FkGJ0FVY5cQpF6oLkuw4grAogXcPAgoLR7wxgrwwgIy-wSYII+1LAh1pZpMsophR20aqI0YPofom0F10wPsK5H12IiBxM51FIv1+Y1aN1oIB1L2P1+eTFboqIUZ31oNWgveANvo0wk+LAWF3wd1D1hMhMINl1WgSovehN8eKNf1GYEokNeNR1pMRN0wJN21RYDW8G-KcVRGpQ3VQRaaO2zG6c-Kfm-VnN6VMxPN4WkWLNFhJYvoTIF5bMepk2jkbR78JYXN3Rusb4-Rat7AXNoxWtjknZsW+W+43JJgrCgKkeb+2NG4xcgpXJWVFtZAgKixf6Z0paIFFAYF7AsxSg0GIVXtPttQr1PJZGz1goX4Ht5lJAciZcho0ioxSgxSusEN9hIIxJRGmVGYEZLUMYGNZMt1O0L2y1OBx1GQOGo04d5dspHp-qxdvOWdJo2UalSC1dL1NZuuXSDCDdxQdAARlA9UyZ3osY-KaxdZO4Kp-KAI6dJAtR0wpVGk9Ziy-6ewTdTQ7Ob4uIGsQIRd6QJdc2JqHdM5CNHo6NX1ioe541YYvd9IM1yQpd6Y8FLqOauYAYq1g5aaVx7Zm9jkv6jGKCjWHWxsudSN8EldeUvZtpxsmZrFhguR+xSRBRuchM4DdQFZ0a39ZtMDQZZViyG1VVgF05GY1aw4rBSt-8-NhSVSAKdRSOXkyYWFggz0RZlZpIiDie7ZNZJ9eQ9VqBZDaqV9AjcFACAFW5qBAw3w-A1tjDdtB0PVxILcGFNGIqLtdDpiiwNtTD9t-wjDo1z9fDr5UjGd1Qs2FECjhgJIxjc9pj-K7VRDqB2W6VFjBgJIq9Zjt09j4jwF8wUjfOS8LjoAJIbt8uajdsYUAIdUgg4MrtFgTecT+yY1hjQBsxQj+WXjL5QBqxV9YTzeR5DC9V010kyQTDOFPIuWaxtZa1boBDW15h1iH80xZGO08TVkjxsJwgp1c4uWSxstLA8t0xqdFImxKyzTMp0UJx0x5es9mdzjdQYzTQSgW2CzqiusUzkj9h-jAUYWzeazyxxQGz0j9DhUsjzDfCTSZM4m6JTxwg8J62s5uO0ttAwjuWcVUzAjEV1aTjpdHh8GaeKzcVbN7c3zc2xGXxALvNoOYs6Vvz7c-zMLDdGqzcVDQDILFEYLkcALwtUt8NeQNpAZTz7DyJ5AqJPE7TmJtzyQB0iUxD1TeQiNQp1zHTVNkF51LANLhKQpfhQpLLoomhSJdwJLTotxpS3c5LDhLd4uuJG+8l4ub4voSJAggo8gQg+ZyK4r0QGDvpjaHoHCHUhKtYK4yracvLdxJIbLHLZJrdpScpts4SthEgCrRr-I-y1rBJeStSIJ7r4CTopN3roAEoFrt2trlh8wBrirfALrsKXr-ric4DMbsb2QvrrDoo9JVcb4QQJAHyPTvwBIts0xxspaDAciQyJbaqkrQY-qpaxg7u-tDASg3ACCDAoAAApKMhW4nKWr8HIj9A20213o2x24SP6mAjIlomwNwFdF0sIv6j5MUN27NASqW7NKquIAAAxKhDsZhHJJIlCZsfJ9kh0JutaYwlBqoJ2bJzs1u1Al3nQ3sP1bIh1btBgfR3u3vLvPsnvkzrSPvvvlufuEgaa7tjtTyTvAmjv7tsCHsLTlJka7aQfDHFtKAYBrsABsyosHML8HWbCtkcpbSgAALBu54MIwh80Z4Gi-Sth9m3ReXnMkAA","body":"function extract_labels(controller, receive) {\n    return is_null(controller)\n           ? receive(null, null)\n           : extract_labels(\n                 tail(controller),\n                 (insts, labels) => {\n                   const next_element = head(controller);\n                   return is_string(next_element)\n                          ? receive(insts,\n                                    pair(make_label_entry(next_element,\n                                                          insts),\n                                         labels))\n                          : receive(pair(make_inst(next_element),\n                                         insts),\n                                    labels);\n                 });\n} "},{"body":"The function\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"extract_labels"},{"body":"\n    works by sequentially scanning the elements of the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"controller"},{"body":"\n     and accumulating the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"insts"},{"body":" and the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"labels"},{"body":". If an element is a\n    string\n    (and thus a label) an appropriate entry is added to the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"labels"},{"body":" table.  Otherwise the element is\n    accumulated onto the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"insts"},{"body":"\n    list.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-1","body":"1","href":"/sicpjs/5.2.2#footnote-1"}]},{"tag":"TEXT","id":"#p5","child":[{"body":"\n\tThe function\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"update_insts"},{"body":"\n    modifies the instruction list, which initially contains only \n    the controller instructions,\n    to include the corresponding execution\n    functions:","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":3,"eval":true,"prependLength":461,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAVgHQCZMChsDMBXAOwGMAXASwHsjQBzAUzIH0AnBuigZzIdYAoAtgEMSACwpEGAGlDs6zIsMEMAlKADe2UDrlMCrWiPGSG-AESMW87r1bnV-eYuVqA3NgC+uQqUo1QMgBPAAczSR5WAnJqInUNPTIDWjEGYQATfgiyKJiaVTdQb3xiPNoAGyoqAGsCEOYQ1gpBfi4gwQAjKnLZKjDWYX8iLnjtXRIaHlAAN2Fy0ABeUGEuLioSVvauntA+vkHYkY9dROTQbmZidIY8U0zZ8tUxk5eAflA+VioBNs7u2XMxGqRCoAHdaHsBkNQABaGHLVYMTrlBgOZ4vXQALlAqQy-DIwgo5X4D1UBS8PlK0MqNTqzHKwg6DGJDKZ5S4slZzJcKlGJwmwzIMzmiwRaw2XPKPJkoElR3R7CShnOXEuRGutyk9zmTwxbw+rC+Akl0oBVxud1ljOZsPhKy4SI6KLRepO2IJRJJOo8xV8ZVAImqDAaTUEFEo02DDAAHvUbvwYyFZMYJFJOdb2XzdBQ8KAsqqBTxhEQWImE7GyZp0fzJkKSKLCwSS8xE8wHgQzInya7FWd+OoFgA+UAkY66TwfdkMc65-P0jMt2PlkKVrSuxvnQVcUU02r1SX8OXptmL-cZ5dkscY3vK-uLYfZLhXoqTh0zvMXGw8Pini9ZjEbqwopWGwHC2HwQiiKmMpfnYp6gXQf7PicN60HeQ70EwzACrwJZcE4BSgOiE7Mm+a56p83zLmaRDAmCtCJuwqyxIEoTTnCYqOs63bjhSJR+CxgbBpCBw0PB8aJsmUGmMepG9P0onDP+I61rsIQ7lUe4hs0-AiUM8F9Be8n7EM8o1oKyy+NuSwiCECb3gGwhBtpYYRlGsYtngCZSSYaZWmyIzSNWrohXpsQGQp6r4V2PE6KheYDsOwghCE5RBMwkhqtcrBpZICgAFbCLMXAkE0IRkPwwUhRifRSXZuYYV5qiyMIVmXnxfrQvaFB0EQThgd+rCmqAawGCQahVih+jKuUtgWN1vXmLIsE-koKiyKNrDjeS3idSxC1EAh0r8AdGWCrkQzKfFuKZB6xKndkF2xO1u1UvtzG9W2cwdr+D3ndEl2aERU1KikaS3YSxJ3SdH2HY9APPS9lICQEQnMKd8bZD50GyeyxlQocsghCQykbgSrBWMBWErQIKYyWKPWHc4a3hIK7XmVM7buepSynVzv7ZLFKkWfzviLFVKrMGFYllvzXYS+8aPS4drbxnLsbY-TR5qSZhy6nq2Jo40zThhQkbiV56tJo5vkynKQvxehw7kdVugOiwOEMHh+LCBTTCyKLxD9kLrsZLMpDBsT-DE4REvjj6yP+mHxbjQ0Gwx5NbtYZ73vE7I0MgTnZD4THl5Eb6b2o05wa8DwnlZIKmt+dryscqAeAMnQRMk5nOgbgK6SmwESy1x7NCD0MDc8ELOYfqqyu-gPQ9xMpHN1uPy-MGLNnV1LCn6arXlx67J99xvQxNzKx+n67Lf73ryG6I7iW9zfOju9hNC4cX-Ad8IXfCwnuFXwwdH6n2ThHNO0cSaFGvicTwz4SJTlficSiAgsagHMB0DIgQGBTHhv6Di9ouKoiFt4CuKNaCj34EvQGCR4qzR4BYUeS1AHL0IhQ-0o9P7qmXviPBLACF0IVNNMGeJobcKEYjWBnDoRow6AMUgYh64YLps3DMbc-4AIzi7YWUxrhTCWAolOyiDEVUFs+Wec4TRljMauCWG5HwaVpGeNkh4NG43ggeOxIcn6iISg5XRb8rGFy-l7H+Wj7Fv1dB-IuJcSCyEfL40+SCyJwNDukcOqco4xzASfbwb8EHEVfNOIJug0FTzIACbB6RQDGKUZuSICMAhEMRMiUhiCOqV1oPU8Q7i2TxFODNOaWDFHiFYZKDhidoS9NMQI-gsyzpNLKFdfxN0faekWVI-IsdZEsQuASOgjB0j0jmhMQQIQaDhPzqkZghzVmg0liEQkAhzmXKkCWdQAAyL5OJwY0KoBcq5nzFgLBHrcw5Cd+L+nkPwFmgyGEjPkKw+FhQ9kBE-ANOCZYuxA3igc-+xzTlMMkpg5FUzoXQhpvBWFuL6FrP+dDGKaLpksUbMWCqXMEX+MYRVcw7KSysK5Syyl+yCy1g5b+OlIjHkEqOQwE5vLqKYIFWQBwUK9oBFVfBLmF48UMvEZDJCRRWUBAPPC-VjylXmElCi1wFLNW0AuDYpcdKhlOtVIcolSrSU2ozOqk1oqzULlbAeN111GVGuZYGx1ak4X2stWca1fQ7W8hFbGi4C8cUVlfvi1UzyKACFxT8yWXqFXEoqusrsAIU07VNRCe+MsPKGT6Kebljz1nQ3Wa2mKDruk6wJk2+oIkoq6TjDm+ljzoY9orOm-taM6BUDuUuzGjcbY438nJUAOj0QbjMcBJdZAl1mMqTPWczqQ1Lh8Sg8YqknFLF3HSA82sXWuOZPwHxeTn4OViWE3OCTGnFzISU98c5qW2IEVEvUgEOBU2sFiiCaiYIIaGq2WFn6Jbfowr+ks4T4myFCbh728h2bjhA2UnQFSMFYJwYu5dgGnotLtG0p0HTiJdMofQQ9VB+nMnbUmkZdGj0TIzH2zjQnj3zIk0snIzS4hAxlWcTtRrpPbJXjI+t27DJFhINUB5ZwdPVAsJckI6qKSxpCAQLgYhWgEl0wHb6E1dHxUM8ZqzYgHBenKB2OtQajC7y4EVKMXlVHST8oZ7upNVLyDgwhcCtMwsykMzJo6LNT0O38U7G9IVLPWds6IaoBHs5-p-iR5JroIHZPTjA6+RTXqcbRkxI97AVFrqQxtOzhXt0910TBugsWaaQVth1grKXmauHS8+LDzt0nv2K0R0rHAibac66R8BmSU6R2q7HV2dXNOBcjP1Og-HhlMPMAd1Ey0OBiZhQI74ZgSOJtO3ypr93WEkbnZx5L2RUsTe+-9FZuaDUQ09P95Zl1fOxqNnwPA3xBCtZ4JfXGbdW6RdfhuUQ0Ilj9Fh6weHmPYinssee+ejaVZLgJzs7LeihSU8OtvRyzks0eXjHTpHs3omc50HfXWkxyvTYU1z5YZQt5Bx21zyrW3oHi5SYg8jEsqNrpo7UnHcOGNydtJxdpZn4Ecf9KrvHJ1AeToE2dg3ghWF05u9Cc36MyjRxh3DmTjH5POeBxs4ktu1NIz84z9yDASAEH0o6ypyOkfAyF6fPO7dO4jfs2pEYQOp1sVPaCpY5gDrmGvorXeGMQttcS2HhPkXr7uhT4LNPmCWHZ793cgRCOqnrq1h44vMf-4l9dmXsIqewXp9mVn12OfnKLNXYjpv6iAqyC0R36qXfWbT0r5YbjA-qpD+DNJ0fjf2ubrxt1-WIU5897BZgi7K+Qpr+YBdhv4eIt79L6xbvFfe9kru+wM-roL+vZa5vm-nWZ8H4f3nzIAHGP3MFy2UREFYCDCGiPUv063fz1Av3AOYEgOgOXTgNG3jG31vxjnv2CEfzZkX3YEjFYBYGS1gNQL4AQIxE-wYBILIM63QMoNQy8mwL-zv070AKP3T3N2oP1Gh1YFx3hx-3Hzthbz6DblwM4MVzH0BFohBHBHVy4TYk12IW10h3nV3myEqR4RyG6BRCGm9yTzOALXQUFF0K+HKAMOdzk1kCIAICsLrQzXMJwksOsLU1Tzdw7X+QsXM37R+xjADyD2ASDgry8LOGhl8Pq39A-gCOjCCOD1CLXV8GUg-kiOSOIA0Ia13hsRLFYCCF4ylBZkSS3H02VFMMKOGiSQ1X7RjByEx3nACgBTyP0L4Cu3GjNic0U2VAuHsKsOaL0KsL4H3w-z0A6MOz6J2EmJGINg+GjHqPIEaNIkqk52hlcNaNYGag5x0EqTbntkCW2NvQsikHmJbBRBUBLFFHWXWKGM2LyVdjzTgKaCIEQhONLHOPCRmMj1AHeHYHGKAI5EOKFwqLRlyJyAKLeLOKRGuSBO+KFySSCjhKF3ti+Mj2xD+IYE6OjheUgmcm0MhOZGhM+URKRM5wRNhM53tnuNdE8CyKThYxRAGLcLaNELKIYnmIGEWLlCZI2JJNJN2ORxfgoyRLqHSEGGDEfAFJ3zbiQ3KzhPxS3GpOiVpJqOyOclc2UhRCFEM1FEmOfC1PbgGBUF1IcPKGfAs3cxQN9mgLvGFLwCNOnGxxxNv3tPtS-X8XMHSCuXME6ROAs1bWYNtIlh1KWHWVdLTQlnDMdMCCNSjP5w9K9KkB9PYz9P7XAP4GjEGWDM61FAqOjDjz01gR7ATO9N9N0H9LslXmzBJ0UFNPy10yg2qgqXMCRHKiCBGhzI4hMx1z1FSVKTgTJj6CuP+UMzlLdhzJHiNVHKVPdUCD6DyQKV4lTM40kFNjmAoAAC8zAqz34JzQA9TMMSykyyydBY1B4uBnkyA+kVBVh-4ujizHkbzAtGBF9wC+DRjwCOdDY8FnzHTQDuyOd3gTN+wvyAwfy7zXzLTmD3zEDt0oLrSIJUTXRvzbyXzn8wCAyEL7BAKtN6hAykLZinyIL0LVzKB1ytyYKaDNw1zZotyQK35sQKkiLGAaI6JFD2AABHDsKYDiQzHsnQRcuKfxc8y88QVU-0I2eCqAn8WA5LLAwvDsgrNHcI28IU2E5AwM6c2EyXKBXJQ4vbKHXeYgvgBg0bCgrC+uNgpSvfYw1Sg44EzC6Sn4VbGcvUHSnJGBCPQpcSm3KStA2SzrW02c61DSiygKgrANaIqlOgkyjA3TJgrCoKxFM7Yy0guK6oBKpyyKzTEzK0py+svTWy2gVzDCvCrCszKKliUK-K0coqxS3TNzazPK6AiqzTRrFDeNXkV+A0uJUUcwAAKmIAOgVX6uTOXP9BEsGGvPAsYB3NnOYr-PTysEov1DiVAoWsX3dhWpOHeC5kCWFm-msmFG8wYBZQYoNCNCEBmplDkLYtoE4u4qFA4nas4EGn4pNRBjOEmqvLEB8pYkfTsiDCCHzkZBRCiwsj+O+FqV5lWHWH4CBpBs9AJFYzW1nIuHNE1AVX6gmFYHSAIp0HeAxruDwKNUhtxqcP7XtDhoRrGKhsTxUo9VrP6LJvSBGBryJq1HvwYC4rmHhoYGBr+TxHWRZpGDJBr2FoDzpvxtAGxCpo2BpuhhFp91jUI0OqO3izZL0FersAsGWopq+3mzVppgcxOs1sG3OyYE82FT1zkV3ikFBCtNtiDLXm61FBevi2MxIHeo3C0TdqMo6vMC0W9tUhDNrw1P1KYECFuTU0v25o7AjhNKsIjqFDIFuQkJ3DmmtVIooHIuDD4tkCyxKuztzocFRoNOpWRpRAzqYRCq9si05BGSDqn07lRtjTmEqBIHFLi0Gk6vvL1CsXRvVAtC1BhnFF7qu21pktBrUEbJCgruntzJxKVWKNr0G3hS2NJOqnnpRoXPlxPgqRXvMEEAcMoFSnbI1EtBpnet1wfLOHMBpmWCsPWHFPSDGqXPLP7QBu7p1otWFI3AeFFDlvHq1vizuWnvjNlVVA5qxtJBwoPtcFYoUPupQxdBvmxGU09FJDIXRFjUCMD14GdugzvS3FiziWlzyQHtVEmN2NntvuVE9NLIlj7OpxODiISJCL6nWSSUcDHKEseTwaD23IXJTI-s42+umtQr7oxFjSLFIMIeqhwzVuj1TolIB30gdC4q9m2hnPigEYIfK0EpeHig2vQtkbVRwrMforQbAskcX2yHbpsJFw0fjvGm2t0HeA0f2pUccfUbjq0ejI0bOusZMdAPbuft4G-qoJwrCc7oiZpnWuusXxAivpwq-vifOpCfT3sasL3l52GDcYJoTy8bTpCCOuSjCHVHxBKZR1KamQycSdMfgIsc6wSdsfQtbgKZ+KjuElKdAqYuusQfoj0E0Z4vhCQ3esMfinEd+ptsEl3iQ3VsGmlBqbbhuIMPBqmCQz9ucntsdugn7HNO+BbCgkWbghZgcg5wWYzyftieDCvscGpXhVkHSUedcDMl0CueyalA6ccAkKFk+cFAcZjucf8dQZClHpIR5NuMvlRuMcSz+oCEsdlLqqubMdapVuphQ10LwyGw3Vea6oZswjHgW3wmSY6u33xZnoThkcxcnqGjIYpaxZXq5VfkUZxbJbpdxfpkpeamOp8ymyPNRARdoFFK7slMfCL2Rd61UmJgG3JYUrAK9qFh9s7jlc5e30Ds7mDoslDtRfgOVdUnTp3idvMB+YFceVx2Ob6WyB-SwjYfwY4ZWM3oxCxgpJPjRj0Y4ftzdeCRcK-mZMMLUcJ0Fj5Odb1G1m3zzh9Zvmn3qq6z+Y3vhNKKhQ3DoBIBOS2YWHRDRgWYlmtWEFYSwULbVUTYxCVWtXYAtwLuEFkA6BfmEFAAAFI6lS3qprUFhWETpa363K863W2TglVj5zBuEOglo4FqElVDJzAO3eXYUi3eXVV+AAAGMkftvUWZQo3W9N5gRM0hNdjEA6ZhCZOaKdythwCe+ac9rWiwUd1d0NirWGS9i9+d-dl4Q9ot59kt19k4CTTd4d+vW979zBNNk5Xd0ujwD+alMhkDvZ+mDPVhDAJdgANnJEg6xeg+3Y1dHdkAABYV2IPyYKoYPZSPAOXQGMOM2FWC2CggA","body":"function update_insts(insts, labels, machine) {\n    const pc = get_register(machine, \"pc\");\n    const flag = get_register(machine, \"flag\");\n    const stack = machine(\"stack\");\n    const ops = machine(\"operations\");\n    return for_each(inst => set_inst_execution_fun(\n                                inst,\n                                make_execution_function(\n                                    inst_controller_instruction(inst),\n                                    labels, machine, pc,\n                                    flag, stack, ops)),\n                    insts);\n} "}]},{"tag":"TEXT","id":"#p6","child":[{"body":"\n    The machine instruction data structure simply pairs the\n    controller\n    instruction  with the corresponding execution\n    function.\n    The execution\n    function\n    is not yet available when\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"extract_labels"},{"body":"\n    constructs the instruction, and is inserted later by\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"update_insts"},{"body":".\n      ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":4,"eval":true,"prependLength":462,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAVgHQCZMChsDMBXAOwGMAXASwHsjQBzAUzIH0AnBuigZzIdYAoAtgEMSACwpEGAGlDs6zIsMEMAlKADe2UDrlMCrWiPGSG-AESMW87r1bnV-eYuVqA3NgC+uQqUo1QMgBPAAczSR5WAnJqInUNPTIDWjEGYQATfgiyKJiaVTdQb3xiPNoAGyoqAGsCEOYQ1gpBfi4gwQAjKnLZKjDWYX8iLnjtXRIaHlAAN2Fy0ABeUGEuLioSVvauntA+vkHYkY9dROTQbmZidIY8U0zZ8tUxk5eAflA+VioBNs7u2XMxGqRCoAHdaHsBkNQABaGHLVYMTrlBgOZ4vXQALlAqQy-DIwgo5X4D1UBS8PlK0MqNTqzHKwg6DGJDKZ5S4slZzJcKlGJwmwzIMzmiwRaw2XPKPJkoElR3R7CShnOXEuRGutyk9zmTwxbw+rC+Akl0oBVxud1ljOZsPhKy4SI6KLRepO2IJRJJOo8xV8ZVAImqDAaTUEFEo02DDAAHvUbvwYyFZMYJFJOdb2XzdBQ8KAsqqBTxhEQWImE7GyZp0fzJkKSKLCwSS8xE8wHgQzInya7FWd+OoFgA+UAkY66TwfdkMc65-P0jMt2PlkKVrSuxvnQVcUU02r1SX8OXptmL-cZ5dkscY3vK-uLYfZLhXoqTh0zvMXGw8Pini9ZjEbqwopWGwHC2HwQiiKmMpfnYp6gXQf7PicN60HeQ70EwzACrwJZcE4BSgOiE7Mm+a56p83zLmaRDAmCtCJuwqyxIEoTTnCYqOs63bjhSJR+CxgbBpCBw0PB8aJsmUGmMepG9P0onDP+I61rsIQ7lUe4hs0-AiUM8F9Be8n7EM8o1oKyy+NuSwiCECb3gGwhBtpYYRlGsYtngCZSSYaZWmyIzSNWrohXpsQGQp6r4V2PE6KheYDsOwghCE5RBMwkhqtcrBpZICgAFbCLMXAkE0IRkPwwUhRifRSXZuYYV5qiyMIVmXnxfrQvaFB0EQThgd+rCmqAawGCQahVih+jKuUtgWN1vXmLIsE-koKiyKNrDjeS3idSxC1EAh0r8AdGWCrkQzKfFuKZB6xKndkF2xO1u1UvtzG9W2cwdr+D3ndEl2aERU1KikaS3YSxJ3SdH2HY9APPS9lICQEQnMKd8bZD50GyeyxlQocsghCQykbgSrBWMBWErQIKYyWKPWHc4a3hIK7XmVM7buepSynVzv7ZLFKkWfzviLFVKrMGFYllvzXYS+8aPS4drbxnLsbY-TR5qSZhy6nq2Jo40zThhQkbiV56tJo5vkynKQvxehw7kdVugOiwOEMHh+LCBTTCyKLxD9kLrsZLMpDBsT-DE4REvjj6yP+mHxbjQ0Gwx5NbtYZ73vE7I0MgTnZD4THl5Eb6b2o05wa8DwnlZIKmt+dryscqAeAMnQRMk5nOgbgK6SmwESy1x7NCD0MDc8ELOYfqqyu-gPQ9xMpHN1uPy-MGLNnV1LCn6arXlx67J99xvQxNzKx+n67Lf73ryG6I7iW9zfOju9hNC4cX-Ad8IXfCwnuFXwwdH6n2ThHNO0cSaFGvicTwz4SJTlficSiAgsagHMB0DIgQGBTHhv6Di9ouKoiFt4CuKNaCj34EvQGCR4qzR4BYUeS1AHL0IhQ-0o9P7qmXviPBLACF0IVNNMGeJobcKEYjWBnDoRow6AMUgYh64YLps3DMbc-4AIzi7YWUxrhTCWAolOyiDEVUFs+Wec4TRljMauCWG5HwaVpGeNkh4NG43ggeOxIcn6iISg5XRb8rGFy-l7H+Wj7Fv1dB-IuJcSCyEfL40+SCyJwNDukcOqco4xzASfbwb8EHEVfNOIJug0FTzIACbB6RQDGKUZuSICMAhEMRMiUhiCOqV1oPU8Q7i2TxFODNOaWDFHiFYZKDhidoS9NMQI-gsyzpNLKFdfxN0faekWVI-IsdZEsQuASOgjB0j0jmhMQQIQaDhPzqkZghzVmg0liEQkAhzmXKkCWdQAAyL5OJwY0KoBcq5nzFgLBHrcw5Cd+L+nkPwFmgyGEjPkKw+FhQ9kBE-ANOCZYuxA3igc-+xzTlMMkpg5FUzoXQhpvBWFuL6FrP+dDGKaLpksUbMWCqXMEX+MYRVcw7KSysK5Syyl+yCy1g5b+OlIjHkEqOQwE5vLqKYIFWQBwUK9oBFVfBLmF48UMvEZDJCRRWUBAPPC-VjylXmElCi1wFLNW0AuDYpcdKhlOtVIcolSrSU2ozOqk1oqzULlbAeN111GVGuZYGx1ak4X2stWca1fQ7W8hFbGi4C8cUVlfvi1UzyKACFxT8yWXqFXEoqusrsAIU07VNRCe+MsPKGT6Kebljz1nQ3Wa2mKDruk6wJk2+oIkoq6TjDm+ljzoY9orOm-taM6BUDuUuzGjcbY438nJUAOj0QbjMcBJdZAl1mMqTPWczqQ1Lh8Sg8YqknFLF3HSA82sXWuOZPwHxeTn4OViWE3OCTGnFzISU98c5qW2IEVEvUgEOBU2sFiiCaiYIIaGq2WFn6Jbfowr+ks4T4myFCbh728h2bjhA2UnQFSMFYJwYu5dgGnotLtG0p0HTiJdMofQQ9VB+nMnbUmkZdGj0TIzH2zjQnj3zIk0snIzS4hAxlWcTtRrpPbJXjI+t27DJFhINUB5ZwdPVAsJckI6qKSxpCAQLgYhWgEl0wHb6E1dHxUM8ZqzYgHBenKB2OtQajC7y4EVKMXlVHST8oZ7upNVLyDgwhcCtMwsykMzJo6LNT0O38U7G9IVLPWds6IaoBHs5-p-iR5JroIHZPTjA6+RTXqcbRkxI97AVFrqQxtOzhXt0910TBugsWaaQVth1grKXmauHS8+LDzt0nv2K0R0rHAibac66R8BmSU6R2q7HV2dXNOBcjP1Og-HhlMPMAd1Ey0OBiZhQI74ZgSOJtO3ypr93WEkbnZx5L2RUsTe+-9FZuaDUQ09P95Zl1fOxqNnwPA3xBCtZ4JfXGbdW6RdfhuUQ0Ilj9Fh6weHmPYinssee+ejaVZLgJzs7LeihSU8OtvRyzks0eXjHTpHs3omc50HfXWkxyvTYU1z5YZQt5Bx21zyrW3oHi5SYg8jEsqNrpo7UnHcOGNydtJxdpZn4Ecf9KrvHJ1AeToE2dg3ghWF05u9Cc36MyjRxh3DmTjH5POeBxs4ktu1NIz84z9yDASAEH0o6ypyOkfAyF6fPO7dO4jfs2pEYQOp1sVPaCpY5gDrmGvorXeGMQttcS2HhPkXr7uhT4LNPmCWHZ793cgRCOqnrq1h44vMf-4l9dmXsIqewXp9mVn12OfnKLNXYjpv6iAqyC0R36qXfWbT0r5YbjA-qpD+DNJ0fjf2ubrxt1-WIU5897BZgi7K+Qpr+YBdhv4eIt79L6xbvFfe9kru+wM-roL+vZa5vm-nWZ8H4f3nzIAHGP3MFy2UREFYCDCGiPUv063fz1Av3AOYEgOgOXTgNG3jG31vxjnv2CEfzZkX3YEjFYBYGS1gNQL4AQIxE-wYBILIM63QMoNQy8mwL-zv070AKP3T3N2oP1Gh1YFx3hx-3Hzthbz6DblwM4MVzH0BFohBHBHVy4TYk12IW10h37TqHSEGGDEfEqTbm1iQyiwsmJgGxQyGw3TAJIB11vQsi0TMM4EGgsPpnMC0RsLPgskM1FCQwsEM3cJpwT28MSwsFbn8PilxxbCgkqR-Swh+xjADyD2ASDg505yxhSOiTRniMD2D26Uqkj2iR+xwi+HKBRCGjU1PSCnyLfkMML260qKqNPmnxGnYIkLJHqK5ySQ1XnV3hsRLFYCCF4ylBZkSS3H02VALWNAXGGMA3lHRQYmjByEx3nACgBT6O6FKKu3GjNic0U2VAuCIAIBKNWJyHWL4H3w-z0C2MOwOJKNkBuMeHvxjEWPIGWNIjyOiWhiKNONYGanSP0ORxfgoxPg3CkAWJbBRBUBLFFHWS+JKLOLyVdjzTgKaCIEQlBNLAhPCXOKqPeHYCuKAI5HSKFwmMgmcl6JyAGPRPBKRGuSJIaNSNGPaPpJvntmxPyOxDxIYG2OjheVJN0MFDhSeOpMhOAKZOZJPiSTFPFJeHtgRNdE8A0M4zUNY2OOKI2NELGPmOeJYDlFVO+KlMj3+J30TwwiBKqK0J0Jk3wkfCLyMLlMj3xS3HtMKUVP9DRlc2UhRCFC8KWHuOfC9PbgGBUFFD9PRAs3cxQN9mgLvCBLwCDOnGx15NvzjPtS-X8XMHSCuXME6ROAs1bWYJjIlh9L+TxBTLTQljLITMCCNUrP53TMzKkGzPY1zP7XAP4GjEGSLM61FBJOjDjz01gR7HrKzJzN0DzLslXmzBJ0UEOOJEMyg2qgqXMCRHKiCGaIK01xM38PgXl2BNUiPR5hLMyHnOdOLOhhPLgXigPLyQKV4hbM40kFNjmAoAAC8zBJz35uzfTZy0zHkMyRzmyxz+1B4uBnkyA+kVBVh-4dihzHlILAtGBF9wC+CLjwCOdDY8EEKEzQCtyOd3gTN+x0KAxMLoKkKIzmCULEDt1yKoyII2SAD4LSLn8wD8zaL7A8KtN6gCz6LXQMKoLELmLHzKBny3zKKaDNwnzZo3zCK35sQKlGLGAaI6JFD2AABHDsKYDiPwshXY2gECsC8QLohrXeZA5g9A5LLA2onAnrXSgJU0uk0yti-LXTcrDJLJKXXJdIvbKHXeYgvgBg0bCgti+uNggrNHN3R5LLM06qEzSMqAiCC8oXSXKBXJCPQpIy-XGi+KmApdD0p7CoEZRy7K8y+AqZWNPy0gjA3TJgpyk7Aqs7CqgK6qoK7KgNOYziuK6M+cpPAzTrYzVi1qutcM6zTqhK1bHq5UVzMArK6Aszdqxrcwi1XRAMuJUUcwAAKmIAOgVXWqbPvP9H0sGAgpIsYA-PdWIv4uwvTysDEv1DiSIoUqupPyYFupOHeC5kCWFm-msmFG8wYBZVkoNCNCEBOplDkOUtoDUo0qFA4gWscLsH8NvLin8UOvArEAyupE0jqH4CDCCHzkZBRGMKmDxO+FqV5lWHWBxoYDxurM9AJFYzW3OouHNE1AVX6gmFYHSB4t0HeBZruDwKNRJs5qGv7XtEptxs2NJsTwirOH2NnPZqlu5p0F5vVAtC1EePUrmCpppvWXWSFvSBGDJBrz1oD0VvvzFo2AltpuJH1sNoxpYkI2+qO3i01L0HhogksBepFq+3mydppgcz+tdsG3Oy9q8x83tqrmcikFBEjNtkLLXm6yCOcmDuJn8I3HsJ3mTvMNcM7jTtUmLPdL6qFgDLIFuTU0vwYHUq9nGhDJ-PRBLtuQkJ3DmmtSEooBEuDD8NkCyymrbo7ocEZoDOpXppRGbqYWtVTsi05BGTcKn07kZtjTmEqBIEtMGyWolisWZtVtZsyAtvjXWjdvizuQJrUAXJCmHpPp7N5KVWmLhvi33tPoNOlIvoZpvN3NdgqWmPMEEEOMoFSjXI1EtBpm3LvL1HinMBpmWBKPWB0PSD2tAZ0FjUfXqDXoTSBI3AeFFD3umJfsJt-NltVD5q1C8yVv1E-tcCUoUMhpQxdBvmxGU09FJB0v2uhCyKD3fOp0cS3FiziWlzyU3tVHuP0LPtgrOH-MbLftIlKTgTiOjASJyL6nWSSUcFcr8UeTYd4H7BvMAsQeAu4AMps0erOtjSLFIPjtdhwyduj1Lv5PB3CgdCrojlUeRvUbkeyPfO0dEeVEesX1MbVQ4r8ZkroYuqwsX2yCXudzkwrscfGlep5pGkrs+psciZFwcY7AjlFAcYBuCZ8eYqXpgd4Di0GjieVqgeXtXpQwetBsXxAmAY4uQaKbsCqcurCcFAidCI4qbtNMCEbpCB+uSjCHVHxF6ZRz6amUBtydAL8ICc62adCeYo6bfneGSYkKIvktBsofoj0Crs0vhCQ0RtstRsMr1zkV3h8OpRZlGbblhNKKJqFCQyTuDGjtjugi0bDO+EiL6QudcAcg5x8Iz2gZXsKeAccG+d5FkHSTBbwSFn+fCZKL3l52GE81aOfFhbafhfLrSertIWvhhgdHaT1LhNYEvkZviiQwjtoECaMImv8zjvO3JjVW9v9FqZQx4Sdu3yhddsdrw34BZfdoS2G0PsGmlCRhMeplZd4Y5dZemK5VfksZ5b5fvqlf5ZFYDvDtsvEdRApdr2yEqTZbVJ-G9xpe3V5MKK-gNbKIBwvlAHuKZehDNbWKJZScngrxluVCUbZgTgzUFEXHkaSL6lddsuhgsXM37Q-lkb9bEhAQwV8GUg-mDbXVjahQ3DoBIBOQeYWHRDRh8IlmtWEFYSwQLcZafqVWtXYAt27uEFkA6BfmEFAAAFI6lfjT5rUFhWETpq3a3K8a3m29QlVj5zBuEOglo4FqElVDJzA23mo3aLBh3p3VV+AAAGMkXt6qWZQYiwVNk5Bs0hVdkKA6ZhCZOaCd8thwK7RCDPM9mdwtldp+k4A9y9892dgeu93QB94dp9wdl9uBCTDdwd+vOdvdjESwNN5gHdgejwD+alXhrdl5lw-N2QDARdgANnJCg4lZK3wlg+30LdkAABZl3IOGXeXQO7TsBFXhWYPSPajL2CggA","body":"function make_inst(inst_controller_instruction) {\n    return pair(inst_controller_instruction, null);\n}\nfunction inst_controller_instruction(inst) {\n    return head(inst);\n}\nfunction inst_execution_fun(inst) {\n    return tail(inst);\n}\nfunction set_inst_execution_fun(inst, fun) {\n    set_tail(inst, fun);\n} "},{"body":"\n\n    The\n    controller instruction\n    is not used by our simulator, but is handy to keep\n    around for debugging (see\n    exercise ","tag":"#text"},{"tag":"REF","body":"5.15","href":"/sicpjs/5.2.4#ex-5.15"},{"body":").\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p7","child":[{"body":"\n    Elements of the label table are pairs:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":5,"eval":true,"prependLength":471,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAVgHQCZMChsDMBXAOwGMAXASwHsjQBzAUzIH0AnBuigZzIdYAoAtgEMSACwpEGAGlDs6zIsMEMAlKADe2UDrlMCrWiPGSG-AESMW87r1bnV-eYuVqA3NgC+uQqUo1QMgBPAAczSR5WAnJqInUNPTIDWjEGYQATfgiyKJiaVTdQb3xiPNoAGyoqAGsCEOYQ1gpBfi4gwQAjKnLZKjDWYX8iLnjtXRIaHlAAN2Fy0ABeUGEuLioSVvauntA+vkHYkY9dROTQbmZidIY8U0zZ8tUxk5eAflA+VioBNs7u2XMxGqRCoAHdaHsBkNQABaGHLVYMTrlBgOZ4vXQALlAqQy-DIwgo5X4D1UBS8PlK0MqNTqzHKwg6DGJDKZ5S4slZzJcKlGJwmwzIMzmiwRaw2XPKPJkoElR3R7CShnOXEuRGutyk9zmTwxbw+rC+Akl0oBVxud1ljOZsPhKy4SI6KLRepO2IJRJJOo8xV8ZVAImqDAaTUEFEo02DDAAHvUbvwYyFZMYJFJOdb2XzdBQ8KAsqqBTxhEQWImE7GyZp0fzJkKSKLCwSS8xE8wHgQzInya7FWd+OoFgA+UAkY66TwfdkMc65-P0jMt2PlkKVrSuxvnQVcUU02r1SX8OXptmL-cZ5dkscY3vK-uLYfZLhXoqTh0zvMXGw8Pini9ZjEbqwopWGwHC2HwQiiKmMpfnYp6gXQf7PicN60HeQ70EwzACrwJZcE4BSgOiE7Mm+a56p83zLmaRDAmCtCJuwqyxIEoTTnCYqOs63bjhSJR+CxgbBpCBw0PB8aJsmUGmMepG9P0onDP+I61rsIQ7lUe4hs0-AiUM8F9Be8n7EM8o1oKyy+NuSwiCECb3gGwhBtpYYRlGsYtngCZSSYaZWmyIzSNWrohXpsQGQp6r4V2PE6KheYDsOwghCE5RBMwkhqtcrBpZICgAFbCLMXAkE0IRkPwwUhRifRSXZuYYV5qiyMIVmXnxfrQvaFB0EQThgd+rCmqAawGCQahVih+jKuUtgWN1vXmLIsE-koKiyKNrDjeS3idSxC1EAh0r8AdGWCrkQzKfFuKZB6xKndkF2xO1u1UvtzG9W2cwdr+D3ndEl2aERU1KikaS3YSxJ3SdH2HY9APPS9lICQEQnMKd8bZD50GyeyxlQocsghCQykbgSrBWMBWErQIKYyWKPWHc4a3hIK7XmVM7buepSynVzv7ZLFKkWfzviLFVKrMGFYllvzXYS+8aPS4drbxnLsbY-TR5qSZhy6nq2Jo40zThhQkbiV56tJo5vkynKQvxehw7kdVugOiwOEMHh+LCBTTCyKLxD9kLrsZLMpDBsT-DE4REvjj6yP+mHxbjQ0Gwx5NbtYZ73vE7I0MgTnZD4THl5Eb6b2o05wa8DwnlZIKmt+dryscqAeAMnQRMk5nOgbgK6SmwESy1x7NCD0MDc8ELOYfqqyu-gPQ9xMpHN1uPy-MGLNnV1LCn6arXlx67J99xvQxNzKx+n67Lf73ryG6I7iW9zfOju9hNC4cX-Ad8IXfCwnuFXwwdH6n2ThHNO0cSaFGvicTwz4SJTlficSiAgsagHMB0DIgQGBTHhv6Di9ouKoiFt4CuKNaCj34EvQGCR4qzR4BYUeS1AHL0IhQ-0o9P7qmXviPBLACF0IVNNMGeJobcKEYjWBnDoRow6AMUgYh64YLps3DMbc-4AIzi7YWUxrhTCWAolOyiDEVUFs+Wec4TRljMauCWG5HwaVpGeNkh4NG43ggeOxIcn6iISg5XRb8rGFy-l7H+Wj7Fv1dB-IuJcSCyEfL40+SCyJwNDukcOqco4xzASfbwb8EHEVfNOIJug0FTzIACbB6RQDGKUZuSICMAhEMRMiUhiCOqV1oPU8Q7i2TxFODNOaWDFHiFYZKDhidoS9NMQI-gsyzpNLKFdfxN0faekWVI-IsdZEsQuASOgjB0j0jmhMQQIQaDhPzqkZghzVmg0liEQkAhzmXKkCWdQAAyL5OJwY0KoBcq5nzFgLBHrcw5Cd+L+nkPwFmgyGEjPkKw+FhQ9kBE-ANOCZYuxA3igc-+xzTlMMkpg5FUzoXQhpvBWFuL6FrP+dDGKaLpksUbMWCqXMEX+MYRVcw7KSysK5Syyl+yCy1g5b+OlIjHkEqOQwE5vLqKYIFWQBwUK9oBFVfBLmF48UMvEZDJCRRWUBAPPC-VjylXmElCi1wFLNW0AuDYpcdKhlOtVIcolSrSU2ozOqk1oqzULlbAeN111GVGuZYGx1ak4X2stWca1fQ7W8hFbGi4C8cUVlfvi1UzyKACFxT8yWXqFXEoqusrsAIU07VNRCe+MsPKGT6Kebljz1nQ3Wa2mKDruk6wJk2+oIkoq6TjDm+ljzoY9orOm-taM6BUDuUuzGjcbY438nJUAOj0QbjMcBJdZAl1mMqTPWczqQ1Lh8Sg8YqknFLF3HSA82sXWuOZPwHxeTn4OViWE3OCTGnFzISU98c5qW2IEVEvUgEOBU2sFiiCaiYIIaGq2WFn6Jbfowr+ks4T4myFCbh728h2bjhA2UnQFSMFYJwYu5dgGnotLtG0p0HTiJdMofQQ9VB+nMnbUmkZdGj0TIzH2zjQnj3zIk0snIzS4hAxlWcTtRrpPbJXjI+t27DJFhINUB5ZwdPVAsJckI6qKSxpCAQLgYhWgEl0wHb6E1dHxUM8ZqzYgHBenKB2OtQajC7y4EVKMXlVHST8oZ7upNVLyDgwhcCtMwsykMzJo6LNT0O38U7G9IVLPWds6IaoBHs5-p-iR5JroIHZPTjA6+RTXqcbRkxI97AVFrqQxtOzhXt0910TBugsWaaQVth1grKXmauHS8+LDzt0nv2K0R0rHAibac66R8BmSU6R2q7HV2dXNOBcjP1Og-HhlMPMAd1Ey0OBiZhQI74ZgSOJtO3ypr93WEkbnZx5L2RUsTe+-9FZuaDUQ09P95Zl1fOxqNnwPA3xBCtZ4JfXGbdW6RdfhuUQ0Ilj9Fh6weHmPYinssee+ejaVZLgJzs7LeihSU8OtvRyzks0eXjHTpHs3omc50HfXWkxyvTYU1z5YZQt5Bx21zyrW3oHi5SYg8jEsqNrpo7UnHcOGNydtJxdpZn4Ecf9KrvHJ1AeToE2dg3ghWF05u9Cc36MyjRxh3DmTjH5POeBxs4ktu1NIz84z9yDASAEH0o6ypyOkfAyF6fPO7dO4jfs2pEYQOp1sVPaCpY5gDrmGvorXeGMQttcS2HhPkXr7uhT4LNPmCWHZ793cgRCOqnrq1h44vMf-4l9dmXsIqewXp9mVn12OfnKLNXYjpv6iAqyC0R36qXfWbT0r5YbjA-qpD+DNJ0fjf2ubrxt1-WIU5897BZgi7K+Qpr+YBdhv4eIt79L6xbvFfe9kru+wM-roL+vZa5vm-nWZ8H4f3nzIAHGP3MFy2UREFYCDCGiPUv063fz1Av3AOYEgOgOXTgNG3jG31vxjnv2CEfzZkX3YEjFYBYGS1gNQL4AQIxE-wYBILIM63QMoNQy8mwL-zv070AKP3T3N2oP1Gh1YFx3hx-3Hzthbz6DblwM4MVzH0BFohBHBHVy4TYk12IW10h3nV3myEqR4RyG6BRCGm9yTzOALXQUFF0K+HKAMOdzk1kCIAICsLrQzXMJwksOsLU1Tzdw7X+QsXM37R+xjADyD2ASDgry8LOGhl8Pq39A-gCOjCCOD1CLXV8GUg-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-q4d4CEZ5osoWf-qWZpiadmcXxAkYYssEc2dpsqdANaasL3l52GB6dAHeF3oTMCB3pCDBuSjCHVHxAeZR0eamSOeaaqfgIssMy2cksX3GIssGb3i4EUr8sZo0foj0HyYivhCQ15tysFoSpbsEl3j6OpRZg+bbjZPhPR1UiQxGOcnbs7uggiebO+GmL6WxdcAcg5z6Iz04fWfHu0ccDpd5FkHSU5bwSFiZdOalHGMcGeOfAFcFDaeXs6bGZ0ZCkgZIQjJJMDIy14sSxFoCAadaKkHzqZYadLv7V2cIZse315fzuzoycNZka1ekbgfhTtq+2piNZK3whNcIYoa5VfnSe9ktfi2tauxkelGamFGrpVdcd3NRHVf8zlJDQVN4ylAoaSQ+toHQYXATa1KhQ3DoBIBOWJYWHRDRj6IlmtWEFYSwVLbVTwddP3r2otzPuEFkA6BfmEFAAAFI6lK3qprUFhWEToG2m3K9G2O2TglVj5zBuEOglo4FqElVDJzBu2g3YUy2g3VV+AAAGMkIdvUWZONiwLNk5cN6+50-q2GZhCZOaWd9gC3BdjgeaBwf1iwCdjdo9jEA6W9+9pdzdl9k9st99itz9l4CTHdsd+vR9-9nQSwbN5gA99qD+alGxvd8ltokt2QDAVdgANnJFg6dYW3wgQ+3x-dAAABZ12PBNW8PEtyQfXBpdCLXIP8OS2CggA","body":"function make_label_entry(label_name, insts) {\n    return pair(label_name, insts);\n} "},{"body":"\n    Entries will be looked up in the table with\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":6,"eval":true,"prependLength":468,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAVgHQCZMChsDMBXAOwGMAXASwHsjQBzAUzIH0AnBuigZzIdYAoAtgEMSACwpEGAGlDs6zIsMEMAlKADe2UDrlMCrWiPGSG-AESMW87r1bnV-eYuVqA3NgC+uQqUo1QMgBPAAczSR5WAnJqInUNPTIDWjEGYQATfgiyKJiaVTdQb3xiPNoAGyoqAGsCEOYQ1gpBfi4gwQAjKnLZKjDWYX8iLnjtXRIaHlAAN2Fy0ABeUGEuLioSVvauntA+vkHYkY9dROTQbmZidIY8U0zZ8tUxk5eAflA+VioBNs7u2XMxGqRCoAHdaHsBkNQABaGHLVYMTrlBgOZ4vXQALlAqQy-DIwgo5X4D1UBS8PlK0JE1QYDSaggolGmdIYAA96jd+OyQrJjBIpLJysIOgxyiNNOiKHhQFkuMwJsMCUQWDzuRyyZKMTpFVMSItQLrlaqOcwHgQzDzydrToZZeoFgA+Q3HXSeD7ihjnGVy5jC0XlZhqq2jG1G85KrgGyo1Op+kVi-j+sVcIUJwM8+MB9UhMmujHsJJ2-gO53ZLj5ooerhe6Wyi42Hh8IMcnOarRhyZkOQGqxsDi2PhCUQCmR6ThN1gt+ryNvW7WFs4lxbOvuK3gqrhOAqgdHulNejvaz7fHMAoEg8EfDnsVaxQKhL1whE15Go+c6bzFXxlUA0umQgcNDTkGeBnn+I6mGmAaprs-RAcMobjF2cHRlUtT1I0zT8IBQwgX0ba9PBQxHOi4bCL4UZLCIITciuEG0vSzRMhQLIgVyY78lBoDJuKqjSOiNpCXB+x4ZmgFEOkW4hpWi7FqWywhCE5RBMwkiXJJfAqZICgAFbCLMXAkE0IRkPwgnCRifR8sItEyk6oBgfxyyUXmFIlH494rFwFB0EQTgDpOLgqLIawGCQaharockVLYFjeb5RDmLIjZ2MFY5hawEXkt4P7Qglfn9goSgqPwBVEGpSq5EMSE6DFOJpJkBJEmVd6Fdk1WxG5uVUl5bUVearKtuVlWRNENWaLuJz1biTWEsSzXEiNHXjV13WUp5AT-swI1ctkNkmIKPHprBuGHLIIQkLVhooQSrBWL2TBFYOAhcUdI3OCV4RKm5JzhoN04GiNANqtkH43UqMxzBazC+IsFk6BcZ3AWqIMagjoDvNtyMVZmXJo7yEGHWOvGncRhxPDa2LbVhjLMkNnJgQTB2jtBKbg-Vy4OUelk6DWLDrgwm74sI91MLIAO+CW4OWRksykHSl38JdO4Y26Hjfr1ARy8ICsNBsKtRXzT2C8Ll2yIt-BrjQG5kFuKt5rumubUYwiMbwPCgVkSos9xpNEaJ52OcKdAXVdRsQ3qNDpCxARLB7AvR7H-lg5Wda+jj078IqMc1ddf0oTnyew8QBrY+TKOmlyau87XRdDL7R017Xln+yJUIU5W036PJ9E8y3xuJyqQt2-weAh7I9exCX-m-QPug63rSsq4UzcnJ4lb7p6EcnCeAj7aA5gdBkgQMFMK2-s+3lIh0KIOJv7l5feCfZ0nE0JPV5RxeYCfJRDuddUKM7X8CcFRv1iPiM+LAL7v3RDNRqIsWqgJgWtVewDqRuzpB0AYpAxBewPm9EmJ1ZDj2EKHUAht+7hmuFMJY2DdbiGYDQsyqcpQ+guLxLOzD2wY3DOWNCsZ6i8STMQ46AYQLCO4TLaKPdaBc2dP3Ae6drbD2FqQugPD57an5mA1Ro9zYRh4KRLRn5qyHjXrLdI8sIr62VldLuLdvADw3nuMxO9dB729jwAEx90igHobgwxORVoBCvoiN8989yPy1rQAJ4gREBniLaWKPALBxLEH-XiO50H3nSUwqB-A8koPyBHeBeJLZFKqiEuIqsckBAuASOgjB0h+jihMQQIQaAjwtqkZgjTrr1QuCEQkAh2mdKkCqdQAAyKZDU8RjK6ZMxYCx469MaRrDav5ZxfSSZ-b+8g-47KAZs6EDZAppWDBqSagz5SNOaa01JPIAQHOySc+8qVmyZlnFaa5si5lzRajJIobyAhGl1mZQauy-lf1SeYMFKo-6QuOR5X8Fx4Umloj8-uNy+lkPuTCsyTzD7osiXU2g6KQKDTbL8osKQEGWyBWSsRiYdk0rOASiwvFDmuFeSi058pOGXNzGyu0DS8UMBaRyol5guW8qfgEQVpphFYuSf8xBxJGUgohLRVlH9oXfz6NylQcqYnnHlJnIVAy-lDJGdSmZZrcVNIlQ8sys1CKH0NTlLV7cEL4Von0acULaVqstm6gNIYTUux9WJU0EkpI4U5FcvVwbLbho1Mi+VrtGJ0CoH03Ne0fZE1Zsy8UYdrrUKgb2XNZBc3MK8WQcG6cOHpi4VAzR2o+GRgERhLMiY26KqEemfgUiHF1T+fI0AOjTb6JILIcs4Mt41m9PWeUHypxqike4nUKF5CPWsOcochCUoHvXaaWcI6MacwUlOm2I97azvoCbW9wt5Bz1MQeLdHxWBfH3oWo+J8c15qCZ1UJ8Jr4RIXdEqNgGa0JLFEG9l38YNUEyemSNv5kP5NSZh4pcRJpwL+W6y2OGqllEdlB38nTaI8FENUK1waaMkGqBYKjpK+X3hCAQLgYhWgEiYxLaGkVsV-MY8x8wnHuMOBJIJr17GtqYOYFwAyrIwIEMgkdUTZaI7hl3UsPsa7hzE1Cnx6oo193FVcPWt9qqJ2KOEhJnjmnH1D1tluV90ihKLxscvexzcXE9SjdtW8Nb2D4MLUeydJmtNUJ3RwPdz1JyGeLaJszRV0pWY5uOhSdmhI3r0W5jgF0CKies5Y6xisDb2KmsJfz3qlMsgChokVKSzLmHq6iY9GiM2muC98Mwr7ms8X2VAvrf9X3dajSl7IaWvq8do2ZkDeHhPBqI-NObTGFvVPWnJrNis+B4G+IIML3ii1+1ETjWClCyIoVENCJY-QDusCO7diBrCThNvNRXXGw0yP52QpDF7wE4bUQUxaquYFAdEEbjICxJiTFtwux5mz2XqtaMhzPEsq84deYq3Y1WzjN5uJy1+n99afEnwe4d4D1TYRgfCbfd8D8mWU6e2VMjg2OXif24dv+kP0PQhZ89soytudPc2+z5bZxVstUF+LvOGydsMSGgwEgBA8KZrJyW2CEXYdw4Meo4ztGiISkl3aYIYQrPLKWOYcq5hm5YwU7tVT4X1NEJgsbstzdsTm++jwB0KzD6-3t0rvpUDjtkGh2zUtcFYIG4oVdL3D4Ldgyt4fdJdvLIO8YnkgtJ2IttzjyrRPPvLcrOt8hjPwks90kw7niPp2jptyL5Zb3j5S8B7a8pyvQlq+KeU+HyPkWjfx8psJVvyefqp-ML19g3ebS95nypzXEWnPN7H0n33Dap8OeYCIVgtIpw1sUyZuf2pe8773wfvNx-5tchX1Fkfxe28p7L4fdgLJWAsBS0fy-fBT8YgXwYA-y-xM2v1-3XTAnv2HzXyEnH03392t0F3-zeBD1lzr0HwRxCEuwTxbxJ1PAPkBCIGBDBFoFww31pxfBvjvlk0zRD2yHrV0RyG6BRCnFw3ozOGGQoF-U9nXC+HKBYLl1iFkCIAIH4K9VoOm14OYObFw0t1NzpTxFYQC1RSVBbBVzV2nilhT3kMCDWyUMVx0Wm3ZHUPV2IE118Guh0UtgPgsIV1oLqHSEGDpHLHrVgjbkIXLRQkuniwMwi3ExIEiQLkhnUR8JPSS24nMHUUCP+ymFEzLldwsFE2iO3Uhj6CogbzMHMAu2SNVUeyDBHHrXokMNUOMNV1MP8l1y0X2kqPnm2lKI0KBxiXMjhyqNUKkP4JkNIyGCswEhaPnncNdzDl6L6JbjjyczSLJGGJMXnTsNNW2kFRVFYCCDg0DC+jnUjHYLtE4IEE4TWKCVIiZXZByFu17XFFfkWOkNYGPQilYiEwI2DQuBEP4POKYI6NYFHx7z0BuIayeJ2F+I+KpmvGOPIFOK3BqMtnaJYP4hqNcKjwlG5hqJSKmCkDZFVBRBUBVANDdUhL4CR0shxUiB0n4BRLRKRBHgBJGPeHYG+M31TERJMW2OHEYgWJyGWJJKDHRO6XpJGNaKMWhJ5PhxOjJG5IxGxGpIYFuOVltW2noPZLFDJMmSmIFJbnnSVOVO1FJjxJtE8BoNNXAwZxeL4JYOh02NoCOIGBBNJkNMuLVL6NhK12yxFKEgcKcLMy3HLDhJNNHR5MGUjG9JMR1NmMCwU1E2XH7hRG7DiKWF+MrAjMcgGBUANBjPRFoIv1FgPzDIxjwATK9Hu1tSc2zJ5W9PqnMHSC6XMAfhOFTIDXAMzJtCjLVULONW9KbNzN0JalbKRxLLLKkArKiSrNNQc34DZCSQxgbMZLZENyY3xwXD+VLPLMrN0GrNoj+0RnYXlF+PWzo1XJeE8XMCRFMiCCHyYwoNYyR0XXMV5nDBrRCCxIQRK39N0AbMtgfLXnqhvO9KcTdBTNNUkBYjmAoAAC8zAdyGzkybRuyFz+ylzTUY4uBhkyB4kVBVgyE7iIK-lkKlNGBt8uMMldd3gHNddqYz4sLcyO9WN8KKECIKT19MLUKcLuNd90y-9KK0z98hwaLYC-wSL6LX9xMazmL7BWKBL2KBBOLAS6LsK+K-zKAALgLkD58Ix-yv5gKSwiK8DXoeLGBzwiDLxaB2AABHC0KYZ8JIyDbuYNOChC8QIM38GmXCpi0S6-FLO-QY486oaLe4pcR0vXBy2s187HKxBhXHFeGo2rWgoLIAvgEA+bH-QSr2KA-jEfUpLLPuekqjRyjMgKkxHHWxFeVHRxWygXPy+Ko-UMhDO0TnNiq-Mqk-V5Wg9-aKm-DbOK0SsM1VTnRqz-Zq0zVqg-e+YFRXDK-ykzU09yljES-q8QwckqtqkrFKhjEzFjWaqaoq+8SKicOwYknlCOOM6ddI8wAAKmIHKglUOr7IHKjSssGCQq0rQtnODUkrIvLyYAUrPwhlc3Uqeqn35jeoAKhnKAtD7g+rvQNEGmOQHmxE8Sep0uIKvEMuMu7GfA2pehyK-LHUsu4GsrEDWoVXQjqH4FpCCAthFBRE8MhmpO+D8SWG8nWEJoYGJvbIWlJrUEywePlCuBuDuACgmFYHSHEt0HeE5tuCkHSGLzW0pr5umqjVpo2CJuuKppNy8tFQ3NEOJElqkgFp0CFs0hFolUTwYCMrmHpsZrdTdQ1pGGFMzzVQtq1tAGxFlpNpJpaltt1OgyfXy0axejGoM0sFeult-Dy1cy9snAE0BvuoxrOF9t+scCRQowwUYikFBCYuJjrJiO7G8JB0Yl9suhyPDBCKzrpF9qiPBnDAbO2nKtjKYECF6Vw0U0NotAViTLVqru7DIF6TSOjDik5xkooDkrpCSNkAnVDPMF7v7ocGszjLXVxQZy7tSSqoCLLSFG-iiJIRDms1oLmEqBIFdIM11Qxg+w0muD1syEdr2OnoJAZzJB3O7k2ubEvpRANEZI5T2JRsSx2X5PVNnLvsPxZvPKJzXk8T2PMEEFEMoGUiPOPruHHFRvPMvTnLXWWH4PWCcPSAuu-Mut-BjB7T3p2uJ3+jmCBlWDpvPpPRnrJuLOtQ5t1u5tJEoqAdcFhr0pgcnDREhpDTW1JHMpgqjXqN4DToxE7SMXi32rx29MPs3PnRvpkWDXnN7M-IAd5iMLZBMM0LMLdSkcxzfL+T4ZAs-Ogp0FoOusQp4yep3NoJo0-wEdyw9uDoMXbucK6OnhrCMqFmykfMjrtF0a0e1Pgcerup+rujID+pQMsbMjtpOGIpQqko72yC3sEOAhccboihCZOHeBceBocYSYqiSbcbbJcYhpbiidIqny3pQd4ASzsFScFqQe3t3pPS+oCb4v0xPWqe1p4nxpnAafYe+ukqVHieyMos7u5hroAiwKBiUiFiag7qwON1eR6aaY7ySMotE0aeieeo9S+y4DacxlGeYDSPUuhruqYZIL0FcZMvhEITRuVtoGMZsvjvWoU0IRDrSi+jJlghxPeO0xQkIXiMToYGTuefBjyLSHiWnq+nol12eZt2QZ3oqbXSk3BZ5VkAsSReQvBmhbif4P2a2akwmMrExf6exbrtyYVjYeElalfANM+ZNLZrOEIVxtoDCfCKkDGuhbCbY1oJaZ-sYLvRZbHDRYjtVRUWDu5Zen5c6xenSnWgsaemntEYi0FbDotEsNsb5bFcS0VbIZ2WVfcBucPh7NREZY6cEVOJWLcJbX3qCKmAeCIbWA2F2MYYdNkioaPq5tFuk0eGD08UdZCkPmFugd4goP1OoPFpalJAV3DDoBIBaV+YWHRG2meYxk52ED-iPjTeCc-oxA5U6qRD-jKlkA6AUmEFAAAFJ-Es3hJOcFh83hBC3i3U8i3K2TgOUa4f4w8Ohko14X4OUCJzAa3nJZx03nJ0V+AAAGa+20jEdJFYiwaNlpQ1ieqdl4cqCwYJ5e1JPt9gQQBwTreKXd8cNJCe5t7UVdm3MbDgI9yYteM9ztvdn+JdteZDWd9tz2Tt694SSwGNphcstyHReV59UeedlO4tc92QDAMdgANnJH-bIdEeA78LvdAAABYJ2PBmWEPXdyQNW0p4Pv2-DU2CggA","body":"function lookup_label(labels, label_name) {\n    const val = assoc(label_name, labels);\n    return is_undefined(val)\n           ? error(label_name, \"undefined label -- assemble\")\n           : tail(val);\n} "}]},{"tag":"EXERCISE","title":"Exercise 5.8","id":"#ex-5.8","child":[{"body":"\n    The following register-machine code is ambiguous, because the label\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"here"},{"body":" is defined more than once:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":7,"eval":false,"body":"\"start\",\n  go_to(label(\"here\")),\n\"here\",\n  assign(\"a\", constant(3)),\n  go_to(label(\"there\")),\n\"here\",\n  assign(\"a\", constant(4)),\n  go_to(label(\"there\")),\n\"there\","},{"body":"\n    With the simulator as written, what will the contents of register\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a"},{"body":" be when control reaches\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"there"},{"body":"?  Modify the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"extract_labels"},{"body":"function\n    so that the assembler will signal an error if the same label\n    name is used to indicate two different locations.\n    ","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-1","count":1,"href":"/sicpjs/5.2.2#footnote-link-1","child":[{"body":"\n    Using the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"receive"},{"body":"function\n    here is a way to get\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"extract_labels"},{"body":"\n    to effectively return two\n    values—","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"labels"},{"body":" and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"insts"},{"body":"—without explicitly making a\n    compound data structure to hold them.  An alternative implementation, which\n    returns an explicit pair of values, is\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":8,"eval":false,"body":"function extract_labels(controller) { \n    if (is_null(controller)) {\n        return pair(null, null);\n    } else {\n        const result = extract_labels(tail(controller));\n        const insts = head(result);\n        const labels = tail(result);\n        const next_element = head(controller);\n        return is_string(next_element)\n               ? pair(insts, \n                      pair(make_label_entry(next_element, insts), labels))\n               : pair(pair(make_inst(next_element), insts),\n                      labels);\n    }\n}"},{"body":"\n    which would be called by ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"assemble"},{"body":" as follows:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":9,"eval":false,"body":"function assemble(controller, machine) {\n    const result = extract_labels(controller);\n    const insts = head(result);\n    const labels = tail(result);\n    update_insts(insts, labels, machine);\n    return insts;\n}"},{"body":"\n\n    You can consider our use of ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"receive"},{"body":" as\n    demonstrating an elegant way to\n    \n    return multiple values, or simply an excuse\n    to show off a programming trick.  An argument like\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"receive"},{"body":" that is the next\n    function\n    to be invoked is called a\n    \"","tag":"#text"},{"body":"continuation.","tag":"#text"},{"body":"\"  Recall that we\n    also used continuations to implement the backtracking control\n    structure in the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" evaluator in\n    section ","tag":"#text"},{"tag":"REF","body":"4.3.3","href":"/sicpjs/4.3.3"},{"body":".","tag":"#text"}]}]