[{"id":"/sicpjs/4.1.1","tag":"TITLE","body":"4.1.1  \n    The Core of the Evaluator"},{"tag":"TEXT","id":"#p1","child":[{"tag":"FIGURE","scale":"70%","src":"img_javascript/ch4-Z-G-1.svg","id":"#fig-4.1","captionHref":"/sicpjs/4.1.1#fig-4.1","captionName":"Figure 4.1 ","captionBody":[{"body":"\n\t    The\n\t    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"–","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":" \n\t    cycle exposes the essence of a computer language.\n\t  ","tag":"#text"}]},{"body":"\n    The evaluation\n    \n    process can be described as the interplay between two\n    functions:","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":".\n  ","tag":"#text"}]},{"tag":"SUBHEADING","id":"#h1","child":[{"body":"The function \n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"}]},{"tag":"TEXT","id":"#p2"},{"tag":"TEXT","id":"#p3","child":[{"body":"The function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    takes as arguments\n    \n\ta program ","tag":"#text"},{"tag":"EM","child":[{"body":"component","tag":"#text"}]},{"body":"—a statement or\n\texpression","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-1","body":"1","href":"/sicpjs/4.1.1#footnote-1"},{"body":"—and an environment.\n      \n    It  classifies the \n    component \n    and directs its evaluation.  \n    The function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    is structured as a case analysis of the syntactic type of the\n    component \n    to be evaluated.  In order to keep the\n    function\n    general, we express\n    the determination of the type of \n    a component\n    abstractly, making no\n    commitment to any particular \n    \n    representation for the various types of\n    components.\n    Each type of \n    component\n    has a\n    ","tag":"#text"},{"tag":"EM","child":[{"body":"syntax predicate","tag":"#text"}]},{"body":"\n    that tests for it and an abstract means for selecting its parts.  This \n    ","tag":"#text"},{"tag":"EM","child":[{"body":"abstract syntax","tag":"#text"}]},{"body":"\n    makes it easy to see how we can change the syntax of the language by\n    using the same evaluator, but with a different collection of syntax\n    \n\tfunctions.\n      ","tag":"#text"}]},{"tag":"SUBSUBHEADING","id":"#h2","child":[{"body":"Primitive expressions","tag":"#text"}]},{"tag":"TEXT","id":"#p4","child":[{"tag":"UL","child":[{"tag":"LI","child":[{"body":"\n\t    For\n\t    \n\t    literal expressions, such as numbers,\n\t    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n\t    returns their value.\n\t  ","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\t    The function\n\t    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n\t    must look up names in the environment to find their values.\n\t  ","tag":"#text"}]}]},{"tag":"SUBSUBHEADING","id":"#h3","child":[{"body":"Combinations","tag":"#text"}]},{"tag":"UL","child":[{"tag":"LI","child":[{"body":"\n\t    For a function application,\n\t    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":" must recursively\n\t    evaluate the function expression and the argument expressions of the\n\t    application.  The resulting function and arguments are passed to\n\t    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":", which handles the actual\n\t    function application.\n\t  ","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\t    An operator combination is transformed into a function application\n\t    and then evaluated.\n\t  ","tag":"#text"}]}]},{"tag":"SUBSUBHEADING","id":"#h4","child":[{"body":"Syntactic forms","tag":"#text"}]},{"tag":"UL","child":[{"tag":"LI","child":[{"body":"\n\t    A conditional expression or statement requires special processing of\n\t    its parts,\n\t    so as to evaluate the consequent if the predicate is true, and\n\t    otherwise to evaluate the alternative.\n\t  ","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\t    A lambda expression must be transformed into an applicable\n\t    function by packaging together the parameters and body specified\n\t    by the lambda expression with the environment of the evaluation.\n\t  ","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\t    A sequence of statements requires evaluating its\n\t    components in the order in which they appear.\n\t  ","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\t    A block requires evaluating its body in a new environment\n\t    that reflects all names declared within the block.\n\t  ","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\t    A return statement must produce a value that becomes the\n\t    result of the function call that gave rise to the\n\t    evaluation of the return statement.\n\t  ","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\t    A function declaration is transformed into a\n\t    constant declaration and then evaluated.\n\t  ","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\t    A constant or variable declaration or an assignment must\n\t    call\n\t    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n\t    recursively to compute the new\n\t    value to be associated with the name being declared or assigned.\n\t    The environment must be\n\t    modified to reflect the new value of the name.\n\t  ","tag":"#text"}]}]},{"body":"\n\tHere is the declaration of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":":\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":1,"eval":true,"prependLength":430,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKqY7bHlqdUAEMADmIA2ATwAUAgDSimAc3oBKUAG9soPaCoFQsqvQD6YplVZVqANwCmZgZVol5pdZp37foJg4UREwkohIyFlY29k4uQu6KymrqANy6+gC+oA6S9A4GRibmZGxiNKQAJs6krnQeJF7a6X6gJQwU-g70RJIdALzZdiKSRCIUDvW1JGYARjQVcgLqCs0ta+vrDgAe4yRVDiR2VCwkrAcUsqsb1zd6cW4WIkwiZ+NM9PXLV7c-LU9qK1+QLW9zoZgORxOZxIFyWXjS6wCQRCBnMSOC0yGIwmAW6vXU3w2AH5OsjMcMiE42rsLriehQCUCAFygSoOAhUEgOCoIzLZXL5HxrBxMFhMepKABEpAA1iQaAB3UKg0IUaRifIAWk1YSk0klqVWGWwxv4NXioEkpgoZhoBDMWMpH22YnoSgh3lW6JRrHEsn+oD6AD5BhSxhN-u7DstsltXYbTSrQ5IzG0KrY3MNZCVWGUuTCo3ZPb5vaFTGYKEwiBQABZyByO8PZujp+LDSLcqhkJs5vPnGMexnXEkNsPjZt7DN0dttPIAR0pMObubo-cLQ42LNHIx7LanJHbwzeB5iy77MIH0bSifNbmTZnni7IE3oFFYFDd2WjTV8hmM5YcXM1QfBwFwOZ9ZFfd8NGLNZS1ZPZ2U5bleT0LIcjyAp-3MSQRFfB8KHDaELigj9GiFFp4O3UZxw5d4bVfIjzkgt8yPXVDQHQgUfzWWcOjo-DSIdCl8gGQk-GopsBIYwjxmIljoMvIsON-Qpy1LYTsXkY5BNYzTKXI8SS0CDFCB0mT330hwVL5DDBSM-QqKxECwPIHEuhkpiYQ+UiNHY8TjV8Y0b0EO96G7aZyhtCoHDIXDnniD5e1XC8eL0eDy0fcCJmS-MGQc0ASREMgyCIVgeibcQNT2QFgTWEgekkWq6r8X0xEgiLbWrMwYrip4xjcN0CrqrK3IIryPzPFKGS8AqWXLXr4oGupcv7AqSStV9ZEW-r4gfaRWDmSQpry2abhZBrJEka9cCTbdZkkGgyBlE7znXNLWjoV9QDmBZAx+x7ntmeY5FWi8OL4y0nuGRgBnCkRIu6naEsG2RfukQ1fEh0g8PoKgVC5CpYcta1bXtHH6DxgnuVkQGYcxxyTJRSTx3R90dgOfZDmOOh5Lp3JmpaoW-ApqnCc-YbhZ+QcbqTTabTtMxRfxwnIIOo6NA++C2rVw6aEkQMQ0lAAqZXqYqY3JSUeh1f1jQbrNULhHujTGLk5iwYod6KNJUzfRlJwNMdCYWfcslwTjXE8ZW0ppq+KW6plk1btvZ3nNxlX5M973Vkh4P-tD-1Kcz84rIjywumj9xPfjhPfA9DiM4J-a9ZTYOi7F4iW6O16LyUYP-OMslQGDh27uc5Hlur2O8pz3wm+mG3W6sy51knval57mulHEwv14eYPy6jtxe4ZddBfrq8vSZ0I2Q5QmHfwFVGAIFh2CgOBEGQdAsAAJhTp2ZZzCERUCobkZh5anyULWJwIDYLpRvqiR4xxT6aAAGRoNADWBwIgKioMDH0AYMCKwiBUGPVOQCIG2BFFmGuWtEHlhAWAqokDs6gElFaN4wwDSywoSTLhbcRL4K0L4a+w9sG4NkIRKgx0a4JgAVMUA-snCcJocdYO8DfYokgRw6hzxJBWxHiJeRjtFHlgPGcYRYjTKMNIcwqhW02GSgsQ4HhydTEWmUWYFxusjqaPgjolxhjN76xMUmEJKZFY+LoT7eCEi8HSNkTPfsYS+HlgXlnZJqVYkMOAXY8BrCsle3YRk84bjjRJlKTCbu+srFD1MvEqRIgZGyEaYk1BXh5GVOLgTLuh8XTHxjiuU69DxE4ISc0467S5GpMAUg-eQzzwMlGTYvJoCCnWigewviCNoqxSWvEA0oAAA+xyCq2PWSwzZTihhWBEDMSQTgFkkCOac85az7GFOGW9dhKoer7N2m4cpCiLTPJqUk752TrEogiWTbxLwJhtMmR0rpfCwX9MjpXE+MToWhCRS06ZRTOnkLmV4nZ1TnmyBcf3ESR8sV0H8YgnR5K9l9RRnQQx1KjHYjpcXBlJKzE4ReDMCoIheVVzqYzYeFzPnXKKVKXCh1RXiqBaiuZiqRVirEP1V4IpwVJSJSsn0fpYVRIRUofFEKlnEuTnLYVyr0aSoQWMyR7TCWQpmrMxRXiNXKoGfS9w2rni6veEodGjLh46N9WK-1fKXlKCDQit4n5w0CotOWP5lKYkAEhRH1JRDKjZjj5W-Iof8tlU9gVJkzQC9l0xomGpyZG0mAQCBbIwGqxRNaK17UTSGg1HqI2mXlmYVtWzf6dotN2g5DxHU4vzaEEdY62EAGZJ13mnRWGgqYvqEQpfsp1WjQhkt3bs8tM66iSzuGWsFDbB0X2uD6+1MbMVxtXi1adgKwR9sCCKAd1qH0-E-XW4GCwUVprvOpG+413ZLnnc61ZJDLkOIuE412slAJlPXcIDSsaJXwaPVg8ZTSWlyIg8IcsaZ9y0MbbipBTCi2oZLZKKjbYUx4dVScs5NxC1XOLR6qUrHMwpjdphmEVa+FCenCmCu6ZuzjgIwElt7J23YdCFJg8KZZygUXExwdaUlP4WXSWidvC5kacPL0EUJ4qCOCdYZm0xmBOgDXeRyho0IKkXgRlD5jGFLFMlB51xanQBBZg2JyaXntD6GaHE4j7SvMhekuF+SvlvOIMaWlszijcSeVg5F1imsKLwQS4VkLAEgLSBck+F8ZWDO5O8Y1fz9tbVpKFbpCazX0vSvMJdKZyK0tevTeYB5T0XoEcI7xlDWzJSjeehJuZc2ZSgdBrRhdRHXXIrI610lIgA4PTGyxCaQ7tGbNm4DGUwSMPESG5B8wNANQJRoEwHdh1ORT2EbmmL63yw4yYFVh7NCKDPdezMd78R8FvJ4yN97-3bSPbGCDnMYObOLLjtl4bSsDxw8B09l7yPwfYsbV9vQdGptfKWVKP7AOEfA-x2wFHlbysw+xzToHSOGeE7RyMrQJPQBk983xvTlP2GM5x7Tjnb3UcvJC7jxHL2ImHoc6OlTbCO0Y43eZeHNC9hK6ZcpttbDTM7cUXkNM2vni64m8rpzIvXPuKTF4qqVp5Mnz+RxugSh-hlVLh7hgJ3F1ned12StgGNju9fVXL3qgffVL9y1kKii5d09B1z6YwOzDB9d9z-sH1IbJ+e-9AvCvbZWvRwLrHTw2d49T9L1B60lF7acFnj7XifHF9rnXPwkDkty6t0Ss61wWRO-CCHiHbeEWyA72HhOPetd97wdvK9UszctgtwjRfA-bsUfMC3iHimGsMaFzNvfqqNfCAjxXN9B+XUTNIwP8-oR-gqq+vZjL8XkXuutfCdxT8KEvzfg4E-m4B-jQBXRBTuwrCrFrDkC2ADyQTmH1hwXcDgP5xuBJC2DmmyFFGe1kC2ClEQMeQRljA1EoG5CUACGfFs25AW0FWcBhlgO8EIwAEJ6NoC6w8DUhOIIDhAvEVRZAf1k0w0QY54pVh0ztkpKhqhAFDFBC-1hCFh-IKk2tXsygpD+CCB4DydNkCBBNY51CKFaCp0y05D3h5AmCbcVNdDQB1duCPEN0y1HVNDotLC21rDTM7Dq0y0IQeZThmJnCRFXD5AlBXNPC+EvEg4hFqRc8m1xCtpJRIjsRDFojwYTdMdEjKRZANEjVKEj9psB52EMjgtH8j0y4UiLhsjYiURLUsjjFt9QhwJHo8YSAVBwRuYoRmIPQXDEF2kG4wi5lktX5J8ujAj39JE+jTRIZiFAIxBgIfCOiYR-o+s0h7DeCm9nBg0XxS9Pxg4itCNtUUEIkdiRJ7Z+iu1Nj9V5BNiLCxi8EhizguDE8p0LjdiriEUbjh52l7iHBHieCGiOY9g2jIReZmIjiaUBYfo8InARi6NHkWjaxfE7ZNBCEBg4SVAESsQNAG8DjxQ+DNjESITMSYwZgoSgSNx1gWQ0SESjjNAAAeS0A4dEmsWo3IcktYEcHA8USUYHGgRvEgaQJIWPD8ULIgUfbkFkSUUAAAajQJalfCsBaMMDkBpOlPYSlFVOX18HlM5BUCVJZJgiwJFDFFkG5JoF5IIAcAVEFOIkYG6DFIqAlI1KFm1MVIIGVO2M0BlMMUlJlM1P0BdN1LdP1J-yeLvEehoBlFFPBRXgiVEOvTmQhAgTNPahhPWHCQigJOONZI+kRAaz60zLZN+BHEOCTIe1kEaJoGaNaPmJBKXEHD9L0BZAiQIQGEyw9IbMKg2zwSJI7KbIzISw9OgWRSJIZhaECjWD-HLMOBbNAGmMqyBN8JuxzOFE5IJKpxIDmEqFACCVHL8C4kwh9nWEhm+P+kGPxIbmGngnhgSAuKOLeIeKUG+Ksg+G+J-3WHHLQjo0TPDJTKvlDOEAXmjPbljO5TjMID4W-OTKnKLGXPjNNwzLBO5SK0vLzKaxpI7OLLsFLN-LikrJ1IXIWIuHrKFibNLxnLbNbixKFhJDyBtEaUxPBMLJ+D7IRhI2OhpKHJaRHJsjQllJaEnIhBnLnNmKqxrL8KhVuCNNwJAulA3PKD2G3IRVAG1FEB6XEooDcXfP5APOGmPM2NPK12+Ogt3NzOHmvPvKcDvNfMfJeJOIsrfLWA-O4PW0grLIvNND-0AQALYCAK4G-l4BQD+KQUsGsAzEcGkKmE+ByPo3yWP0SElBCuiGoOBVWNCESrCqcGsCkAiw+yWG6NvzYs+F+OwEhnSpiAisSn+kgUJB0XiUMX0HiR+E718B0USXqr0ESSasAx0RxPatABxK6pqrO3lj6vlkGrWB0XMUakMSmqumuGav0B0XTHoCkBEH1CUGWtWoFI2AWr0B0SkqYHaoOtuF2pJniN9FrEzxmHoCtguprCusYHWFOp0SlL6v0DwKUAxkNlAC2FVO2uerO01Der0A+tAC+uDB+uUrBr0ABviM1Gp3at+t8Ahr0B1CRthouBNmBuMHwLBuRJDF+uNmhtAAxpNOAGxtBvBoJtADAH+u6rOwAFIKbcaqbIaGbibSbJQUS3rKb8bIaUS8b6b4jmDCEeaWa+bfqRaBgMYhbMbaTmbPqJbQB6S9AZahr4jaS+hgbebvrfrNbVbOagwFa8bdbQAQwDbZaTSgwtalA-AdaIbfrraLb1bMbmDsbIbkbzbQBWC9A4DCRDRSqogMqKqHgjjAxVgdZ4kE0g7yrn4A7d1+qY7qCQ6wQaAZgAArWKYUvoCOv0AQb6nqpOxwQxGouEU6xO0K2O--Q0EqhOsq5OllYmSBHRO+ZCCoQxVuwmcurvM6zGyAEge+WwdavQfuwetUburvHRO6swWASAdq6e2eieuuKesYe6gAUT6unrXqXtnzOwADkRA97saD696mKe7472gK6krwqWV9Vw7fAdYyBvrGkyAYx66b7T1vIL7vp36qRP6bRdj779BH7n6P9SMvBo7K6G7-6WtUrdQIhf6U6EhSBo8VB5Z4DncqtOQscYomAZB8L06RAhhworBZj30fhEGsrHliJcrPBUH0G3NQsTIxACLayLh4DthdguZgT1L-QJBOYBCi7Ygy0wSOyWpEHb6OKxHrgqoBHEG-k07M7KAJYe7bgJH-7nyd6WphK5j2i2GTEpjsEzA0G072wxLiJ-paKozzHmIa7x4xwcoS1UyxCC0cI9EaNB0G9VF9EV4a4sDzFJ8-H0CoYIyozYVgLS84U70AMvwix-Hd9R9s9p5PHgnMHyzGxaJvDI8id71YmtGWgR1FZXjn949UF1wz79B5p7sJd6cpcPsgnhxkwaIJhi9a8p4t1M9En6miUZ9pZox4md1Jw2N69gn7oLMy9Z48mBno0X9knrUG8+CKFaZn1HhNi3hLil9VHLQVm50empnzokEgsRnGn7ojmwtRMbSyn9mh8ECLtjniR7wlstkPQBn0NOsGmHmXZoMLmPYnH+mDmM0b1a1umUmTmMmJhN0M9b7FormXmAXzAs0iUG97pEXnM4Wbn0k1LMlQXPn04sXfm0X-mbmDqZtZR5QlRQtpAYQRBfqVLQ4UrIZWAqtLAaAVBg1-og08gTSMAUhotKxKReWV1eWMg3FC4mXIhWXg1oEjGZjdGeGbsUggA","body":"function evaluate(component, env) {\n    return is_literal(component)\n           ? literal_value(component)\n           : is_name(component)\n           ? lookup_symbol_value(symbol_of_name(component), env)\n           : is_application(component)\n           ? apply(evaluate(function_expression(component), env),\n                   list_of_values(arg_expressions(component), env))\n           : is_operator_combination(component)\n           ? evaluate(operator_combination_to_application(component),\n                      env)\n           : is_conditional(component)\n           ? eval_conditional(component, env)\n           : is_lambda_expression(component)\n           ? make_function(lambda_parameter_symbols(component),\n                           lambda_body(component), env)\n           : is_sequence(component)\n           ? eval_sequence(sequence_statements(component), env)\n           : is_block(component)\n           ? eval_block(component, env)\n           : is_return_statement(component)\n           ? eval_return_statement(component, env)\n           : is_function_declaration(component)\n           ? evaluate(function_decl_to_constant_decl(component), env)\n           : is_declaration(component)\n           ? eval_declaration(component, env)\n           : is_assignment(component)\n           ? eval_assignment(component, env)\n           : error(component, \"unknown syntax -- evaluate\");\n} "}]},{"tag":"TEXT","id":"#p5","child":[{"body":"\n    For clarity, \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    has been implemented as a\n    \n    case analysis using\n    conditional expressions.\n    The disadvantage of this is that our\n    function\n    handles only a few distinguishable types of \n    statements and\n    expressions, and no new ones can be defined without editing the\n    \n\tdeclaration of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":".\n      \n    In most\n    interpreter\n    implementations, dispatching on the type of\n    a component\n    is done in a data-directed style.  This allows a user to add new types of    \n    components that\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    can distinguish, without modifying the \n    \n\tdeclaration of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    itself. (See exercise ","tag":"#text"},{"tag":"REF","body":"4.3","href":"/sicpjs/4.1.2#ex-4.3"},{"body":".)\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p6","child":[{"body":"\n    The representation of names is handled by the syntax abstractions. Internally,\n    the evaluator uses strings to represent names, and we refer to such strings as\n    ","tag":"#text"},{"tag":"EM","child":[{"body":"symbols","tag":"#text"}]},{"body":". The function\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"symbol_of_name"},{"body":" used in\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":" extracts from a\n    name the symbol by which it is represented.\n  ","tag":"#text"}]},{"tag":"SUBHEADING","id":"#h5","child":[{"body":"Apply","tag":"#text"}]},{"tag":"TEXT","id":"#p7","child":[{"body":"The function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":"\n    takes two arguments, a\n    function\n    and a list of arguments  to which the\n    function\n    should be applied.  \n    The function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":"\n    classifies\n    functions\n    into two kinds: It calls \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply_primitive_function"},{"body":"\n    to apply primitives; it applies compound\n    functions\n\tby evaluating the block that makes up the body\n\tof the function.\n      \n    The environment for the evaluation of the body of a compound\n    function\n    is constructed by extending the base environment carried by the\n    function\n    to include a frame that binds the parameters of the\n    function\n    to the arguments to which the\n    function\n    is to be applied. \n    Here is the\n    \n\tdeclaration\n      \n    of ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":":\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":2,"eval":true,"prependLength":444,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKqY7bHlqdUAFMAbgEMANkQkURACjJsADnREkKAGlEkxASlABvbKDOgmIikSYlQVegH0pVeU2lLV6zftPn-5gD8oC5u0o6SMorKrGokGhS+AckAXPZOJBKs0V7xPn7JQSE0NADWRCqO9ACerABGNFIR0kSKNfWNjjQEjpnZnrHeiToaBgWFoGkOjhIqKi5kcrQkA3EJSRNmwbPz1QriLXKKApTLjiIAHiqW9PTLq0P6I3pP45vJLvQUXT2RrfQKCRMADm5yuNzudABMTWPmeBg2mymThoKhE7goNCYjhidSomSEKxhjzeyWCBxkRwUqPRcixOLYeIJZ0xMzmCyWdAeeWGpPeyVGiImyIZJAAJq5lh5iTyhYVyZFRRLCdLcgl4XLUulnFk6mKJGDriJbvcZes+f5gqwJKURI4ToSFFJdfrHCogVkrOiqrUGlJoWq4Rb+RNnfVXQ0xXszXDdGN+SL6CIAI6tcg5Qay4NbUSKpOpjRkNoptNFqoUI7ZTQBzPrDXZybaupSGhkUrc838hXhZut9sx7RxzUBEWWay2cuVhId-Jd3PhMc2EiT+RVigzweChsih1nMUiMjOjGmwOJBvdynyBS7uiOfeHxys5QMCuaO8HqQbp5D7fa+9HzkiVPYdLXnJp-w9R0B3rBNtQkE1gRINcv3PMCZgQpDp2gn9YPRFgmA3HQACJSFKEgaAAdzsGpNAkC5QAAWgYsDZHkIj9AAbmwABfXAbzsT5vm6ZoogBS4VHoDVjHGRdbFAa0VEBEFQAAXgAPhYqkgWBDURiuehOJ4vjSFOYQKSVSU6FVWtNCkkx-FkuxpgoJgiAoAALPYKVYnJxUszImiNCVFivAdv0FECim8qln2VKUmmffM03XMKYPeNJotCug4qspppDcZkxAzWFhiHLjeP4EzCTQpLCzaChWAoSSh2k-wqAIUAFGmERYgoaoqhLOqFC+RqDMMezCkc0BSH3Ah8REMUuP8bjRH9ER7A6rqnGdL4Vx66cRqa-RxotKbMuOKgmF2r4p00YaGqOjUlvMFaRDW1rCkSihCEu66HpE1pVNABtNKvOaru+G7VwOh6DKei12s66ZHIBi6IfLRrUeOj73im8G-sxv4RGe5JXveibcasJcasG9MFBuSGK2h6t7tG8KXhJgJeOWozKsEZZQHoRZlxoNz30PSDlhrEqTocqm5OmWq6bC1CJDIMgiFYIhnSvHYNDFLQQZDEhtakQ2QxDBThuFroxYg48oXNi3naVssof2lmwuO39pntwCULnQSFD9wkfQ6T8vd-E2pCkcrjP5szFV7NtCJainQC+0BI2qIHk9KRxs6-TnM5bRZ-SBoWJBFu2P0lqEFGzwz-Ez0h4LuRCFsYFSQgcISelbjCFqdVtpAMzmzr+Kls70+RxXOPRLroZDS9Hp3nfX52B-b+IxWao2N43iK4-4nvduEreqA7sVht9RoDJxix5bsK32j9VSNKIgAqC+r8-oidFfnfQyFUT7mRRu7ZC2FBQPymtaW0jgUZE32JPK8KNxIQhPDZXkB8cHmCPrzUBio26X0wndKBLwH6ZyJkDc6gIMJrlRoaDBXJUr7wtoKTmxDEJhz9KjOh28GGAIjsBHQRN4Zy3HHYImcc+amTsOZEOmCSp2XGFw5cQi+EWkUbeIRX4dAWlodo5cRMmHGkhEBLB7MDBrwCBwmST9prihEHNHeMj8D8UYAQFg7AoBwEQMgdAWAABM8c5HagrMCYEC1nC91Th5O0ETZbmCmtMd0l0vygAAGSZNAO5EQEhr5hVUipbu8THwSGBDIk+0xQi0mEZYmBDjnIVKiWKGJXxU5EVqe4KQ7Fj5VQFt08ISCilGH8PYyRuT8nXwrFQepMtgGhOqnAu0QzPxEySWYKaQcumuDqf-UAGyqkDOENMPoxVHiNMmc0yJ0Sg7YSIucvpBCTnPxtHac5N9w6bMfpMnZTyAG3ykIs2R1UNHCU+aMiZ1M8kFIULM+ZjwQXVKcGoyBwErnUxua09pKVTzETRQkZ5vET6ErfLoqFEiYXTPhRIOZChYUzLpYi2Ux1FmkvoQkRh6CzFKMuenKajLaX0oRV+Y6xyE5OScEYjJAqmlOAiTi+5+LQBES+lXb4Rj2KgAAD46obNiu5sSHmSCYFQCQzY7RasMHqg1CqWlGo6Q8-i4sAKEmJUsgWRieGNFldCuS4KeifKFaKr27LXmgG9SYnlJoWEYrlZMkNzLhUsvWOKl5kr5LvNFDdN8MrzmiJaHaGN5ifnbNiWqqEr5NW1wdiQA5BbDlFtMbGkgyKI01JdAaEtfLZSYoVva25bTlVYOImGPU3bwS8roB6k+47XTuncNkNwPr-R+qpXJF+QKfi9E9DoJN9Kw39MzfOg0hdKXJIcQez8obgLppARGlZOpwyTqNK2hQi7PRuGao3ftAkK2npbeYg5n7l3oh-TQKM7bM3TBdTK0ZABIcZG6pXlKHbizpcHa2AVnRGrDEs627v6BerZDjBIIOcanDA4bM34bdWcUDXorrrsvX83uFGCCpyCTRsJdG67LnPfG-1-7dqWE49hAAzDx6qdHHw0BzdW11LHSOTKfeqvN2HHRsL44RyFIi2FPsAz2rkbD-A6cAm6D0YHmOsNweZ0OgnLH3s9acpw4CmYezxQ0imKTB1KuNSqoi7nboUFw5mtBU730kcFTS29TmJVhOmLFfy1kZZ-vCQ64dAXR2quSyqJoxn602v1fyQ1WWnWBby-FPaa4wthKq7lN0lhgoxSE6x6m5GxNUekwLBrAUc20y82lnzZH2Ndewtx499XsopbylIAqSwirKfLaJyjknoOJacK7eqjVNm+bQ-5jph1iLbbq2C2mbsPNrgBIdca5gCgxbhaK27PXhD40ZiF1mR0caPevodMeRkT4MxqwkG7sM9sOOe+Dqb1Vuq9X6ttr798RvXIyKbJHr3UM7Q+8zdc-2Ieo96OjqHbMNuw6cHnZTvysV+cdUNoYxE85nYFnnAukHoxtfa3Ja9YqYcCyfZTiB6x0s7KZwAq76wEvk66GiDE9JcT4n9oh5DXPUOtyYP1GkcvsQK+ZHGhptrSsU8VxrmXtJMQ68ZIrqCwE+euccOrzXsu6SW-qNb3twujBIfuyhjL6GR3KNVY7s32uGRu710Vu3qGmRAid+b+XVuI+yu92YYTfvDv055Izk3cfQ+65w5j0AWuXerqpyt7442VXUajz9dGxfxRl9G6t8TKrJuA4jUmWKIeq6FM5ypjrY21sqqk1L-n2adgckdC6wrOhtKay5YV5HaedkT6oCFZY-9TPT8i+Y2fIJ59vkX2TgWxeLdh5j6HVkq-1-6+G+MTOp+sRA0f9iCltu0-TGDy-8-7vb8kjnE+tfv7E+p8i-q8LgvyEHO9t3g3mGr+IAeyGvsAdmqAc7hbuARAZsFAb9EJM7rAfppgS7AeNlDAb3k5sfvbkATbt5g9vKgdnTp0lQRvoXtvm+uYstlerFsml7DXtpEBlLBwYmlwSKtwXeiCu4q8p4t4hwH4twIEmgBJi5qhi5G5J5AoBcGWnQQ0I0PkisBocDHOBcL+HhFiOoYziUFILoaIFcAePIAbI-EWFQEVGKMzvbgQKPHsPoWMlNAAIThKuQeSeGcSgAPqZpPr8QfpWZMYQZRgqK+47LEgzT2ivIgZRHfo6DTxlTt4wZOCJFzwREECaGE6KoMEEDER5FtL8SuF2AuqMbfrXh3bl4cbXg6DV4hFKGECvJs5RgNHGDU5ySdaUZlGgCTbtGgoCzT4LwsCkLriFF9FNFdbDEj5jEnxPqIJFqeCaCe7L4VrrFRAHLPizyJA17IxPx8IbLpZlYYZiKqp7GtDVH9HGLNqHHTgXEJrUpPbJobIUHyLkAth3AkCgijCLwzH7AULeGQ7JocIrF4Y4H2hLqKDQIQlCFwrQkVSZxlI9QqB9TzxiAglrhAzRyxwdHhEIlfJ+jNREzI6PGgBpIERCKUlFpjwwm0YImroAheKeiNGcFwqcnZDBGhG8ZslUnXgIncmTKip8kiACkdGXCzxtLAnTHIQMmFr+gZHwTFrgnL4aDAgeTklALFLdyWGAl6mRAGSoR0kKCkmej6lqlNr+jfh1Aam4mRRmBpDGm6nuS2n3wAA8IQOpppo8rpoA5ITA+ECgREmINAWaJAOcc+12gsFQ8wVAC0aQREoAAA1AYTgl8GaoCe1HsAyYYFmQcumVmaZuYLmfiMCAWQoGad7LhGGaYZGSUIQCIBRKAPGaDomYgamaqpmdmQfFWfmQQIWUCvfCWcRAORWWYMOTWaOXWUGT8cUGUBUKunwkInEeYKAnoM4CUIpEiRaCfJXCsCqfaUviGPtkSd6cGRMOSLuS2KiGCYeDQACUCVMUvNOBFDOY2EIoaVMnCkWT+cEEKvWT+WkCeSmjeToKKvWU3IUNzIUIjGCWIP+ZifDrifidsSGCYfSUCsRKQA0DNKAE8vBaTKtEmA-BMJnFKUDNAVKShWRZsFNJBVKeyaKVyToGxSKVKemhMIhWYAJTSaMHuU+XYoKdVGouuUgpufaVuWYDuWIKJQeVqRMMecLN6aqRefyFeejkBbgveUpY+SpS+W+ZhUqV+S8LeYUBBUCv+UKvpTgsEEmN8KBavPadZVqJBc9uOd+LBUuZzMtIOQEMhaMGhXkucBhYqZ+T4FRYULhbaQRSQEReKCRZ6IxMxGSqFkxUFW9JRenNRVWswOld3PRWSXYpeQ4qxWyQyRxfyVxcKUyXVdKTlS9OMEJWdA+fuYxW4mAB4swGwDIVwAErwCgB0akmaqwJKEVMkZKteKQEUTTvQeVrMaQMRNcFQFNdQEVB6uMcIBtVtU4XaJtfMJ5v7AIOKR8UyvShdTKdgJnAddNXaP1UabEnyDsoygcuYIyhbBgQEDsgil9WYAir9TYuYDsnSUDbSXSkwKDe9QBr3FDYJHDYUDsmcqbAcujTHO8H9f4DshKPQPMBINUAcgTUTTnJsLjeDRWrhUDbhSGFTWYDstaB5DMHUPQP-Cze5GzYwBMIzafOuERBmVDeYGYaANUIYOpKAPRFmRTfzTsgxCLWYGLRLe-NLYxOLWYPLRWgxI7kDfRP4FLWYMxAbdrR0l-ErZ1BcDoKrVLfRJ-JraAGbYLcAJbSrZLRpPRGAHLWDUzRWgAKRu3W3i0e3q3+2O3O0RklIqQi3u1q30TR0h2+0C0Rk+ElKx3B222e2gBp3dwS3J07I+lB022h30R+lmD53w3m0+kx06ABBx122gA10V2R1ERqTF0h3x2gAaQt0F0VpqS13JAN3Z0D291V2C0+GW3q2G09053mAaF8iGQPWTVPWzVyLsmqTjBWyMo6CPXbXPWSFL1FV71HVr2hw0B1AABWthXcW9sw81dgUtENK9+9ByPOt1-NtJL9p9Hihk91x939M16mTUQMQcOyM0zi80LhOgEDLiC0n9hB1N5tkAJALirgJNddKDaDfUCDiDKdREXNjgsAkAQNhDxDuDiDzNcg3NAAolDYQzQxQ4QTsgAHISAsOW1sMsOeU4JH0vhf2bWr3AMb0qR32KRkBq1CpkDfgn1ANVoaoA7L2CP70KYaqoy33+BWwSNS087SMyOAN2jAMA57V2AT79SyMH1zUCB77AiCSLVyRmOOD4gO5OJMBSDVDVmOCX0SCSBCxmrYkKBsIWNOOxCWFrjnULU2N2Oj7CAuVrnRWgn2PyIXDynmUxXrh6wN7BMuoqk-k4LBPCNFnJ2IOZPXzZNdEX3X2UB7x4MWwFPyNvhUlMM4LoXYn9QJNrggoYkRW2MX3hAdMJAVxUyVADN3R-2krsh7DWOdkgjaVmDIUTXKM-2vIP3YwFWq6dmTNNZLMzUFFrUzPAgA65XvQLO5FeBJF7Nto-LNxFU3DazfTdy0IuqFwXXFN4Nyn6xpOgl5Mby1FpHgarNvO1NmDaSSQ-PryTF4kWV3Qf2BUbOnGSJ8J3PzY8PBB3GGN0BHH0zGj3M8NpCwNQOcxkz5UGJNkETTMkQkBkSUQ1ERp9RogZWbO7DPI8zonH0yBdz4MWMHLD3q2y2GRmMfocs6BBwYA6DcacRAA","body":"function apply(fun, args) {\n    if (is_primitive_function(fun)) {\n        return apply_primitive_function(fun, args);\n    } else if (is_compound_function(fun)) {\n        const result = evaluate(function_body(fun),\n                                extend_environment(\n                                    function_parameters(fun),\n                                    args,\n                                    function_environment(fun)));\n        return is_return_value(result)\n               ? return_value_content(result)\n               : undefined;\n    } else {\n        error(fun, \"unknown function type -- apply\");\n    }\n} "},{"body":"\n\tIn order to return a value, a JavaScript function needs to evaluate a\n\t\n\treturn statement. If a function terminates without evaluating a return\n\tstatement, the value \n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"undefined"},{"body":" is returned.\n\tTo distinguish the two cases, the evaluation of a return statement\n\twill wrap the result of evaluating its return expression into a\n\t","tag":"#text"},{"tag":"EM","child":[{"body":"return value","tag":"#text"}]},{"body":". If\n\tthe evaluation of the function body yields such a return value, the content\n\tof the return value is retrieved; otherwise the value\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"undefined"},{"body":" is returned.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-2","body":"2","href":"/sicpjs/4.1.1#footnote-2"}]},{"tag":"SUBHEADING","id":"#h6","child":[{"body":"Function\n      arguments\n    ","tag":"#text"}]},{"tag":"TEXT","id":"#p8","child":[{"body":"\n    When\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    processes a\n    function\n    application, it uses\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list_of_values"},{"body":"\n    to produce the list of arguments to which the\n    function\n    is to be applied.\n    The function\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list_of_values"},{"body":"\n    takes as an argument the\n    argument expressions of the application.\n    It evaluates each\n    argument expression\n    and returns a\n    list of the corresponding values:","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-3","body":"3","href":"/sicpjs/4.1.1#footnote-3"},{"tag":"SNIPPET","latex":false,"id":3,"eval":true,"prependLength":457,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKqY7bHlqdUAFMAbgEMANkQkURACjJsADnREkKAGlEkxASlABvbKDOgmIikSYlQVegH0pVeU2lLV6zftPn-5gD8oC5u0o6SMorKrGokGhS+AckAXPZOJBKs0V7xPn7JQSE0NADWRCqO9ACerABGNFIR0kSKNfWNjjQEjpnZnrHeiToaBgWFoGkOjhIqKi5kcrQkA3EJSRNmwbPz1QriLXKKApTLjiIAHiqW9PTLq0P6I3pP45vJLvQUXT2RrfQKCRMADm5yuNzudABMTWPmeBg2mymThoKhE7goNCYjhidSomSEKxhjzeyWCBxkRwUqPRcixOLYeIJZ0xMzmCyWdAeeWGpPeyVGiImyIZJAAJq5lh5iTyhYVyZFRRLCdLcgl4XLUulnFk6mKJGDriJbvcZes+f5gqwJKURI4ToSFFJdfrHCogVkrOiqrUGlJoWq4Rb+RNnfVXQ0xXszXDdGN+SL6CIAI6tcg5Qay4NbUSKpOpjRkNoptNFqoUI7ZTQBzPrDXZybaupSGhkUrc838hXhZut9sx7RxzUBEWWay2cuVhId-Jd3PhMc2EiT+RVigzweChsih1nMUiMjOjGmwOJBvdynyBS7uiOfeHxys5QMCuaO8HqQbp5D7fa+9HzkiVPYdLXnJp-w9R0B3rBNtQkE1gRINcv3PMCZgQpDp2gn9YPRFgmA3HQACJSFKEgaAAdzsGpNAkC5QAAWgYsDZHkIj9AAbmwABfXAbzsHYpD2AQdCBYF6EMEx-CoAhQAUaZrioVhJTEO1+OvUh9Eki1F1sUBBOqN0mCUlS1NIU4uRE-SQQkrj-G40R-REexZPkpxiVIMV7XMx0BC04wLWfL4LGNIgpAoUAAF4WKpfjHEjYTNK0BsQ02S55HFc49CoFhMM0BQUtS-k4vddxsjcAE-OSoqasKMT6Gq2qmrMOLRhyuhkL8rS7MKXS7GmPrmiiBQbjCs8auCQa-jtZ8MvXUbwpAwo0k8kQCHxEQxR6swHJEJyAomPCsQ0khiNI8iqMIHzllAChqjRRjmIM9jttAXjeP4a7hApJVJToVVa00DUDvMPrtQoJgiAoAALPYKVYnJxT+zImiNCVFivAdv0FJac3hqln2VKUmiCkssOAmD3jSfHMboIn-qaaQ3GZVSvw1LiPv4tD81LNoKFYCgGqHEGzBkuTphEWI7qqMn0wUL4BYk7SJjB1b1viLbxl2-axbcnUvhXSXpwVwX-Kk3qrCXGKr3WpgDa+Kd8pNiT2a1xykxFgIgoi237f575pqi0AUpp44cr9x312d7GXle6TXIGy2J2m69w++E2htaM2UrB330-9zORDj8xtY9833jBn6ecLRQbnzyOAWj12Jl4+yeL4r7qMWZcaCh99D0g5Ya1hRJPbB6Zq7lrHUIkMgyCIVgwqpHYNDFRrmv8EgwqkdeN7Ma0VHl7uuj7iDjyhXe9-8Seywd1cEmHx4tN-aYz8AlC50+dc38JH0Ok-LGuNGxbykFIDmHdBA3R+r2NshFhbl1AN7UACUg4wNKPFGgUYvyvSQS2RY-og70GPr3b4P8h4KASpxcYSDSDwTuIhTajBopfx+I4WhGFNpOlbNIWy4xK5-CpAlEYFwMpeTarlZCeCeGXyvhvdh9CNZC0KrI94ONwFcxYd0NhmQOFinlr6RoEkx5JzsAffR-8ooAD5QBEQAFTyKoAwsUtiiI6HaH6XhnNO5oUGnfI2+VsKCmMeOUxNo7RTRaIoUOI0TGGghCeQGvIVE1TUe3T6kDvqKjoY4vK65AkvE9kgwO0VonZMQmuQucTjSQiAok14yTzCClemU5c7jOgpxaRUtpACKagGms3UGJi+mRPAekiydgfpkK5PkgwnsWl-z9IXAqEwpmtIMT0upOgLTRNWZUy4RoTTTN6YKGRZgml8KGWrDamsPr4H4owAgLB2BQDgIgZA6AsAACYIHjPBhIYEwJNrOAcHk08OgYZ2grMCZWgyQnandDlL8oAABkyLQDQxEBIPRWMoqRWihCx8-zRlc2mKEWkGyR4wrMOPJwULAVeS-nAoiZL3BSBeu3DRrhyVLJxUYfwFy4UYqxQoCsVAKVP2Jd460tpgVhE-NNKlIU4WMuZVy1lrjhlRCoV4jJ-UMieiRQgmlhKAVAsZdhIifQRDsp1b86VdorXmL9IqsGKqrUau6dqn5hJQDdNYY63lAqrZCr0aK8VsovVjJ9dMTp5M6nBKttMOlZqQVMtjZoG1UabrpvTusw1Qa9IhpFRIMVCgi1hq-FpL1XMc17PBNUhJlKE2FsxaGktn4K2AMjSSpwqz83+GNcmhlqaLXewkG+VZ7FQAAB9p0NiTf8+lwKvhMskMZCQzY7STsMLO+dtLF0ppXRauK27JW6tALs7p-bYVWz9Vox15b22Vurd43Z00qmHNqU2o1QzH2ls7cBbqaSub2tFA7CdH5B5citTod9+z4l0BdUMlVY6IMD3PiQDVMHNWtA-TU7t3jSUugNPBhtRz40-rhQu01w6j1gpsWGPUJH62fszRo4jboPTlW9N0x+spm2hMPneno2G-3hvWEB3i7HwwGgSte6lv7W3Fv-U+rtZ67VhJ1DJvD9xSqegqjoShAmQipuZRx0jrGdB6e43bQzmDqgEfPdME9kGMOGoAJD8oHUM6jS7zX0aIi59DgE2PeKCwBX+AbgLGZYZYAgcCMAvvPeFqDy5rNejtvJpVVtYtrTgZ8pLvyUsYYwVgwN3nlUgscHFuBABmQrPrwuPhoGB18pCPxZbBqB1D7XguOmUVdXV-cItnCi5sgboHGOugszU5ZzViuAU42VDLfG6wDf8At3+cm1PAcI04XxFZ74BOi+XQdB7aOgsScRA7kdQvnsGjNxtjwRZgzE5W9T0b3J02RgDb9Ba9Umr8yOgLhMftNEe3QKdu7+S+cPZdkexFQcqiaH4tcd3flI+JkZTaVAMYZj+zevSuX4vYUS+o7xmOGZgdlvD57p3kNVZq9hAr5Pz2U5RjMcK6IWb47pwUV1jO8vYXqx9m6E9ZZFnlv7KlZ2aPLqjv7YiN9rUNZusrw2a5G7S+MOYfninhUVpNpJrNwg84a+Nv7Ix9PBVKejqz35ddzfVil4rGXQzDeW9V8ICWUtDLK5d6bF7PmMjbwD54k3APnQRyOwr13QeqMh9Acpz80dHO-OmGgzrwfAdw6ZWg9HPq0GlejCd-76KlMAbqV70JMrM+o-WDF0z+e3GHf8YkUX3uURogxPSXE+J368s87ririanC0KYIZGkPfsR9+ZORpt0P3gZ-7xPro3e6Qz8ZP3qCwF7efe0UCSf6-MSb-qNvp7-GjBD7MGX2HF2mXj6P7SE-DIz9z8w9XpsK+n-T9f0yAfJ21+wcI+ekd+8uee3+a+z+veW+7+BeN0U+G+CyjQWelWBsTO9GZOHKYWacUB7g4oqBOWguJO9GLO2B56SYhMeB462KpeIBdgxOdWaePqoGgkuO78rULGNSokIIC8CQOmUISGaB64REbBGMywri62nBBy3B1kwIfBb4EODAzBCBx+MBb+i2rIYhABFG1CUIEUiBJ+Qchh9IV6WMr0xqj+1BL+s+OhlKqErB7I7BjooGjqJhTA9SDS-gjKZuiBBBXav4jh8wzh9wrhBq7hnhXhZgPhuBfhtB42UREwlBdM1B-hgGKhnebIwR4h8+fOhOAOQ64BFq2hhI8BpuncAhX6eRCmNuBuqmgGe+2aIIlRq2Pg8ewaFeT6lelKxueAYA9yzAbAHAry3AHyaAtW3qYutKkMMMewFwQho+GCjQmKKw8xwB7wwQFwv4R0BEFwxEDQyx46ogVwB48ga8IURYVAqkYoZRAOBAPCcxkk2WekAAhODDMbDAoPMRxG9JMcIKBupOlgZsgvZsDJRkQSukRB5JlPxBqkCeiELEIkOI0ZkdCV5OpAQAsaAfunLj4Yjl4J5N5LqrcYNuMktvpgideE8QLugXlgQDoGTr8RHqSVtvZlSTrjSd8DVvSaACzkyVzK1NlBItOJiRyQzrSfFjySLvyVKpphEsNLNA3uCUTqZvKa0BqoqT4CiQDmqYoAqsZmAYyv0jYrqSSbqaKHNAoPqcqXYG9gqhkRMuQC2HcCQKCOIh1NOEEnymDBWk0jKclrgY8gal6c8baUpn6R9EggSpLCoNLO6bkkHCAmAn8TXmpMtk6oYrBpElbqGaAAigRLxlmVELZP6UVstsgf6NeMttSfrnokGdkJxKWY1uWdNJVNWWKXChWvWSII2baj6ulKvFlGIO1Lkhmf6EWYifBHaF6WXlIBoMCDDGOUYniswvOYuZEBJKhPmQoACemYWZqi7MglOUOUAmkHOa6YubxoYAADwhBrnQxWk8JALkhMD4QKBESYg0CgDWgkDVByEKGCy+oVDBGbRpBESgAADU6xTUXwxkrpMkewV5kFNixEyF625gsF+IwICFj5-oz8uEr5x0H5JQhAIgFE-5muQFThoFNiaFG8mF8FBAiF6yRiUFGq4FUF6FZgDF2FTFuFSsHeDBJQ5QlQfqKc3SYJ4wXMowzgJQh8M5EwXMRC46S5E5iqKs2eSZS5QCEw5IegslqI+wTpNALpbpQpHp+UOMXFjY3SuK0URaV51lwQRaG5Oly0vq3cye2l4KT6rlVCLcFousowdlt0GK5wvuQ5I5a46lhQOxY5Z0JADQnkoA7q-lhQpczkCCEwSC3ZQcZu3ZRlBgxcyQYMylKw3ZFZbZno34FVrZVZ1VaVyQrcJcZeMlLYhl5yfZ2aGEFZSyElmqklG23ibVclhVMVLU3iZVqlB541AQxqWljlG8elYgBl8lxlplkVwpllLwblWotlK55ewqi1zUwQSY3wLl0imqu1I4HlKlhuLF34FaflxVb00FAQQVegIV0ZEV8Z0Vnsh0hFBZ6yCVSV4oKVnoj0+kGEaOjVAQGV-1hQOVy2eVgZ6Z5yIYpVnlFVvG9VDZOgtV2ZuNPZsNbcpN+RcYq1Y1oydyncDyTywxXA7yvAKAKZ8Kxkyk1AqkRJ4yJ0WJBR524BVkREikHNVxKugleZ7NpkjgSk8wbeHBmkHZHRdRpaXUPxkZ+hktJknNZkuqTCJmK6fIKqIaGq5gIaqUkR3hpmYaptZgYaFtpyKq+ZtteZJaTADtRtpmX8LtX8HthQKq0wSZGqgd287wlt5gKqEo9A8wEg1QGqUdMdf5mw4d0RpmOxttOxIYKdBtIh1oMMMwdQ9Aried0MBdjAEw2dKqEFLt5gXxOgDmVioA9EUFSdldpmDENdZgddoADdkU1i9EzErdjt7dj+tt9E-gfd5gzE49bdkJLiOgyQ3dvd-doAtiPdZgs9IhwAndckexPdhgk99EYAQ9ntkJAApDvUvQfSvWfevaAJve+SuTXVfY3fRAdQ5sPZCS8Xis-XvcvU3aAN-dFB-afSIdeZfX-dfQA7eWYCA-7aZteZFJ3S-YfaAIg7Aw-URJYhA-XVA-RNYhg5-SIZYkgwvf4CgyvSQ4Q6A++S8TvQAxPQQ4A+YPMXyFQkgiLdLXFLxlFOMGYiGlZlLTrdzYSLwhw0I2LSI2cDQHUAAFanFMJ8OzAnSN1O0SOqQapvZdTZ1a2i1c33JULYDiPa2SM9b62MoqpXIawapWObQ6MNIqqQAkDqyuBx0L1OMuN3T2PJIqol2OCwCQC21+MBPeMqK+NyCl0ACiLtfjkToTsiKqAAchIIkzvck4k9dU1Ow5rZw8Iz1pVbw-4GYmQI3UWmQN+Lk6Y-oeOqbFxMY3ozNNU2+K2YU+YMU6U50aWuUxU+o40y+DU7wsyQZEZCY-o53CdDwcCF-HzfpOyIZPiNovuEwEJFhY4LIxIJIEQsZLGXNqlJU1zbLXOWuArSQN+GJNMxLWdRUJtRZeuDMwOZlL9dOCvAQfs7rWSYWdZc1G861jU5VfE81C83oj83FDI-I5QEookZsD8-k62QC01N9bGYZE81qWklGWFVMzI+ECixFNFFc5UDiwoIY5ygbFonVfskLApeTWYmJI3aUiCBqMIioOHkY5rawIZFivTMuEoUHKVEmO+RgMhZ8hxOypor8ITYyny4oERBgCK9+OyzMGKFy5UVZkCPy0RAAOxyvwuhV2iYt1DYvmW5KcRAA","body":"function list_of_values(exps, env) {\n    return map(arg => evaluate(arg, env), exps);\n} "}]},{"tag":"SUBHEADING","id":"#h7","child":[{"body":"\n      Conditionals\n    ","tag":"#text"}]},{"tag":"TEXT","id":"#p9","child":[{"body":"The function\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_conditional"},{"body":"\n    evaluates the predicate part of \n    a conditional component\n    in the given environment.  If the result is true, \n    \n\tthe consequent is evaluated, otherwise the alternative is evaluated:\n      ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":4,"eval":true,"prependLength":455,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKqY7bHlqdUAFMAbgEMANkQkURACjJsADnREkKAGlEkxASlABvbKDOgmIikSYlQVegH0pVeU2lLV6zftPn-5gD8oC5u0o6SMorKrGokGhS+AckAXPZOJBKs0V7xPn7JQSE0NADWRCqO9ACerABGNFIR0kSKNfWNjjQEjpnZnrHeiToaBgWFoGkOjhIqKi5kcrQkA3EJSRNmwbPz1QriLXKKApTLjiIAHiqW9PTLq0P6I3pP45vJLvQUXT2RrfQKCRMADm5yuNzudABMTWPmeBg2mymThoKhE7goNCYjhidSomSEKxhjzeyWCBxkRwUqPRcixOLYeIJZ0xMzmCyWdAeeWGpPeyVGiImyIZJAAJq5lh5iTyhYVyZFRRLCdLcgl4XLUulnFk6mKJGDriJbvcZes+f5gqwJKURI4ToSFFJdfrHCogVkrOiqrUGlJoWq4Rb+RNnfVXQ0xXszXDdGN+SL6CIAI6tcg5Qay4NbUSKpOpjRkNoptNFqoUI7ZTQBzPrDXZybaupSGhkUrc838hXhZut9sx7RxzUBEWWay2cuVhId-Jd3PhMc2EiT+RVigzweChsih1nMUiMjOjGmwOJBvdynyBS7uiOfeHxys5QMCuaO8HqQbp5D7fa+9HzkiVPYdLXnJp-w9R0B3rBNtQkE1gRINcv3PMCZgQpDp2gn9YPRFgmA3HQACJSFKEgaAAdzsGpNAkC5QAAWgYsDZHkIj9AAbmwABfXAbzsHYpD2AQdCBYF6EMEx-CoAhQAUaZrioVhJTEO1+OvUh9Eki1F1sUBBOqN0mCUlS1NIU4uRE-SQQkrj-G40R-REexZPkpxiVIMV7XMx0BC04wLWfL4LGNIgpAoUAAF4WKpfjHEjYTNK0BsQ02S55HFc49CoFhMM0BQUtS-k4vddxsjcAE-OSoqasKMT6Gq2qmrMOLRhyuhkL8rS7MKXS7GmPrmiiBQbjCs8auCQa-jtZ8MvXUbwpAwo0k8kQCHxEQxR6swHJEJyAomPCsQ0khiNI8iqMIHzllAChqjRRjmIM9jttAXjeP4a7hE+b5uiG-59iuBqhwO8w+tAa0VEBEEooAPhiq8xI1EYgc4ni+K+uwKSqEtCzaChWAoYHBVBswZLk6YRFiO6cYLdMFC+QmJO0iZwdW9b4i28Zdv28m3J1L4Vyp6dGaJ-ypN6qwlwR44csFr4p3y0WJI1V6eaTUmAiCiL1qYeWCe+aaotAFKKVY2W9e+BXVxFg2VaHV7pNcgapYnabrzlq2Df+kRxZS8Hdf1wmfcd8x1eciX3nB7H81LRQbi9xWiYZu3v0FUOdu59HPsEG76EWZcaCIb4IOPKEv018HpljvGULnCQyDIIhWDCqkdg0MVGua-wSDCqQu+7sxIYZguumL99D0g5YGsKmqa-TIW1xrWFEi039plLwC6-eYIfoUTfCR9DpPwHNfYN7qQpC4j7+LQ3s20IkHI9AbXQAS4379KeKaCjL9Xtflsix-TG3zhIQu48D7TwUAlNG-hX6kHgncRCm1GDRR+j8RwCCMKbSdK2aQtlxjRz+FSBKKMMpeTarlZCgD8ED0HvQrBSDObA1nvQ94go0a8Vvugv6jCqDILFAzX0jQJKV1dnYYe7Q-Rw1AERAAVHwgRciiI6CkSIzhGNc7CGxoNa2wt8rYRJs-cG1pbSOCmi0RQZsqSDUuEaE0XJT50LYfyDh19NEWSxoqRB-C8rrkMS8TWr8jbRWsYjDCa4faGghCeWsQYXH+HTuMHxiEj5+h9oCCJCQ0mNC-DoaaqtCHiNANNdxOdPFoUgY408GpNYpOXGopo7sLRVIacIk+wEdAWjCYoVpUS7ExOqXE4YQ5nFmCSf4Nm4o1obS5h9fA-FGAEBYOwKAcBEDIHQFgAATB4wk2oKzAmBJtZwDh-E1NugACztIclmYNikKQkDlCuAAyF5oBrkSEEafKKkVooUGuY+CQwIym32mKEWkHThl3LMFXJwhzjleT3thIiEL3BSBeujbhrhIUZJ+UYfwRTxx2E+YIisVAoUr26tnW+pi7Roo8NNGFIViUhDOQoVFOL0UqJKZYjR5T9nTD6BmKlYjWXTARSc5FFyiLCsxTfTGEMbR2mFUI4+zLwZ71lZ6HljT+W30aRg1V+KiXS1JQocllLHj6sVdMepyETWTIefC4FiLTlfEfkRe1CR5UCput6t8jSK7GOKeay1Cgw1PKtbKLSGjb4BsNpY6JxpIRAWhWKs1IgvkWqjTmilX5qUKq0f1JwrTg2mr0hK11Ur2Uou1mAkuH4p50HYqAAAPm2hsVajk1o9SiyQxkJDNjtK01tHau0up7Ui2tMq4qjptcW0AfSg2Ovuayw1f1VWRvzafQtfrhB9OmsmhxabRUhtZduz84bd0LoqXS0UCs3xluFfkpNAyU3LA1cUrV9an1NrLiQHlL7eVRGPam29gqnBhj1Aad9J7y1OvFZOt10rhnEWg66ODqbfXcJdAaUqno3A5P9Ahtd0tJHtKNZ6HQl6C1xsVRhg0CVSOwtDVmslubr3AT3fuiRyqdThlg+CD9XICPlXRMDGBGa9JasY2B5YPKxNej1joGBoLbVODnf+re+KACQhLEPS27ShmdaHZFacngBnDiqLMAUPsa4C0m7DoMsAQR+GB6OLts825cSmKosZZdLFza1H7bM8xU7zAHv6-1Xax1lwW3PYQAMzhf2bZx8NAH2vkbYeALJj+O-py3Z+4rDIuAV6J6PJrD71yawyV7uZXD5+Yk1VhrmMJ7FdvMxm96nF0u2JYvLCjnI5wqBVO915yzNEV0RWG2mhrOLtscJ+DsXwa0d3b1ip0xnzKilNG9YTmDnVunX2mVO3JR0HCHVlthhx38mM72ybK9iLnZVE0PRa4FsVNe3toym0qCLCvKt79ZzzEhewh59xt8fuXaaEFXGBjhsFE1aD1zoXUs3Rh5kJo0g3DMlUixlHgs0fJYgzdauCOiwp0JjC0bkqTvrlFsReeRYvv7JZ3aD7CQASi0kuYZHbHs3ht5xj4QgdE5zcZ6nUma32PU7FlDxVCdBvVnl6IkbxThep0V31pwVMVA0w52r2nzreh92NzrrbUH4IS-0VLpmJukNm8vnmz8yseNgqcJ-PLpv6cTc9Z-NnN1P7RejEjwzel1vcct-s+93uuc+EO1qwPqjZt27J8IaYNIMT0lxPiHTw39P84jyWzBmQmCGWz3SbEefmRDNFXd940wmRAkr2iHPNfGT56gsBGP5OnAIIr10dv1eGT1G77Es9RezAVtL371Dz3ZGD7b7STEnfx918A6L0vLeh9V7X2PlvPf01GGnybEvR3xsL6GMRXfK+O+H4nzdvvwh9-0hXeHsjMnUfg4uZDrFNmnsw+tI4oPu8WP+iWFyYWL+1EB4dAXkVeoBsWgW3+xOv+ZmKWm2se-GgkAOW8rUy2qaokIIzc2S12DAX64BHqXq7IeBhIKirCV0xa8mdAxBwIpBb45BBCRaFSb+6+R+LImWuBgOk+jwQSUIEUfBxsfBxGf8s+2oy+wBD+teBe0KqE96whW896qqfBrwCSHw7K4uShYC3y3GS0ZgaQGhtBIhXI2hlWuhYyLie8RhiBph0Kjh+hZgSYO2xhSBZhWB-ebI8wdBohsoMuvux2-uKKmh9B2+TBniLBp6YhGuF6cuXG0KcRYkiRy8yRAuqRQunGuaPW2cCymMSyKyHA6y3AWyaASWeygRFATAxclyewFwlBRmXuJQUgWaKwbR5+O8oAFwv4R0BEFwt+XRPRogVwB48gncIURYVAqkYoQememm+CrRfO4MAAhAck0QChsRxG9PUcIPeupM1ipm-D-NULUuekFuykRB5JlPxIph6OJhcaQg7AAbrmPmoJ5N5MWteO0ZWsho9teC9l4H8c8XESVK8cppVJsSDmgW5gQDoJDkcbxvEYfMxgQAiVQd8GjiiaANAeibfK1NlFQtODicYCgc5hAWCaAJgSSYqvehYsNLNAdrcageuNNuIj7DyuyT4DAdqKya0AoEyodg9gzmKZYsRCKSICsXYHKaKHNNKVEECSSmkbmkyhnljOQC2HcCQKCJQh1NOEYjSbdLmunEyV5kAcspVmabLtmlaR9K-ACnaPrjTMaX4sbBfFfMcXxmYnaf0I0sDNNOruae6M8iGa+lELZNaRFmVJzu0pVImbiZmtmkGb7IcTwWlomT7CmZ6GmXpOGpmZxPGfsulB3FlGIO1H4mqn6KGbQm-PBO6YEpyc5hoMCACvWeor8mgp2d2ZEBJKhJGQRKcYmT2f6DGfbHUC2dWeYY2N0Yad2SGYYAADwhADmXKqnDlzgjEcqYg0BKokDVDWTsFLygD0AVDBGbRpBESgAADU-RTUXwxkhpMkewq5j5sixE35jB5gr5+IwIH5O5Z87waQ+5REh5hAIgFEZ5HBRMl515Lgt5sif53cgF75BAn5yZhgT5PK95T5-5XhjRQFIFQ5HuDGJQ5QlQhq7sjSNx4wt8owzgJQUMRiFoBqBck5jZ-ozKrMpuvpPFC5Ew5IegrFqI+wepNABpRp5JJp+UHCxFjYjSfZHycuq5ylwQ5qFFylaQoCKwwuuFOg4aFFsChQvEEwfMowalbp5w1MhkXpa4-FhQ+5DFS+JADQnkoAcq5lyQ4cmsEwr8mZxsRhmZUlBgGcAQ4MBl14eZIZcVhZOgmZ+ZiV2Q1KEwllYc8hLFLYklSSOZ-qGExGGS7lkQjF-gzF4leV7FbZnFiqsV0ZIG6u-sgl5uml3cYlYgEltVh4MlQF1ZtZyESl3c+l7Sal5qHVzUwQSY3wOlTZkQIly0l53FRlx89spl+CGVFlz5AQ1legtlgKHpjl8lfiLlAoTA+Ek5Z0nlRc4oPlnoj0+kWS82flAQAVz8QVEhzAj10UYVE5Ey-IMV3FKVCVpZyVeZYZaVvsb19kWcF+uVbFEV-KpRxa5RbAlRXAmyvAKA-p2oikyk1Aqk-xniJ06pl+JmHqVkREBNpkvqGJtNRNdoSk8wdu+Bmk1JjpHG+aXU2ZuAr8jNixZkaNxse8fIWqpKPK5gpKqUehBh1BlqUtZglqstYyWqo5StoAo5qt4t9xP0mtP0OthQWqQqfcPKptl87wctAQWqEo9A8wEg1QPKdtDtp5mw1t-gWqIxStIxIYHt5gWq1oAKMwdQ9AKiQdlyIdjAEw-tZgWqD5mt5gCgYxoA1QhgkU8M9ET5btsdbK1BDEidZgydOgadMi9EzEOdat9xDEy+St9E-gGd5gzE9dudWqyiOgyQxdqd6dmdoAciqdZgrd9xwAhdckKdpdjd9EYAldut1BAApKPV3RPb3XPQPaAEPdQX8pFInUvT3YMWpWnVXdQVsX8jvePXvfRCfdFIfbPdyWuYvefWXaABuWYDfcbfcWudvR3f4LvU-Z-a-RvdybDA-SXRfaAPDAA0fUA1-Z3Y-ZPeA9FN3VAxylsaPfvQ3RA6ADsWYG0XyGjALcZITULSTYfCGVFOMMPKSjoILcTYsvg99TQ8LQkTQHUAAFYzGoIUOzAnQyLq2EN000aak82aRaSOGMMkPTxozYAEMmRM1ZYNqoJ53rharsyzI8qqOcy52eFaqQAkAcyuBO0d26P6N3RaP6GB1yCR2wCQBK0R2ODWNmMJIWPB0ACimtdjLjjjTh9xAAchID46PX4z40td3PQy+Frfw3I4VsRpw-4MPGQDIuamQN+OI4VgQjI0Q8TdE2GeQ3E9wwk43etqIxE7I8Q2k1I-GuyIZOI+pFZGJD9OTQZI4PiGXvuEwEJANawxIJIPnMZAbgVDVOIyzd0WuOzSQN+PU2cjqZeVLJUE5dOOTZWZlPM-lO3KATU+1tGcpc1KkxIQ2jE1493Gs4Ihs8wSw+w5QCwp4fyLsy+Ps2GYc81HZcdYNRSYKdnK6YCsCC2LOU0CsxFNFLNRUK8wpeuBU4qtjFjqqGZhxRfhKnsS0fsMQkDvARdtjn9hKIDiKo8BqAuReObJ4OKGi+EPDnTE9jizhOBTLIS7trDjMOFOiPjti7KIUi6d9awIZD4QMsbKVEmAeU0c5MEBgI2NshxJipC6i29goBy0qNEiZUdQ5SC2dRxEAA","body":"function eval_conditional(component, env) {\n    return is_truthy(evaluate(conditional_predicate(component), env))\n           ? evaluate(conditional_consequent(component), env)\n           : evaluate(conditional_alternative(component), env);\n} "},{"body":"\n\tNote that the evaluator does not need to distinguish between\n\tconditional expressions and conditional statements.\n      ","tag":"#text"}]},{"tag":"TEXT","id":"#p10","child":[{"body":"\n    The use of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"is_truthy"},{"body":"\n    in \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_conditional"},{"body":"\n    highlights the issue of the connection between an implemented language and\n    an implementation language.  The \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"conditional_predicate"},{"body":"\n    is evaluated in the language being implemented and thus yields a value in\n    that language.  The interpreter predicate \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"is_truthy"},{"body":" \n    translates that value into a value that can be tested by the\n    conditional expression\n    in the implementation language: The metacircular representation of truth\n    might not be the same as that of the underlying \n    JavaScript.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-4","body":"4","href":"/sicpjs/4.1.1#footnote-4"}]},{"tag":"SUBHEADING","id":"#h8","child":[{"body":"    \n\tSequences\n    ","tag":"#text"}]},{"tag":"TEXT","id":"#p11","child":[{"body":"\n\tThe function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_sequence"},{"body":"\n\tis used by ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n\tto evaluate a sequence of statements at the top level or in a block.\n\tIt takes as arguments a sequence of statements and an\n\tenvironment, and evaluates the statements in the order in which they\n\toccur. The value returned is the value of the final statement, except\n\tthat if the evaluation of any statement in the sequence yields\n\ta return value, that value is returned and the subsequent statements are\n\tignored.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-5","body":"5","href":"/sicpjs/4.1.1#footnote-5"},{"tag":"SNIPPET","latex":false,"id":5,"eval":true,"prependLength":445,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKqY7bHlqdUAFMAbgEMANkQkURACjJsADnREkKAGlEkxASlABvbKDOgmIikSYlQVegH0pVeU2lLV6zftPn-5gD8oC5u0o6SMorKrGokGhS+AckAXPZOJBKs0V7xPn7JQSE0NADWRCqO9ACerABGNFIR0kSKNfWNjjQEjpnZnrHeiToaBgWFoGkOjhIqKi5kcrQkA3EJSRNmwbPz1QriLXKKApTLjiIAHiqW9PTLq0P6I3pP45vJLvQUXT2RrfQKCRMADm5yuNzudABMTWPmeBg2mymThoKhE7goNCYjhidSomSEKxhjzeyWCBxkRwUqPRcixOLYeIJZ0xMzmCyWdAeeWGpPeyVGiImyIZJAAJq5lh5iTyhYVyZFRRLCdLcgl4XLUulnFk6mKJGDriJbvcZes+f5gqwJKURI4ToSFFJdfrHCogVkrOiqrUGlJoWq4Rb+RNnfVXQ0xXszXDdGN+SL6CIAI6tcg5Qay4NbUSKpOpjRkNoptNFqoUI7ZTQBzPrDXZybaupSGhkUrc838hXhZut9sx7RxzUBEWWay2cuVhId-Jd3PhMc2EiT+RVigzweChsih1nMUiMjOjGmwOJBvdynyBS7uiOfeHxys5QMCuaO8HqQbp5D7fa+9HzkiVPYdLXnJp-w9R0B3rBNtQkE1gRINcv3PMCZgQpDp2gn9YPRFgmA3HQACJSFKEgaAAdzsGpNAkC5QAAWgYsDZHkIj9AAbmwABfXAbzsHYpD2AQdCBYF6EMEx-CoAhQAUaZrioVhJTEO1+OvUh9Eki1F1sUBBOqN0mCUlS1NIU4uRE-SQQkrj-G40R-REexZPkpxiVIMV7XMx0BC04wLWfL4LGNIgpAoUAAF4WKpfjHEjYTNK0BsQ02S55HFc49CoFhMM0BQUtS-k4vddxsjcAE-OSoqasKMT6Gq2qmrMOLRhyuhkL8rS7MKXS7GmPrmiiBQbjCs8auCQa-jtZ8MvXUbwpAwo0k8kQCHxEQxR6swHJEJyAomPCsQ0khiNI8iqMIHzllAChqjRRjmIM9jttAXjeP4a7hE+b5uiG-59iuBqhwO8w+tAa0VEBEEooAPhiq8xI1EYgc4ni+K+uwKSVSU6FVWtNA1UGzHB6YKCYIgKAACz2ClWJycVccyJojQlRYrwHb9BSWnM6apZ9lSlJogpLLDgJg940j5jm6EFvGmmkNxmVUr8NS4j7+NAehFmXGhKffQ9IOWGtYUSYmQvHfqnHzUsM1NnnQG2MgyCIVgwqpHYNDFRrmv8EgwqkH3fbMSGFG1iRdf1iDjyhIPg-8G3CztL4p2rL8tN-aZo8AlC5x+hRs8JH0Ok-TmHbSf2pCkdWMcEG7sd7NtCJBqTzCCiKEqi0BG9KeKaCjL9Xvb4pFn9Lvw8j75C+NhQErR-xh9IeC7kQzbGGin6fkcJeMM2p1W2kWzxnB6XFASlGMq8trcuQltR4awr4-5HeV-iMVgcfp+0peNHeM1ze-ovyoKvMUYdfSNAkubcGod2h+jhqAIiAAqIBIDEFER0LAiBv9a4WSxoqQaKdVxiwJpuF4UCrBLghjaO0U0WiKFPiNChE5LhGhNFyTmccv7vG5jXT6ddhDY2XsAvK65sKCnNsPaaXcGFCMQmuf6doWEQhPCQ14XDzCClerI5cmCmjTUBBheRujVagGmmrY+TC7DTV4ZrbG092GniJq3Mw2ji5+gUQVCY9idHgNLuLUAFoGHeIUYaZRDjVHI0CS8V64NVrrTfrw-A-FGAEBYOwKAcBEDIHQFgAATDgwk2oKzAmBJtZwDhRGONulTO0xTtL+FJk4d0OUvygAAGRtNADUiQoDOZRUitFamtSJDAhsZjbUoRaR+NUeQy2RSRmlK8vnbCRFJnuCkC9dG-9XBTI8X0ow-gLFzO6aAisVBpn22wXw3BVDbTlLCJ+aa9SwaWJCBUhQqydnrPQaYuhVzNbTD6HbR4szKFkwWWU5ZVSiJAs2RrcZ1o7lArASXZ5JNXn5xhZ6H5uj-njN0VvZF+yjmUJOQoM5FzHh4v4VbdCr9kLEoaa88FJTIXvJWdotccLrmFM5QkNxjRWnOItqSkQPTyUSHOQoMlFL07dS2eMvlb5pqhONJCICMzhXgxlZKz8sqy7UpuVnD8Rtwn21BXpFlizylfGbkRduEcp4mpjiQdioAAA+7qGxWrZbalZkhjISGbHabxbrPXeqcMU61UKSHETiqGw1hTgnGMZS8uZBK-rIp1VKg1NdNbBJVUotVKjzVatedmvVuq5VjJpbcmaUJXxOsNi6hQQKdCFvBMWugaKRV6UxQ6t8oadBtt+VEVVbCSCJputMMMeoDRFonUKkllrI0QqWey6Fs7XQLvVdy-+LoDSlU9G4AV-ol1MrmTA3xhLPQ6ArdWhVtat0GgSuetNorxWyv1cBeV8La2IrtM+8d6qFBHvKuiYGc8LV2ExUBndywflga9EwSD-dqhTuENMeNzqc77IAJCHIvWC1drL11+uhdh5tgE93jMowBIuRLgLQbeV8RwlgCDNwwNgzWdHTXLiQxVN96K5mb3Y83XJ3HaOYwNvRs4r7U3CcoaJtazcADMkna10cfDQUUKdB0fiE72uwAHdONpk3xzxRVeMut6J6VWn8TNwc7Yuz+-hrOATdB6cDKH7O+3c0XeTP6MO0oIRWIh+UFONMfGum1lTY0INC6nCgNHa2DXg2akFzjtVitOVWsuNajXuVlkzfGpbl20qjb6uLptiICxK00dLrrDDhv5D6sj1Whi1eKyqJohCRBco0zcurPWjKbSoOzYFspibg2Uxx7CXG83jOG0LXTosItMayxiipbGVPYQk4t2ty35YzHCuiZWk31jTa26xsT2F1MFcKdMRO6Yw4UFYGbTbcy2uxde+94iz2iwpZuQD5OYX+sJABF8d7klzAFGy5+qtUPEiDcKetFD3w+vISR5Az7H7QHY5RzdG4GOwdrkh29igOO4evNlQTg7hXzixDulUNbRZfuU7RVFyun46ePoZ86VjmPpwE6u19jIAcJVSoJ8Fpsd9+wbfK-M0jP2Vk9yB4UnufcB4KaM10nLkvKWykJ8IEzPdXtJZ7TN95RE1cYNJ+sB706URogxPSXE+JcMbYI7DojK7t6ZCYIZGkrvsTu+ZBlqbLX3jTCZECIPLu6Sh8ZB7qCwF6ePacEvQPXQE+YiT-UFPJbMve7MIr77MaasIKz-H2keeGQF-D019PTv4oe+z8HxP9fY+p81SXgJvuKsxYr51hBsf2+57d8nxv6ubod7rymhXA+WPfFu1UhbfPUc5VYx38Uhmrc3d21U-bG+bpJgFjn2ku+df75X4f+L930Y8puiZwS42c6tWc+q0SIJXb8sa1TpfTFV-dmBDThd4D-VhL-ayYEX-N8f-GXOfSfBvDzVkYAz3TVcYYeRApgLubA09QeMvTPAPGvEPLvQvCPTsd4K0ahNkeYN-R0EzZFbAtRdRfwfONHbfBPK-ILX8F-dkeg+4RguzZgsAr+dgrfX6Lg3pcWVzX2M-WWC-dwbg1RX9ApFvNAnvMrd9P3SrdrO1DQhDY3OwCAsJDVLQxTPSe9fLE-YQMSYDGeSLctfXL9PLILRJMAZJZgNgDgTJbgHJNAVTNQzDSNCmamPYC4S3ZlJwBoRoMVFYCI-vKg0AC4X8I6AiC4YiGIqQOI0QK4A8eQb2EKIsKgVSMUGfYI+0Q+cImHcGAAQiKVCJpgUAiI4jeiCOMxoPUgEwgx0HPhbkV37S8E8m8hpUQy82Q1QyjHMT-nGWmA8kynUgIEiLF2i2V3YK60GGGP4nKOMOk26J8yWOMF11m2vB0AWzaKf2EDilfUOIORvx2w4wIB0H2wuJ42k2vg6mnFuOOO2zEyeNAHu1eIRRoNoWGlmkuzLRE2t1BNaB+XBJ8GbwqJhMUCeWY3L3eTMQS0sQUR2KMxCXhPXFRMhLxwNwUCeRl0LBbDuBIFBA+JEX2DITuJpyrU0SBM0wkPtDKnoUZN1zJVZI+mHiGUZxUGZzpLXC7m5y4kuI6LuVSTs10WBmmhx112aQIgVPbToVsjZJuTlOyFPUqi5JqKcPFV1JEE4m1NRy5IUQNM9CNLmVlVNPNL-RuXSi9iyjEHanpPVNHUg3gkUUZIGI0GBGphRT9EgQGQ3iDJDMiAklQlVIUBM1NNDIgQ1P9G-DqD9PdPLhCCjKpmTLTNAAAB4cyaTozD4HZyQmB8IPlMQaAqESBqhoDYDKctYKg6DNo0giJQAABqRIpqL4YyGkmSPYBUwwXsn5Ls3s2QswAc-EYEYcsk8s7MtImskoQgEQCiJssnVs-gjshBHsvs2qWcocggEc3xSBcc4iA86crWcmOchcmM1Q6U4oMoCoU9DxXRJxcYWxPQZwEoKGcRYVNzfFHWfMxU8s82CYLnCXUcm88kX8lsVEBkw8Ggak2k7KG+acbmG8tIXRfpaKMlWC32YIMlR8nCrWUC2nc878WVR8+eQoXiCYGSOSUYfC6pRRJnQyMUiElKFcz8qvEgBoTyUAWFei5IXafaICwoYeU0ruDg74JMzRFKcGCea8K0hUtS20nQU060zS7IeVCYRi8wIyiwrGBC-8hkgwR3WwjCd8-RfiyIL84C2tUYP8pCwCi0TWVS70x8yC3qKI3oGC6iuCuMNygC8gKkuc90z05CbC32XC3xNiwi4K4irWKwRwUiw+VMh2YUCiiOUk0cnQWipc16eyQ86SVyViiM9i4U0UjCz4nwPygUKs46fikiQSvWcUESz0R6fSQxBITZQyxyJMJqgIGSrkuSjkxS6JZS15VSnSjSx07Sq0pUvSs0sSgIEytopfVyxC8Kqyx-JJTGFJNJHwrgbJXgFAdo7URSZSagVSEY3BE6ZY4jVY6Nd5KyIiW60yblZ876+6u0JSeYcHWiXyTSI4+HXLKVLqVogUhtUAf6kosyGldeZfSzAITFE5H5cwE5VKFgjG63ClbGswClPGsAzFVU4mhGyVHAkMfGtg63H6Kmn6MmvkTFQFAOH5Dmqud4em8wTFCUegeYCQaoH5QW4WxszYPmswTFNI4mtIum8m63a0amGYOoegdBFWqmNWxgCYaWtGoibsqm8wZonQdDeBeiXsyW-WzFBiY2swU20Ac2yKeGeiZia2pW21IiBiavYm+ifwF28wZif2m263NBHQZIR252120ARBJ2swUOr24Ae2uSDIp2wwQO+iMAD2tm63AAUhTqjozpjrzvjtAETvXCIgjONqLotrYvQ09srtqIGRrrTujuSNAGbuigbtzq9sLMLrbuLo7uLLMB7sKExULMinttrszqLOinTsbo+VhgHrNqHvonhlHorqXqnojv8BnpjthnnrHo+Gt1qJTo7oDo3s7vMAiL5DRmHkRoerigVKinGFDhOR0EfuRtwSPgfuMjuqRseqLhoDqAACt8j1437ZgTp4EKb-6fq71nCq0up9aEb4GAagHjY0ZsA-6TIMGB0WyN53lMU4kNoyidBSG35UH1FMVIASB4lXBRaI66GGG7pqGuFMUtbHBYBIBiauGeH2GxDla5BtaABRKmrh0RwRp+TFAAOQkFkZTvkdkZyuDnvvhq-tM0dX1Nfv8FDjIHgTJTIG-E0YId-o0fQcAYIetN0fMH0cMaQZzS0k-ssYerMewc1gMiMjwcAcWNIG-2BB+her0i8fxH933CYCEiitAYkEkG1mMhFPRpDE0aBuyLXHfySmgKCesuogoUqG4vymCaxguEvmiswvyk9l300efvPNENYPMFMYbW0cKpvP5EqdAWqekxAfAcoA-nqfeEaZfG0aVOkeaiFP6xFK4vqpESuUFJqUcECZAfCAKYimiiTGsHyemeQg8fGWxhB3Z2Bg8oqrkmmAmeZ32el1GtiXFDWjIdegkpGuYrch1EF3t3ykuaktMoRmOA5KF3eYpwknMTKr2hGs+dABkt+YpwUS7l4r+FikhaSwOa5hmqYtcgGmxP0XkvLHewUX8jBaXyxaRwUVKuMuGucnxe0LwXCH2eJxXBBspyRaBYYvGHelwGHlYEMhBy7nvVKiTA+QwFaPJlaFaNUw4nYnlT2dZ0UA5ZZwLHTCKvmbOamY9PKcSA4iAA","body":"function eval_sequence(stmts, env) {\n    if (is_empty_sequence(stmts)) {\n        return undefined;\n    } else if (is_last_statement(stmts)) {\n        return evaluate(first_statement(stmts), env);\n    } else {\n        const first_stmt_value = \n            evaluate(first_statement(stmts), env);\n        if (is_return_value(first_stmt_value)) {\n            return first_stmt_value;\n        } else {\n            return eval_sequence(rest_statements(stmts), env);\n        }\n    }\n} "}]},{"tag":"SUBHEADING","id":"#h9","child":[{"body":"Blocks","tag":"#text"}]},{"tag":"TEXT","id":"#p12","child":[{"body":"\n\tThe function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_block"},{"body":" handles\n\tblocks. The variables and constants (including functions)\n\tdeclared in the block have the whole block as their scope and thus\n\tare \"","tag":"#text"},{"body":"scanned out","tag":"#text"},{"body":"\" before the body of the block is\n\tevaluated.\n\tThe body of the\tblock is evaluated with respect to an environment\n\tthat extends the current\n\tenvironment by a frame that binds each local name\n\tto a special value,\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"*unassigned*\""},{"body":".\n\tThis string serves as a placeholder, before\n\tthe evaluation of the declaration assigns the name \n\tits proper value. An attempt to access the value of the name before its\n\tdeclaration is evaluated leads to an error at run time (see\n\texercise ","tag":"#text"},{"tag":"REF","body":"4.12","href":"/sicpjs/4.1.3#ex-4.12"},{"body":"), as stated in\n\tfootnote ","tag":"#text"},{"tag":"REF","body":4,"href":"/sicpjs/1.3.2#footnote-4"},{"body":" in chapter ","tag":"#text"},{"tag":"REF","body":"1","href":"/sicpjs/1"},{"body":".\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":6,"eval":true,"prependLength":449,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEZMChsDMBXAOwGMAXASwHsjQBnEgQyIH0qCyWATAUxIBtGAJ0aUadABQkqAWwAONHkTIBKUAG9sobaCE8yBIbQp0WdHgEcCSkjymyFRJaq063OgPyhGJEgRkEgmR2jHJySlwANK7usXFuRIH80fGpcTKhEgzMbBzcfIIiYkR0KWnlseZWNjxmZKI8Ms6S0vKKyiqdMfEAXKAm+QLCotRE9m1OHd1xXvwmZBK8Q0WjZgCeMgBGVPzjjs5d5X2J-PwA3NgAvrggoISkxXR3QrIQMPBIqJg4+MTko6AeAA3Rj8AgNPbtMiRQFEIFqTRuPQGIz9UxzYIiXatfZTcqzCiY0EsEFguw4qEqaaxPoDIiMJqQyYufGgfhUKgAawIcnWWx2JNB1iyG22-DYeBY9MZFOZKhhSnh1PctNMoTkcyYxSZB2Vbi86v4awkwKFEPu-xoLB4AA85Ho6HRRjqOgq4fK9eU5nROFRJaTrJJhABza12h1O8Qu1Ru+FUo5otjhIpUIQsVqbCj07Wy3Ws01giFUZOiVPp2SZ7OrMhUFiGiha52512eiqwpUJgbSIhcQmjUHR+NpLwF8s9vs0AfN6HtoepVUsQRbLiMMP2niOpsOSmt0BeDKc2oW7VLzYrlhyYZNTF8sUtbdysptiqn8-bLjG6fy2e7hdVaykOSD55sOgKkmYlgAbYWSQTUdQNE0yj3hMByxnOvSJps7IkJyg67iO4FYVQOHRmhv6JsihisD6CHOHh+bgZRRjwcEiELNOZGdqYx6rEshQjDQ9GgQW4LBBIPFWnxLA1mONHKIM2LAa6P5cQpww5kpLLCeBfHqVuKHKJxaQLowm7BkQbFCakBHEqZTrmZZHEqcZgJCC8QikaAABExCckQVAAO60HQazKIwNqgAAtJFYFmsEXkqBc1y-A8AKGsa9wwiGdAIt0FB4KAEgDPaFAyH2QJHn82r3J0Gh6kxtDpReQileVlWpYJmXeEIwY5RcbiXIC-DmP0BVFaYFLEFwLASWMNW5fE3Y+roG6BGQoAALyxYWYmzSw74ZcQHrPidOi2sEPbWnCFAvBZdG7qdqR7ZeIjXjwQiSDVT6Pad2XfT9z57YqN00JZ82JfV+hURRUPMQGdgOmt6Gsg1gpkmOF0LIj-BaW2fRTTweBZjwXD9Tog08MNPB1fE73ueJxAwj5RB+YFtCzaAZBrOEUUxelCVk9o1zJRz3q+v6QobiadqlLONM6A1oAZHIEghptAB822iSEPVoQqMsQyLVUAqO3a9sUU6aWh8vaIrAxkEIHAABbGiJEJmxO9LiuuvZakBBkxrOyOxDZO1AeOFviktsHKIORnzlr7s0Ob-biqCmJVhVcezkluAc6O-41FkZAyGQsuKgtOj5YVAyNHIXMQdUgHF6XOWV7EisE0TTik90FNU6NNfoqZnA0axdE+q3tWInEitu7tN0+ixjQTyXZffhXgugP3I0z7ES3rUTH2j2vaPWJtoAPfPdhH0vY8r7Hk-r2hW9uNX40sKj8PiYvJ+l2fPBp4PUVrfP+nB4av3JkNXewDYa0ALjHaCDoT60SQi3Z+Oc9TXAGlcPOxsaDbU-nA5ejkrZyz3itFEtADy1C-pLE0AYISo1tOuTcgkvz-QBs+Cuhs8EdXgeBOyFAHJ0SchXG2oAD6gHhhfa+qszJ3XkvDNcEZ9K4hjA9E6m9uhCPMreAU39dGKNHqKHY2d4Yv26IrCBuCUqWgEcSXSKx2FkPERQox+jxTfz1E4gS1FTGKQDt+PUcjfHFAASojckYxgcNnJw7Q2ikRwNAF3Ymvdkq3Fmk8PALwZBvDgIgZA6AsAACY+H2MTPUYMwYSaLnmJ5MgTtahVPbpQ6GxVGA3UHKAAAZD00ATTGBcG6RtUZnMmnSUYMGXOdjiiJgxO9S2QSJF21MFUmp00xaeS8gsrEAtcGi0JIsrx9CvwaDcFY5Jgzhn1AoIE9RnQZkcxoXUokux4atMVlsnZRy9kwg+U8-BxhTDSn9g8lZyT7ZTI2XUn02zQX7KNvwpWjBDxSgZHYEK-J+CfOSd8hFMIsVil4bMgERKBR+nRTKTSuKqEDJ4EMiQtz7mUhJRzAYRjSHLIoasyZ1TalbKcl5TlzhEWkoISK+S5KWVyghXS65TLOm7AVcywcnReEc0leAyWkS2ExJpXK6GKqlWKruWqtlQLExhLUZSQ1qIoX8s2fUoVB9mCcGtTQBKoAAA+3rdwOphYKshXkQQtUYFhWoHqiBet9f6tZ0KBXOuDXtKNYrxW0CjZ47pPLknSolFSuwxqzVfkeQcy1mblEsNUS47llz5UMpuSa1VJaLXIpea6+SUaJCgv+TqqtUTRi0uht8jt7qCh6U9TCHt0i+3hgHTQVtFSBivlXP2vV2a63tPjY62F7Fg0rt1dEsVosGRnlXC9DFN5pXIXBTmulysRTYvzdOotMqDiluuCe5cq4DobqSfWxlqrm00o-eUuZLyD1ruiRIC9b0PowgOkO1E3zINzr1V5GEsH9DvVlohwFyKBgpvHc4-V3KACQFz-1br5YGpNAcmZEeWH449lrGP8XCaCv9Cs8XzCIXgTyGANWsaBWpEjF4rzYY+lx22PGl56H405EpQnkVsYnawX9Zy73Dt4-JzyABmZTFS2PSVrKOhS0m2monbeIeonbiN+IkJo7QqmxOcY4U5lFaLUOsOgx5twLm-HidepJm9lJ4kVAC+EjTIHF1zIGKje+XLb0xF5esxNcKhUJfqOPZQLHkXMLQ9BzTKWrkNtNW+josWARdmTp7JZyWqP2u3bRjLwaPaR0PaMGNfrygBvS3u+j3l2upxIaKwzczhuTm9noX2Sda3cbpWLPjAnxsAkm17WSMcBsNZk4tnThNPJKdzhzdbtkcbvUzmC21e8vn7YU2Qgz+Gl2mELs3J+7dUsJqdXCp+TNXu2DyxU-7tREvNHQQiHQJWAONrNe91bBDQGjcfmvHKNtFYKqfn1Mt+WNwoJy2XdBqObvJNVZj+HwLrTyAbsDwnH3IUgqSLT47lrl0jyRwsMnaP6dSkZ6TlHoH02YWwrhYrjWKdpe+9tqETMiI4UB3M2XnJ9pUA-BZ9HZXgNBPJ552oivi6oNUHa2g3zFcYfoNlh+qgntxdMMWRZNY0wZizA5zTFHIdi8TMQYQawkz27LE7qsNbwWxt66YSs3vfcpkdxWZ3GkgnM4I6YL3Qgfd26j+WLYsebWyvUG77Qm6ms0f69s5PqeSwO4z+H4o8vqth+dynyPpZo+Z8D6R29efL4e765L7Z4eG9p6b5XrPnrtcD4r9KtXsnOC6acoJhPRnf6N57JPvbcmDuKe1+YM2S-hmi4W9ptf93BuPdsc81FtR6yNk6iJqDowso9X8M4Tr4gkPG-qcKsImpmPhfiEDQrd-upgxH95Jb8X9rcAQx9-cY9W8TM6xP8GwXcDUKEpFIChAL5UCs0vwt5eVS9G8K8A9ECgl8Idc4CNQEDtQXlONUDjouFUgtlEcB9l8W1yIXlL8HNKCMUJBqCf9aD6DF9GDd8aUeDaC3At9k4d9zVwCCEOV4Cr829rsodqMJdd1tk2Dq9tc-8fNs8Dgudodys1V585kQxn8ShpN1dAMm0TUW0ZlMkgVslcl8kPgilvg9MwNa9pJHZGljQbRX9MIOR+AGUxgfDO9QIbRyI6ZUwJAbQZd-DAjAQ7Q+BggogVpbAKAKouAa9pDuJQQQooiIdFYABCSpTwl2PIs4beNwghF5WaGDCTTEXDFXNYa2LTZDd-SaS6WaM3LDeohDRoyxT9FnCabcKaGaIFcSXw7vFQvAJmdo6aTojQkTbonDcY85W7Q-cSGEOfCowXPaX9PAfIqfZbaY0AI7bYjmIGa6W6MGA41fafA7Y4x7M4y1F5OhMkewZQHQlot-OFLyV46wM3bsTGbXeLYhb+D5I3SpL7FQixbyP4ngTI2gOEjGOicEr4+lCws1D5KrAhGwdkJ0IgUMYGK4uiNxSzWgVVTeJ4lTRfHJTg0k8w4ZSk5KKRRpWoOuBuIk0GZwC+E4c4So6hc-GaYLR9O8XtMkInMk0AS8Lpa9MUwMRKKkozYLTxT6YLG4o1MrWkpoBUpFJUjFABVUjFdU1EVVLUwBco3UuZc6CIK6IEEGYxEUnYWWUkXDUyNk90CEgIgkxpR04aNQUZLaL04MH0l04OdwLwaUjyao4U2UmdP0hDN020sMtwPoIMn069NQAAHjZCUGDKdgkFDOIIiI8i8hrCoBRSIDWEAOALLnoB5DIJJj6C8lAAAGoQjHofQWoCT8pjQMzWzvImZ+y-MdBOysxgweyCycjDgXJiyJBSyOQ7geAApqy2Ing6B6y5hGzvIhyAZRzuy8BeyAlUc2yzdmy2zhztA9zxyDzJy-TsTjcORuReQ81v5pVmjuh844RFwOQVY3E9QOZsgxhYzQyJF4heVeTfScoLy9x2xvziwTRSA8SxzbT7TLIeFoK+hpVNoxkMcjzkzWQFVCyAZMKmAxhSc8KYRVVQyIZ4hsE4h35FRsKtpWTKd64fdOTjFWlaY3JIi3zvJiBtgppQAEUaK4gd5qYKFFobNngMUL5EczSEL4RIEO5c1SLxJlTr11KjSYQzSDStLtTRLYg6KhYC94Evz2R4LtFLS0oFFPEAFfSxT3z-NLVFQ4LfyPTJKdAAK1LgKpzQLZ5ucIKMzoKRxzKfyEKBAqB8TCTLiuTY50LiL6AAkmL0ThlgqAYvBzBOBCKcixT8KXJAL9CMzKKTVqLlLt52z3AGK4QUqWL2T2LYrOL-LYhZy+LmZBKexhLZLopvAFE2J9laLoEJKHopEzS5KaThTElyhFZCrdLNKzTvxdL4ZDSDLyrjKKiPdXKLL3KlLbFbD+F7DXgoAClPhik0AUB+TEwSoypKAKpRj+EGYiAJjmti8uovJrq2o00OYPrbrahSoNRLcHMapVjSsMTdh5oLTcApEfq0j2p7EnhAz6llRvlrkzcdBrk2waD3BvlmU0btBmVMb4lvlIy8apTOk0CKgsa3AUN5hSaxZCbkb386QkgzdmbTg0gqadBvlew6ANRGA1gzcea+aqzUhObtBvliy8bizKaib38MhGk6xNg6AMN5anZFanh4gxa2R38WzSadAoiYQ1h-TNYIo2yRatbvlIo9btADbQAjaNZQAIoYpzbZafjIpS88aIo3ANpNZtAYovaLb38AAqa2wqaIu242x20AIOu27QQOn44AUO22+2n2qOsAF2xmn4gAUiTvDpTpNtACztjtAHjoWC8gDL1uTsjoigDIjtdrLoKNGUrrzurtAEbq2iNvrrnMzNzsNtbuzO0E7szrLszI2mtqrodoilHsHtLrnPVl7ojsntAF9rruHrnrHphHcAntToinVi2lXriG+QKNDqju9pXqKO0B8OVAhmhpahuthvuvsRVM2m6AfWuUwzvrakfseBvukphrur2ioE2AACtEiEbX7Mh7gHbibP7fqzdX1Hr1Vwt-64af6LhsBb7WpfrZJbNazEa4VvlUke4zciGSYtaRDqb39IAiBu5CQBbN7qHaGuZyGKHxa5bRA1bYBIA8bVaWAuGWHWHvleGABRUmkRgRih75AAOUYCkdDpkakfypEN-pKHWhQZwbdWfo2ggZVhIAdoVRIG-HUdHSx0wfvrurM2WpfrcAfT0dToQcMaMdgYfpMYhkFyanUZqK6hDDFl8KaizBYAJiECNGQuAcYBBAYBanrkcxOnUf+oCLYiBqOnv2DF8akOCihl5A4ssl8OtMumybonVAiBg2cYAZE1lOgp+mMZs00eKsqbSCKeX08ZEyAdAfIFlnqdOmqdUc0eWokYBjqqpwartOJI6BmRZImVSaAeJAKeUAviyp5BQtGYWDcfzkImF08j-LcCkQOgvkV2V1VywO6CkWwhyPmdItyDHSY0eAkDw2Oekq9wURJgRu1qXkpUefsh7gkFOb9OwOSTkQOn1gummlmYWB+dKE6YoY+eER7g6dYdoJ4UMIBCW3efpCebSrwohIfSwtTq8iDuhfMhJhDsJTwvGekpkB90VwvhenMDnPUEkWkprtAAwHKL03KJQBKQtP2VHD1wpf2mF0oomXqqWbiqtyAA","body":"function eval_block(component, env) {\n    const body = block_body(component);\n    const locals = scan_out_declarations(body);\n    const unassigneds = list_of_unassigned(locals);\n    return evaluate(body, extend_environment(locals,\n                                             unassigneds, \n                                             env));\n}\nfunction list_of_unassigned(symbols) {\n    return map(symbol => \"*unassigned*\", symbols);\n} "},{"body":"\n\tThe function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"scan_out_declarations"},{"body":"\n\tcollects a list of all symbols representing names declared in the body.\n\tIt uses \n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"declaration_symbol"},{"body":"\n\tto retrieve the symbol that represents the name\n\tfrom the declaration statements it finds.\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":7,"eval":true,"prependLength":450,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKqY7bHlqdUAFMAbgEMANkQkURACjJsADnREkKAGlEkxASlABvbKDOgmIikSYlQVegH0pVeU2lLV6zftPn-5gD8oC5u0o6SMorKrGokGhS+AckAXPZOJBKs0V7xPn7JQSE0NADWRCqO9ACerABGNFIR0kSKNfWNjjQEjpnZnrHeiToaBgWFoGkOjhIqKi5kcrQkA3EJSRNmwbPz1QriLXKKApTLjiIAHiqW9PTLq0P6I3pP45vJLvQUXT2RrfQKCRMADm5yuNzudABMTWPmeBg2mymThoKhE7goNCYjhidSomSEKxhjzeyWCBxkRwUqPRcixOLYeIJZ0xMzmCyWdAeeWGpPeyVGiImyIZJAAJq5lh5iTyhYVyZFRRLCdLcgl4XLUulnFk6mKJGDriJbvcZes+f5gqwJKURI4ToSFFJdfrHCogVkrOiqrUGlJoWq4Rb+RNnfVXQ0xXszXDdGN+SL6CIAI6tcg5Qay4NbUSKpOpjRkNoptNFqoUI7ZTQBzPrDXZybaupSGhkUrc838hXhZut9sx7RxzUBEWWay2cuVhId-Jd3PhMc2EiT+RVigzweChsih1nMUiMjOjGmwOJBvdynyBS7uiOfeHxys5QMCuaO8HqQbp5D7fa+9HzkiVPYdLXnJp-w9R0B3rBNtQkE1gRINcv3PMCZgQpDp2gn9YPRFgmA3HQACJSFKEgaAAdzsGpNAkC5QAAWgYsDZHkIj9AAbmwABfXAbzsHYpD2AQdCBYF6EMEx-CoAhQAUaZrioVhJTEO1+OvUh9Eki1F1sUBBOqN0mCUlS1NIU4uRE-SQQkrj-G40R-REexZPkpxiVIMV7XMx0BC04wLWfL4LGNIgpAoUAAF4WKpfjHEjYTNK0BsQ02S55HFc49CoFhMM0BQUtS-k4vddxsjcAE-OSoqasKMT6Gq2qmrMOLRhyuhkL8rS7MKXS7GmPrmiiBQbjCs8auCQa-jtZ8MvXUbwpAwo0k8kQCHxEQxR6swHJEJyAomPCsQ0khiNI8iqMIHzllAChqjRRjmIM9jttAXjeP4a7hE+b5uiG-59iuBqhwO8w+tAa0VEBEEooAPhiq8xI1EYgc4ni+K+uwKSVSU6FVWtNA1UGzHB6YKCYIgKAACz2ClWJycVccyJojQlRYrwHb9BSWnM6apZ9lSlJogpLLDgJg940j5jm6EFvGmmkNxmVUr8NS4j7+LQ-NSzaChWAoYHBWJly5OmERYjuqpRfTBQvn1iTtImcHVvW+ItvGXb9pk02nGdL4V3N6c7YN-ypN6qwlwR44cv9r4p3y4OJLVj3HKTY3-CCiL1qYWO9e+aaotAFLpejnPvjj1cg7zpOh1e6TXIGiOJ2m68Y-LvP-pEUOUvB7Pc-1zu6-MT207D95wex7XC0UG52-jg3berrmXiHnaPfRz7BBu7HezbQiQbH0BM9ABLC930p4poKMv1e4+W0Wf1C-oRZlxoSn30PSDlgBBK0YzqEIqkHgncRCm1GDRR+j8RwQCMKbSdK2aQtlxgTz+FSBKKMMpeTarlZC99EGNWaoQ5IMCQFu2BoVIhIZubq03hZOwkC-okKoKAsUttfSNAksbcGkM2EdCkHDUAREABUTCWFCKIjodofokEa0xmhQaFdA75WwkbQ+3CbR2imi0RQJcRpN2XJcI0JouScwIZQoq1CN6a2xsA5heV1wqJeMbY+Bdoq6NsYhNcndDQQhPATXk5iAiCleh45cUjOgt1CV48Jn5TGgGmsnfw4Npo0NoYSNCEFjwmNPETQ+oSfR8M7gVCYmTAIFL9KrIuh1UFXlKYSbxhjfHZP8cvAwZj-DBOQfo0ALsNruw+vgfijACAsHYFAOAiBkDoCwAAJgxlvYQZMJDAmBJtZwDgHE5NulTO0FZgSOzBt0hSEgcpflAAAMnOaAHZEhWGcyipFaK1NdnLNSZraYoRaSxOAlwo5Tg9mrK8j9feRFPnuCkC9dGmswXhBbvcow-gunjjsDc1hFYqDfJaWjWRCy7DWltOssIn5poHJJt04FoLXBfIkfE7R2L5l0O1H0DMsJEi-ORdqAFazgXYSIsyyFOLGX4rtMy3hfpSUhQ5RS-lkj2FSHpWkm6MSoGivhUiyOqKFDosxay7qVi5HTCiWLFp7LI5LJWdyjZIKjWaAFYq4QNry5yrOWo7pmrtUKHdScnVjwtL0s1o6hp4JjSQiAia11HKvUYq1d6r8erBXpOmHUvxurTV6XNYC9ZXwQWZwkG+ZNdB2KgAAD7FobBmy12beWSGMhIZsdoC0kCLaW8t-zlmZp5VsoicVG12vtXYRt5TGguvVXpZVf1RVRp9bKeN-bQCDumj4kNKbHhppRSIW5Mbo0es5rOudwrRRx3zR+L+XJmU6EXY05ddAJXgwpbm49n8slNp0Oe2lUQl3GJIAq95vsXQGivV+kdSS-mPnbZWzZ-jiJhj1AB4NX67XQv-W6D05VvQxJrKmiNkceHjp6G+qdcb-VyJgxGK+0YfnYb0oRndwE92awPaRuDRjQ0KFKp6CqOhf5rpCFa0FyHAOhppextDOcuPkZ-QapwPaT3PpdQASERSBjlFagVWt5TJp9gFENyM0wBepqrKOjvoRsxwlgCD7wwMR3FV1cUf302cETXoc7AcOVK0z5n94zOs4yvTp7lwJVc2S9z-tPPYQAMw+fSXpx8NBD2vm+P+ILkqcMaPi3mxLsnALFKKn559vRPSqwoRDNLTHP2seK-4PLZSnMVSK4Q6r9TAu7skzZxuyKA7ITVW5s1baLVqarV2hRFZK62qizdQagmV2ymJuDQju63lSZxiqad6weOqazZB1lxEBZM3CFNwthgW38g252qDgjdsrc6wkHTNnLtCyMptKg7MWWrrHnejza1LPjeEPd+Wh7rZbbewUD7oWvvYW8zQzWf3mYzHCuiZWr2ZvvfJZ9izEXWuMumFPG2wdSWkz6x2q1wdiI46LLdxlZO7SKLXACPHxhzAg7dRutFsa8c-bsH3Oeo31yJ3x8zzdfOodyNntd6si97b845R6oXUKlvmxUJbKnEuQ6zdAyQMKn5Ze8V-TqXO88VecJRypjImut1a6XpjxNThz7JYJ2B-rm2QXnwp+k8+l9r7dZ69Rln5u43C5swe23NO1tUZM9moiLvJEjaUYkRbbWURogxPSXE+JsvwsU4z5TvXoGZCYIZGkyfsSp+ZM01Nx33jTCZECAvSe6TF8ZGnqCwEA9Y6cEA-PXQ6+Ygb-UJv03Q+Z7MMZzl4GBtA55GdPPtfaQ94ZH30vTaOdNjT53wv9f5-V+b+GofVTvf9UJxB53q+Z9F83-3w7rf0nr7nzEu3qOwfo62VZq-N0udd9pOKe-IXvhha2ZDuXGzJMAWD-dwL-L3YLSOSBP-c7SLePIVNLQSZ7bLVqeDUNUSEEIgLxA7BgW9B-dcIiJA9mZYCRSrVAljZYDA4ELAhIcrb+K3G6G-FPRvRfWLNkeYZA7fLDcYY+JgpgQuPgodVbHwV6e3DvU-DfEvdPYCVCA9Ig7LA9UVPg14QJQoYFd-dfcAujHmRsOQ9kTg+4RQwrZQ9pVQ3jbNDQuvLQlpUwsw-wYA2WUAvNO5bQ+A63dgjkLg4HffUfR3M7bbQReQwkV3N-TGOgsvbwyAn3TdWjLFV-B1EEcIhgILObX3D1WI3VPdQZTGYZUZDgCZbgaZNAcLBldw8mSmGmBQC4PAk3S+RoDdFYaovfTYYIC4X8I6AiC4YiBoeovNUQK4A8eQMUHQSwIsKgVSMUEIxZaTRBPYJohFcGAAQk5QpmpjmM4jelKJugPXUlq3RGBnQQPhH3vS8E8m8lxWE1Q2cwOPI2Th1yWw8kynUgIBqJzy5XH2vB21OKeMximM5zCL2JcxeIZ1B1-y+wIB0Bf02LnTikC2BIWPwLM3BJ0Eh2hM1lamyhwWnHhJSz0mgORNADgLRLkQPS0WGlmlD2OL4zJNaBpQpJEMALbyRI6xbhJXW0Pw+ISUERpJED+NxOXEXXpPXDZLD2uTSNjRJQYOEELBbDuBIFBGwQ6mnFUX5NuljWCWJJs3fxGUKxVNSM3Q1I+mPmeXOAtkMkVPsULg1ykCkC4n3TSx1P6AwwvW0SN1VPdFOWdPfX+A2ITTfzKmpzlUqgDMklVM1UdK7g4k1N8wDM7mDM9FDPBg9QjN9K2OlIuEwSyjEHansTFQ4RdP9C43gjtFUWOI0GBGpjzP9EMEeQgXLMrMiAklQg9IIh2IDKrOBkbO-DqGLKzJ0LSCkHrKpg7MMAAB4QghyFAuzUIOiFAiJMQaASsSBqhrJqDadQB6AKgODNo0giJQAABqZo2qL4YyeUmSPYDDQwQ8mlPcw8yrcwE8-EYEc8qcxBLSdopgfCOchcwgEQCiVcmg6sDcrclwHcwRA8o8mqR8s8ggC8oMq8wRYiCC+8swaC582C186sqU+hEocoSoZVFuGJXJcYaxPQZwEoKGUsiYTWZ+PNDsgso3HudXM3S8lC0AckMilsVEfYcgWUp8rMnM5CbmNitIGJB5aKTVViwhYITVacwhUSl+P3S8nQD1Lsv+QoXiCYb2HisQcS7ZEss0gSrEnwdOQoWcoiwRUgBoTyUAfldS5IEeZyQ+CYY+CMwubU9szpEMcGWilYCMoQ+M7Ib8fy6aQKrueygITS4eEfUYci7izpP0h1DCIQopCyyIYiqrORWKriyipxZy8wGixSr0rs0y5Ie3a0rXeCtijisQOK3Kw8GgOUhUzEpU-KYS+SjcuVPSySqq6SjcqwRwWS-Bd9HQ4UDcxSmXeClSiUt8iK+ySC8wbS0YPSk0hXS2C0tcCVQ6T846CykiEgay8UWyz0R6fSDCNcSFCYRy0qgIVygM9ytue0TyleJijlXy68WMjDD6hMnQEK1076oKua6K+yGKziiinShVbI3FXItgfIrgKZXgFANMg-IyEyagVSc4uhE6V49NDkp3KyIiRSZSdG3k7C0AIm0yRwJSeYWPFAzSEEgXVnaNLqKMo0gBcm4yYm8YsyaGwuYFPkClVFGlcwVFVKFQj4PjbVYWswbVMW2wilFs6W8mk5fgkMcWgIClH6JWn6OWgWvjaYCqmlA2zXd4dW-wClCUegeYCQaoGlS262lczYM28wClDo6WjotW+Wvja0amGYOoegCRH2qmP2xgCYZ2swClfcpW8wKonQaoGs+GeiQ8x28O8wgghiaOswWO0AeOgReiZiFOr2iPBicQ6W+ifwSKeGMwZicu1OilcRHQZIbO3Oyu0AeiIRHOswOuvjYATOuSLonOhOtu0AMAQuvWiPAAUj7ubqHvogns7tAG7oj1rOjpnrzr0vjqLoIMWMeVXoHpbsTtAB3uik3vHoINHOnv3tntAHHLMFPrUL41HMikzrXtbvoifrvqXoINhkvrjuvqrsHq3rnNhmfsbv8FfsPpAc-qAaIkWL7uHoroAeWLMGqL5DRmPgppJsxvqQwyinGB4VRR0Ewe5uwfoK4gwc5sprihoDqAACtBjwF8HZgToBEFbKGSaaVCMupU6Oa0aSGhk0ZsAKG+GMaH0DY+arUKVek3YaVpHNoeGzCKVIASBXZXBbbG7lHVG7oFHVCKUg7HBYBIBpb9HDGdHAk9G5Bg6ABRJW-Rqxsx8xClAAOQkCcb7pcacdGqIXQfZuIdEYAQywCrwf8B4TIAEU1TIG-D8ZmgCerB8ZfF4a5v8ZfECdCuCfMFCfCfFOjUiaifYZIbEaQTnQMlRqSZ5qxqsjEh+hxoEnZEMnxFz33CYCEn4toYkEkGfmMkVxy1SmiaptiEHLXDpu-SoOqbcKVQjkqA2unBqf6MzOmfyh2A0FYT6bimdLYuaj6bEYCoceaiWa-1WbCJofocoHITsP5C2difzldN2aalWsMoWbjw3mNJ2UcGBBbB7KaEeafkmaMtavXEEcKrzS6HfkbUw0iKiJRuV05lQgkDIDICwLCipH2eGI2f8AqtsKalwxfhBcyy00JAajRcKCpzFwXha1-CTSyy8KzDnGBUHTv13V-AqtSV8txfs38wBFKiTDnOPnomigwCjMHIihXOihmQ4nYk4iAA","body":"function scan_out_declarations(component) {\n    return is_sequence(component)\n           ? accumulate(append,\n                        null,\n                        map(scan_out_declarations,\n                            sequence_statements(component)))\n           : is_declaration(component)\n           ? list(declaration_symbol(component))\n           : null;\n} "},{"body":"\n\tWe ignore declarations that are nested in another block,\n\tbecause the evaluation of that block will take care of them.\n\tThe function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"scan_out_declarations"},{"body":"\t\n\tlooks for declarations only in sequences because \n\tdeclarations in conditional statements, function declarations, and\n\tlambda expressions are always in a nested block.\n      ","tag":"#text"}]},{"tag":"SUBHEADING","id":"#h10","child":[{"body":"Return statements","tag":"#text"}]},{"tag":"TEXT","id":"#p13","child":[{"body":"\n\tThe function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_return_statement"},{"body":"\n\tis used to evaluate\n\t\n\treturn statements. As seen in\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":" and\n\tthe evaluation\n\tof sequences, the result of evaluation of a return statement\n\tneeds to be identifiable so that the evaluation of a function\n\tbody can return immediately, even if there are statements\n\tafter the return statement. For this purpose,\n\tthe evaluation of a return statement wraps the result of\n\tevaluating the return expression in a return value object.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-6","body":"6","href":"/sicpjs/4.1.1#footnote-6"},{"tag":"SNIPPET","latex":false,"id":8,"eval":true,"prependLength":456,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKqY7bHlqdUAFMAbgEMANkQkURACjJsADnREkKAGlEkxASlABvbKDOgmIikSYlQVegH0pVeU2lLV6zftPn-5gD8oC5u0o6SMorKrGokGhS+AckAXPZOJBKs0V7xPn7JQSE0NADWRCqO9ACerABGNFIR0kSKNfWNjjQEjpnZnrHeiToaBgWFoGkOjhIqKi5kcrQkA3EJSRNmwbPz1QriLXKKApTLjiIAHiqW9PTLq0P6I3pP45vJLvQUXT2RrfQKCRMADm5yuNzudABMTWPmeBg2mymThoKhE7goNCYjhidSomSEKxhjzeyWCBxkRwUqPRcixOLYeIJZ0xMzmCyWdAeeWGpPeyVGiImyIZJAAJq5lh5iTyhYVyZFRRLCdLcgl4XLUulnFk6mKJGDriJbvcZes+f5gqwJKURI4ToSFFJdfrHCogVkrOiqrUGlJoWq4Rb+RNnfVXQ0xXszXDdGN+SL6CIAI6tcg5Qay4NbUSKpOpjRkNoptNFqoUI7ZTQBzPrDXZybaupSGhkUrc838hXhZut9sx7RxzUBEWWay2cuVhId-Jd3PhMc2EiT+RVigzweChsih1nMUiMjOjGmwOJBvdynyBS7uiOfeHxys5QMCuaO8HqQbp5D7fa+9HzkiVPYdLXnJp-w9R0B3rBNtQkE1gRINcv3PMCZgQpDp2gn9YPRFgmA3HQACJSFKEgaAAdzsGpNAkC5QAAWgYsDZHkIj9AAbmwABfXAbzsHYpD2AQdCBYF6EMEx-CoAhQAUaZrioVhJTEO1+OvUh9Eki1F1sUBBOqN0mCUlS1NIU4uRE-SQQkrj-G40R-REexZPkpxiVIMV7XMx0BC04wLWfL4LGNIgpAoUAAF4WKpfjHEjYTNK0BsQ02S55HFc49CoFhMM0BQUtS-k4vddxsjcAE-OSoqasKMT6Gq2qmrMOLRhyuhkL8rS7MKXS7GmPrmiiBQbjCs8auCQa-jtZ8MvXUbwpAwo0k8kQCHxEQxR6swHJEJyAomPCsQ0khiNI8iqMIHzllAChqjRRjmIM9jttAXjeP4a7hE+b5uiG-59iuBqhwO8w+tAa0VEBEEooAPhiq8xI1EYgc4ni+K+uwKSVSU6FVWtNA1UGzHB6YKCYIgKAACz2ClWJycVccyJojQlRYrwHb9BSWnM6apZ9lSlJogpLLDgJg940j5jm6EFvGmmkNxmVUr8NS4j7+LQ-NSzaChWAoYHBWJly5OmERYjuqpRfTBQvn1iTtImcHVvW+ItvGXb9pk02nGdL4V3N6c7YN-ypN6qwlwR44cv9r4p3y4OJLVj3HKTY3-CCiL1qYWO9e+aaotAFLpejnPvjj1cg7zpOh1e6TXIGiOJ2m68Y-LvP-pEUOUvB7Pc-1zu6-MT207D95wex7XC0UG52-jg3berrmXiHnaPfRz7BBu+hFmXGhKffQ9IOWGtYUSY3SacKebc51CJDIMgiFYMKqR2DQxUa5r-BIMKpE-r+zCQ1trvLoB8ILHihP-AB-hr5lgroHasX4tK-mmOAwCKE5w-QUGgwkPoOifk5jzRsP8pBSHVhjLewhsa9jbIREGY9QCZ1AAlQuNDSjxRoFGL8r0mEtkWP6QuO8JB7zAR+Y+UIFAJTRhnKEEVSDwTuIhTajBoo-R+I4eRGFNpOlbNIWy4wJ5-CpAlFGGUvJtVyshPheioHQK-poxRbtgaFTse8bm5DNZqL+g4qgSixS219I0CSF8m52CAe0P0cNQBEQAFQ+L8TEoiOgIlBLRhrTGaEFG+LyuubCRsGFMILtFEugIMJrk7oaCEJ4Ca8lcf4QUr0smITwX6TupTHHlJSQQ8WoBprJ38ODaa5DN4WSxoqHB1Sz5EwYU05cXS2kWgmbeLpqsi6HSMVeJZy5pqVONJCICNTl4GFsWYBpBjQmgBdhtd2H18D8UYAQFg7AoBwEQMgdAWAABMFDRnagrMCYEm1nAOFyaeHQ1M7T-MdmDC5CkJA5S-KAAAZEi0AVMRASH8ZzKKkVooQsfBIYEwzNbTFCLSbphyQnjn6k4f5gKvJYOwkRMl7gpAvXRp41w5K2nYqMP4c51K0UYv8RWKgFKz7dQ3pra0tpgVhE-NNaFJMLlYOZVy1lSTektC7sSjJ0w+gZglVSyOZNCX0uBV8OhREDXsvSZQsJNo7QGoCfgpVIVBWqptckwJUg0k-MJKAeZf1nW8oFZHdFmKFCivFY8P1IyA3TFmchUNAzYW0rNUCxlYLolJoSLa+NN1c1vhWSmmFgqI0ivhZ+CtUaq1IMlbxTWRb87at2SaLkpblXluFbWsVvaY2ygbf6m6qCxEQIOUahhl8CUAszSCq1mdhHfC2exUAAAfNdDZTWzoZfOplkhjISGbHaFdhgN1bvTTui1oKanETiqe3V9rQBbJaY0RFU6LlBp6M6mt0b60eIyS+nZlwjTtonY8Y1elf11r-YQuN0rHWijjm+LZCgDU6GA+CPZyw3Xg1VYulDY7AKavQ1qqIbb9nwb1b7F0BoQNVI7cBSDNKZ3mqzbe6JYY9R0aw2B-NnjaNug9OVb0XTT4QY-YK8JPr1Gkeg32uDAGn1cYjJw6MTHJPhp7X+2DwEh0FuEDKu0KmeOgf2QoUqnoKo6CkcxkI87mWCfo9hugmrLMiZzjZtTVGn3THvURqCGmACQ-LU2Cu3Wxvd2aiL+aPuO-jGTYsAVwSGjTYa9JqMsAQOhGA-WayS+I5c7mvQ53feluwmW1p0M+XlxLmND7JbOAlMrYXI6Vey9hAAzLVp9SXHw0CQ6+ZdH4WtlsjkZwbS6GuFYKjVAr47eielVi4iGiGTMUfuCt-w83AJCbKiV8TsoTkhh27g5rimpXUccINeBya0tjb0hFudlqmU3YrJXTQCWn2DWc2B0b7qtORt04cnzvzpgCyZvjSd5W-kZt3S96LEOVRNF+-s1d57+RPfhzeqZ0SkdCwDmuL7vz8fyyMptKg7NDUSYKHhkF12qvYVy0pknstIfCyhNbHHNOHsVfp1l6rPXWeM2RzMcK6JlbU9lMTOn-sBdddBwmq+1siyL31kq6ddLnvrmDsRWBIhicBv14ThIAJg6SXMLTi58nPzm6FwGvuc8Ps66XjL63PbE725urPE3iDPdu8FX+z3LOlfnAtoZfXauQ4B5NRkX+Uf9GNqu37J3CCXf2w12m3o8eg9L0VyOpwbD-sA8e5eyLCOONETYYbm6bCOFcM7SXuwNukEh5uhNovt31h2dVdX5J720-5+ENMGkGJ6S4nxOg3lIXLetdLxozITBDKj7pNiCfzJGOUox+8aYTIgTL7RGPtfjJJ+BcOW34fTh5FL66If1fDJ6in8mRJmfZgYdY+vVa6-B-aSYmP4-jfEgGvS-eKSfG-FfP-B-PfM-SdV-NZXnWHK9djXHKvMAn-I-KAp-VzL3YQCA+kEte7BA9rHLHAuwR3W-WkcUYvWXb4eXbNGrC-aiA8WWCg9wKgxvGghnDrbNbrR9X5CbQSSndBVqXjfZUSEEJ+BIDbKEXDFVBzQQ9mZYJJLbEQszZYcQ4ESQt8VHE+IfOwPA--aAlkAbBQqfQgswJhAwwuAw19AddYV6adb-Vg+-dfMww5VCAQ9kIQx0CbZ1Aw14OpD4edcglfdgvTIhNITw+Ybw+4Xwpbfw47OxLBEIu-MIw5RIwIwNZgzKUIrFcIvg0PUwmAnnLtWPVjbXK1IopQ0gq6e1aQ8DaXMecGFvQhRg6yUEHQiRTtZo7TGDOtC7W5MAe5ZgNgDgV5bgD5NATrYdEA8mSmGmBQC4WQ8LQvEoKQDFFYJY+AzYYIC4X8I6AiC4YiBoRoDY0QK4A8eQD+EKIsKgVSMUYAljAgPRPYLYvlcGAAQj+QpmpleM4jehmIdVlXUmK2s2YTU2mRh3wy8E8m8ntTc2EwOy8yjGTiT183chhMynUgIGWLKK12x2vGIg8ixMxkeNqNGT2ys3REqgt04IFwIB0GZwBIMzIPq2axxOMCb3szlyqwZNAAYOZPy3qwsQ6mnA5PeLkJ5Oyz5N4MFIyQmymm1U8E0G700wywc0VKiE1VmnsI5Su01NaAUEVTsw-ywT6WiQNINxqMtNFDmiNO1VxKg16L7UVT0N0EPBoDuBIA6OyksWnHyS5L-QaTlN6zbntH232BeE5J6MjWDI+iYXxXNhUEthFJyULhITIUBNW2BIjLEww21WCQlMFXdARTzLI3+H+LtV+UeU9FsMqn21pPd0jRrOyErKzJbLtGmnrM9EbMDzrQ7LbJZPOLMSyjEHahyRdT9GBkiGBjqHgjtHyShI0GBGpknNSRxVUWXNXJnKIWCBLIIgmw7LXP9HzP9G-DnKTFHIiJCC3KpmPOCQAB4bzvTty9FdzRAmB8IFAiJMQaBVsSBqh2itCDZA0KhojNo0giJQAABqbY2qL4Yyb0mSPYMTQwWCzVKC2CrbcwBC-EYEZC+0s868g47838wgEQCiICtcRgegMClwCC6JGCuCmqXCpCggFCn1YJdC4iJi7CswVi-C9iwih2Aom6FsMoCoWwtpLpSE7bDJUYZwEoKGRciYTWIRFYMsnc9OcOFY7PUhe8ohCYckPQRS1ESMj0r0n0scv0-KbmPixsLpDcoVSNVC+y4IGtHc+ytIdS-tAy8FOtHc6RQoXiCYb2SMsQJyxM8PUc8ctcN1Q6T846GS6JUgBoTyUAG1IK5IEeZyBhCYJhDswucgo8s5EMcGHyjsus68BsnQSqrs6qnsrKgIEK4eGHBS8S5SleS7J9WZKSluZKyIWS8wTWdqpS8K+K4ajJHyzSt87S5IadDMgytyuMUyzqiyvCmKmy9cOyr+byn1JymtVyr+YIJMb4DymxMjQy5aQNXeXy1C-yl0t8pq+yZi8wMK0YSK9FMPZMwyVMuKuagIEi5KkiEgNK8UDKz0R6fSMpPNZ64eVOXKlKAq-bIqsMkqrqsqz9W6yqsTBq1s2q-bTubs1suGteeyNqkyjq8a4ZO5TGB5J5MYrgd5XgFALMhSYyZSagVSOE0ZE6R0ljfEz-KyIiRSTmu4q00S4QUW0yRwJSeYNPYQzSaMpsytPtLqDiZkphaWrmsye1FRbk9cPkVVCtTVcwCtVKAIoIy1H8qtU2swaNC2k5VVfcu20Afcx2o2hzH6V2n6D2woVVfVX+TVQO0hd4S2gIVVCUegeYCQaoTVKOmOwCzYcO-wVVA4u2g4kMFO8wVVa0amGYOoegJJPOqmAuxgCYbOswVVaC128wRYnQaoQwSKeGeiWCpOyug278hiWusweu0ARuqJeiZidup2hzBib-O2+ifwZu8wZiKeju1VRJHQZIPugeme+iGJfuswBehzYAHuuSI4-upulu0AMAEez262gAUn3tXuPtAHokvq3tAB3uttxUilrtvsHqcsbtHuto+NxQ-sPrXpPv-uih-ovvXCIgfJvqAbvvoifLMHAf9ocwfPfuXv8E-vXtAFQcQZfsgdhhgYbrgdAHhlwd-vwbQZXtga-thmiiPvIe-I+P3vvoCBnrMC+LMCWL5DRi1o5plrijEyinGCAQrR0G1vFp5sJH0V4ZMh1skbOBoDqAACtLiVFhHZgToolna+GdbNUW8uoO63adGJH7k0ZsAZGxbuaCMQLVF51VUrk3ZNUHHNpDHAjVVIASBXZXA47l6PGvG7pXG6lc65BS7YBIA7aS7HAwnAnXFgn86ABRV2yJ+JmJpIhzAAOQkHSf3syfSauq-h4dkSMdkYkesbrKEf8CATICiRrTIG-HEasdkSXWkaKYaZmiabfC7IqfMCqZqedIIS0jEeMcaZfGabMabXZEMjafkcslIA0J+n5v0kmdluXFWiYCEg2qUYkEkB3mMmTNmyKmmblvWLXEVpIG-DEgWclqYOsEqD+unEWfSnfk2tFPyjfioOmYEc4oyMyOKcsfadGeLU4tSeanef8U+fq0UZUcoGcV+feGmbKa7JBaaiip+peZyTjQTK+uBBbDnJR19NeYimilOskvufynGfksVDe3njoRUoQIVNCTaRKR+1EOfyO3sq-ncQ3iYVYCmZYGBDKkLlKiTG-L5XywUF7MjgwA1ocmy0rPZRKV5aMhoAFayHBWxdxfCDJcSA4iAA","body":"function eval_return_statement(component, env) {\n    return make_return_value(evaluate(return_expression(component),\n                                      env));\n} "}]},{"tag":"SUBHEADING","id":"#h11","child":[{"body":"Assignments and\n    declarations","tag":"#text"}]},{"tag":"TEXT","id":"#p14","child":[{"body":"\n    The \n    \n\tfunction ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_assignment"},{"body":"\n    handles assignments to\n    \n\tnames.\n\t(To simplify the\tpresentation of our evaluator,\n\twe are allowing assignment not just to variables but\n\talso—erroneously—to constants.\n\tExercise ","tag":"#text"},{"tag":"REF","body":"4.11","href":"/sicpjs/4.1.3#ex-4.11"},{"body":"\n\texplains how we could\n\tdistinguish constants from variables and prevent\n\tassignment to constants.)\n      \n\tThe function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_assignment"},{"body":"\n\tcalls\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n\ton the value expression\n\tto find the value to be assigned and calls\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"assignment_symbol"},{"body":"\n\tto retrieve the symbol that represents the name\n\tfrom the assignment. The function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_assignment"},{"body":"\t\n\ttransmits the symbol and the value to\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"assign_symbol_value"},{"body":"\n\tto be installed in the designated environment.\n\tThe evaluation of an assignment returns the value \n\tthat was assigned.\n      ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":9,"eval":true,"prependLength":454,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKqY7bHlqdUAFMAbgEMANkQkURACjJsADnREkKAGlEkxASlABvbKDOgmIikSYlQVegH0pVeU2lLV6zftPn-5gD8oC5u0o6SMorKrGokGhS+AckAXPZOJBKs0V7xPn7JQSE0NADWRCqO9ACerABGNFIR0kSKNfWNjjQEjpnZnrHeiToaBgWFoGkOjhIqKi5kcrQkA3EJSRNmwbPz1QriLXKKApTLjiIAHiqW9PTLq0P6I3pP45vJLvQUXT2RrfQKCRMADm5yuNzudABMTWPmeBg2mymThoKhE7goNCYjhidSomSEKxhjzeyWCBxkRwUqPRcixOLYeIJZ0xMzmCyWdAeeWGpPeyVGiImyIZJAAJq5lh5iTyhYVyZFRRLCdLcgl4XLUulnFk6mKJGDriJbvcZes+f5gqwJKURI4ToSFFJdfrHCogVkrOiqrUGlJoWq4Rb+RNnfVXQ0xXszXDdGN+SL6CIAI6tcg5Qay4NbUSKpOpjRkNoptNFqoUI7ZTQBzPrDXZybaupSGhkUrc838hXhZut9sx7RxzUBEWWay2cuVhId-Jd3PhMc2EiT+RVigzweChsih1nMUiMjOjGmwOJBvdynyBS7uiOfeHxys5QMCuaO8HqQbp5D7fa+9HzkiVPYdLXnJp-w9R0B3rBNtQkE1gRINcv3PMCZgQpDp2gn9YPRFgmA3HQACJSFKEgaAAdzsGpNAkC5QAAWgYsDZHkIj9AAbmwABfXAbzsHYpD2AQdCBYF6EMEx-CoAhQAUaZrioVhJTEO1+OvUh9Eki1F1sUBBOqN0mCUlS1NIU4uRE-SQQkrj-G40R-REexZPkpxiVIMV7XMx0BC04wLWfL4LGNIgpAoUAAF4WKpfjHEjYTNK0BsQ02S55HFc49CoFhMM0BQUtS-k4vddxsjcAE-OSoqasKMT6Gq2qmrMOLRhyuhkL8rS7MKXS7GmPrmiiBQbjCs8auCQa-jtZ8MvXUbwpAwo0k8kQCHxEQxR6swHJEJyAomPCsQ0khiNI8iqMIHzllAChqjRRjmIM9jttAXjeP4a7hE+b5uiG-59iuBqhwO8w+tAa0VEBEEooAPhiq8xI1EYgc4ni+K+uwKSVSU6FVWtNA1UGzHB6YKCYIgKAACz2ClWJycVccyJojQlRYrwHb9BSWnM6apZ9lSlJogpLLDgJg940j5jm6EFvGmmkNxmVUr8NS4j7+LQ-NSzaChWAoYHBWJly5OmERYjuqpRfTBQvn1iTtImcHVvW+ItvGXb9pk02nGdL4V3N6c7YN-ypN6qwlwR44cv9r4p3y4OJLVj3HKTY3-CCiL1qYWO9e+aaotAFLpejnPvjj1cg7zpOh1e6TXIGiOJ2m68Y-LvP-pEUOUvB7Pc-1zu6-MT207D95wex7XC0UG52-jg3berrmXiHnaPfRz7BBu+hFmXGhKffQ9IOWGtYUSY3SacKebc51CJDIMgiFYMKqR2DQxUa5r-BIMKpE-r+zCQ1trvLoB8ILHihP-AB-hr5lgroHasX4tK-mmOAwCKE5w-QUGgwkPoOifk5jzRsP8pBSHVhjLewhsa9jbIREGY9QCZ1AAlQuNDSjxRoFGL8r0mEtkWP6QuO8JB7zAR+Y+UIFAJTRhnKEEVSDwTuIhTajBoo-R+I4eRGFNpOlbNIWy4wJ5-CpAlFGGUvJtVyshPheioHQK-poxRbtgaFTse8bm5DNZqL+g4qgSixS219I0CSF8m52CAe0P0cNQBEQAFQ+L8TEoiOgIlBLRhrTGaFBrwOQthI2DDwbWltI4KaLRFAlxGqEw0EITwE15K4mq7iN6a2xjgmpZ8iYMIUb45cKSmgtwtK028vTVZF0OkYq8gzlzTSqcaSEQFanLwMLYswgpXrO3FGtDa7sPr4H4owAgLB2BQDgIgZA6AsAACYKEWX6k4CswJgSbWcA4dc2FqZ2nuY7MGoTtTuhyl+UAAAyQFoAqYiAkP4zmUVIrRXeY+CQwJyGbxudqUItICHARCeOW58KHlPKwdhIiaL3BSBeujTxrh0WdwBUYfwBiflgohQoCsVAMULLSdcwkEMbR2mJR4aaXySY-KwUSylJKkmgAFUizW0w+gZjPoKkK2LtT3MeV5Alp5iJyrJekyhYSeW9E9AE-BirwYiu1ckwJUgOXIq5b09RcqaX0uVYy-xLK2UKptTKpwXTEI5Mxfkn5ZMEVqueV8OhRFfV5QoDq21N0o1rjwX6J1-hwauuZRIVlCh03uqQd1clGSE0JE7jMk0XIoWBpdeCt1mbPy5sIV6jJqCxEQPmQqrFkdg14vVS8iNmdhHfEmexUAAAfEdDYu2ho1bU4ikhjISGbHaIdhgx0TruSG-FvbCVxWXdKjJkyk2NBTd85V9q-qOpzbWvNHj90tsAiWy4Roy1tseB2vSl6s31uAvm3VKLCkzVkQOw+AFHRyp0NMx91S6CmuFb2oi-a3xDp0GByVpTS1zMbXq1FLoDSQdmW019lbO3ru7WG15mrolhj1Lh8E+G6Cxs8Tht0Hpyrel6afQjzrI7hKtQ6z0OgP0eseD+uN30mMJWPUKqtTLc1fvZZhv9BqqOujw8+hQpVPQVR0FIt9dgRXKZo0+uZEqNOsZztpzh1QFNcumDuu9UEA0AEg6WpqDSRqdW6KNETs0fVtDGMk+ZA2cR1FauN6TUZYAgdCMAcs1oF8Ry5TNehzpJpVkcItrToRc2LAXMbAYSxwrhoXXPKoy1F7CABmHLWHAuPhoKKOOiGPypYKQahDg77P3BcVdPV+XW2Gv6JzZZEx-06nDIZqDKxuv+Hi-1pLFVVbTfMLN+9EmG17qw43bFAd-ULOJpfXFHnw2EqyRWSumh-NYcGqpuZkm03VozVmwhG2UXTAFkzfG7aiN6UnZu47Xn3sqiaDd5Yw7V38l+z2-7M7omA6FjthIl2UVw-lkZTaVB2bys4ye9LLzimZewjFm9WGUfMwa9bcje2x5mrx5FrL1Xkeyw+wrcK6JlZY9lPt2D-s6eVeszdaYsDdb60FQd1Vf31zB2IkLpHdrrZwLOwghewdJLmAKPdmTV6VcM65X3Oe53JdLy59J-xicdc3VngjxBZvjeR1zWb4nr2nDmxUJbIXi97ai7c70X+HuQ6O5s77eC+uld++CdT73JC61a6Xvz4Q0w2Ete9+LqHlP2nRLYbLm6bDCvRgDWFuwgmkEB5uqNxP2T1i6ZCHBzPyTFdrjjzimkGJ6S4nxOgitzm1cleIxozITBDLN7pNiNvzJy2YvB+8BP7eB9dDRC3kfjJ28OYWSX+PTh5Gz6H5iRf9Rl8Ec50YLvZgC8qo3aniNm-B-z+HwyPfY+SBZ-X-FGf1-aQ77v0yDvTmXM45++5iXCNL-LfG-D-UfQCJ-OwbfekYZYrP-PTWnAnCjInAtGrNuOfWkcUJPUrRA8rCjbLNfaiA8WWDA9wLAuAqTXHHnJAmHKrF7LlUbQSDHdBVqWjZ9USEEJ+YtEHKEGDHA8NSNdkZgwkJJabVgozZYDg4ELgt8HghgRvUAaA3fL-XBVkJg9mA-SvBhJhJQwuJQw9ITWUNZb3K-Ug2-cAlfBVVCRgoQjQrkUbR1JQ14epD4XtPXMw8g79IhNIGw+YYQ+4Bwo1Jw4bOxLBdwofTwhZEIlw0AJMAWDwyFLw+ggXH1Ww7-KndXZPc-MjCNdQiA83YQcQybO7BlB7OTT1Qg6yUEOQjjQ-TIk3R7aPJ7JIjeXZTGfZQ5DgE5bgc5NACrTlFIx8CmamPYC4Pg3vBoRocFFYMY0Zd4YIC4X8I6AiC4YiSYqQaY0QK4A8eQD+EKIsKgVSMUSA7UAgPRUY1XcGAAQhVWGJpgUDGI4jegGOEFG3Unm3RGBhMXoVPxFQ8kyn4hMxY2Sy+Ms2Tl4m9TvzUE8m8j1WvHGP-0O0AIIGIn+K8kBIKLsBKmBIWwIEuO52+DpxRNACJ2eNEyxLywkzxOMDS3C1wOvB0AILJLizywsQ6mnGpNpRp2oKi2JLoOZIyVGxKWGlmi0N+Lg2FNaAlVFJ8EqK2yXGpQFSr0hxyOmmIklJEBOI1NFDmgUCVO+0LzKKvQFQUMLBbDuBIGqOyksWnDyVpLsFzVWQFLQLLntDKjKReBpI138SdI+iYThRd0tjZOjULijy4nJO5SKQOSNXY3A1KXD3tNAD+QIljNQyiFsmdJRWjOyAMMqndPxIaOzK7ieN-V13dM7jzM9ALLtyvSLM4kzK5XSnfiyjEHamjWNT9GBkiC+PgjtDyV+I0GBGpg7NSWhVUUHOHO7KIWCGTIUDePdJHP9DjP9G-DqF7JbO8JCAnKpkXOCQAB4tzLTJy9FpzRAmB8IFAiJMQaBuUSBqgqiZCDZYiKg-DNo0giJQAABqOYpqL4YyS0mSPYdjQwb8iVD878pbMwP8-EYEQCvUk8zc5Yy868wgEQCiB8tcRgegF8lwN86JL8n82qaCgCggICq1YJUC4iAiyC2I8mGCuCqchQlsMoCoAw6lXpDpcYZpPQZwEoKGfsiYTWIRFYVMqc9OcOZVWVX3YCmi8kHi5i-i8gc0mClsts5CbmGitIXpMc0FB7GSr+YIdNKczS2I3eRo3c78XNRi1eZ4iYb2fYPQHSgMi2QyYMhvcSgUc846Di6JUgBoTyUAbVaRQoEeZyBhCYJhIswudwoshygwGynvPSYS68cs9jFKqsnQIsis9K7IfNCYXieyU-UYXi1EOKhQqNNiluHyyITimbDJYqhSsqjynrFFZK0Sk85qxKnFKPCy2SuMEqxSw8GgC0q01sm0-KDSr+LSq1HS9NfS5qYIJMb4IymxNMohYUUy4Rcy4CnQKyhCmyhyC0ey0YJysFc4Fy1S8a8+cKwoJCnykiEgfy8UQKz0R6fSDCNcMlfK1OMKlKSK906K9A2K1ZHuH5ZKrKtKuszK8s6aSs3K4K5IAq4eIq+SvisqpFNovVDotgLorgM5XgFAF4nFRSZSagVSWEm5E6BEnFFPHIqyIiEm0yWNCMxmsmu0JSeYJXFgzSL00ozXLNLqEs3AJhVmw4syLGwuLBPkEVV1CVcwV1VKZw1wgQ91OWswd1RW5ZEVZMtWpMzNJgTW6WuDH6XWn6Q2woEVKS0hCVK2qQd4JWgIEVCUegeYCQaoCVZ212+8zYB2-wEVZYtW5YkMX28wEVa0amGYOoegJJcOqmSOxgCYEOswEVT83W8wB4nQKzKJeib872pO6vAQhiNOswDO0ALOyKeGeiZiPOrWuDBiK-NW+ifwCu8wZiJu-OkVRJHQZIUu8uyu0AGJMuswDuuDYAYuuSVYsuwwFu+iMAGuo2gQgAUnHt7unv7sXqHtABHoEJhUijTtXuzp0qs1roEKuJhX3snr7tAHojPuimPoXvXCIj3JXsvrXuvtAAPLMHvotrgz3L3u7v8APpno-uiinpPsfthhfszrfvonhi-u3ogf-p7tfsPthlAe-uVsfquPHvfubrgdABuLMDGL5DRhFuMlJrFoptwXYyinGCAVdR0FFvJr2VIdkSTPIdMiobOBoDqAACsdiVE6HZgTooltaOG2aJUi8up872GTI2auHeDwyyG5HKH2sVEC71wRUXYtkJVtG3YZGXCRVIASBXZXB3bu7jHTG7oDH6kw65A47YBIA1bY7HBHGbHXE7GI6ABRXWlxrx9x0IuDAAOQkCCfHpCaCfWoAVYZfFkYofJva1zNof8CATICiXTTIG-CYYAxfAHX0WUfiZyca3znjOSfMFSfSaNKey0kYfEdUcA2rDRgjIMiMhUeYcxhOikJ+mpv0nZEMnxD733CYCEhUt4YkEkB3mMldwKhqmyccA5o2LXG5pIG-DEm6eSOECWtYrcunB6abMyh2fyjfiwLmbiljJouajmcSZ2oufeGOf8VObyx4f4coGcRiP5CuYaZKfTICeamctd1cutPZNlI3n9LOuBBbDXOByBZDOii2cqEOfXCaeaUVCLXylyU9O0LYYLminKTRe+daHQ00KDHeZBv8AqvtRbnxYMJGTVNrlP2miRSYVYEMmuBoGBDKkLlKiTEvNpQ2IinomigwCeMFdAAuRLLJXKRZaMnZbKl2vBchfCERc4iAA","body":"function eval_assignment(component, env) {\n    const value = evaluate(assignment_value_expression(component),\n                           env);\n    assign_symbol_value(assignment_symbol(component), value, env);\n    return value;\n} "}]},{"tag":"TEXT","id":"#p15","child":[{"body":"\n\tConstant and variable declarations are both recognized by the\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"is_declaration"},{"body":" syntax predicate. \n\tThey are treated in a manner similar to\n\tassignments, because ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_block"},{"body":"\n\thas already bound their symbols to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"*unassigned*\""},{"body":"\n\tin the current environment.\n\tTheir evaluation replaces ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"*unassigned*\""},{"body":"\n\twith the result of evaluating the value expression.\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":10,"eval":true,"prependLength":453,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKqY7bHlqdUAFMAbgEMANkQkURACjJsADnREkKAGlEkxASlABvbKDOgmIikSYlQVegH0pVeU2lLV6zftPn-5gD8oC5u0o6SMorKrGokGhS+AckAXPZOJBKs0V7xPn7JQSE0NADWRCqO9ACerABGNFIR0kSKNfWNjjQEjpnZnrHeiToaBgWFoGkOjhIqKi5kcrQkA3EJSRNmwbPz1QriLXKKApTLjiIAHiqW9PTLq0P6I3pP45vJLvQUXT2RrfQKCRMADm5yuNzudABMTWPmeBg2mymThoKhE7goNCYjhidSomSEKxhjzeyWCBxkRwUqPRcixOLYeIJZ0xMzmCyWdAeeWGpPeyVGiImyIZJAAJq5lh5iTyhYVyZFRRLCdLcgl4XLUulnFk6mKJGDriJbvcZes+f5gqwJKURI4ToSFFJdfrHCogVkrOiqrUGlJoWq4Rb+RNnfVXQ0xXszXDdGN+SL6CIAI6tcg5Qay4NbUSKpOpjRkNoptNFqoUI7ZTQBzPrDXZybaupSGhkUrc838hXhZut9sx7RxzUBEWWay2cuVhId-Jd3PhMc2EiT+RVigzweChsih1nMUiMjOjGmwOJBvdynyBS7uiOfeHxys5QMCuaO8HqQbp5D7fa+9HzkiVPYdLXnJp-w9R0B3rBNtQkE1gRINcv3PMCZgQpDp2gn9YPRFgmA3HQACJSFKEgaAAdzsGpNAkC5QAAWgYsDZHkIj9AAbmwABfXAbzsHYpD2AQdCBYF6EMEx-CoAhQAUaZrioVhJTEO1+OvUh9Eki1F1sUBBOqN0mCUlS1NIU4uRE-SQQkrj-G40R-REexZPkpxiVIMV7XMx0BC04wLWfL4LGNIgpAoUAAF4WKpfjHEjYTNK0BsQ02S55HFc49CoFhMM0BQUtS-k4vddxsjcAE-OSoqasKMT6Gq2qmrMOLRhyuhkL8rS7MKXS7GmPrmiiBQbjCs8auCQa-jtZ8MvXUbwpAwo0k8kQCHxEQxR6swHJEJyAomPCsQ0khiNI8iqMIHzllAChqjRRjmIM9jttAXjeP4a7hE+b5uiG-59iuBqhwO8w+tAa0VEBEEooAPhiq8xI1EYgc4ni+K+uwKSVSU6FVWtNA1UGzHB6YKCYIgKAACz2ClWJycVccyJojQlRYrwHb9BSWnM6apZ9lSlJogpLLDgJg940j5jm6EFvGmmkNxmVUr8NS4j7+LQ-NSzaChWAoYHBWJly5OmERYjuqpRfTBQvn1iTtImcHVvW+ItvGXb9pk02nGdL4V3N6c7YN-ypN6qwlwR44cv9r4p3y4OJLVj3HKTY3-CCiL1qYWO9e+aaotAFLpejnPvjj1cg7zpOh1e6TXIGiOJ2m68Y-LvP-pEUOUvB7Pc-1zu6-MT207D95wex7XC0UG52-jg3berrmXiHnaPfRz7BBu+hFmXGhKffQ9IOWGtYUSY3SacKebc51CJDIMgiFYMKqR2DQxUa5r-BIMKpE-r+zCQ1trvLoB8ILHihP-AB-hr5lgroHasX4tK-mmOAwCKE5w-QUGgwkPoOifk5jzRsP8pBSHVhjLewhsa9jbIREGY9QCZ1AAlQuNDSjxRoFGL8r0mEtkWP6QuO8JB7zAR+Y+UIFAJTRhnKEEVSDwTuIhTajBoo-R+I4eRGFNpOlbNIWy4wJ5-CpAlFGGUvJtVyshPheioHQK-poxRbtgaFTse8bm5DNZqL+g4qgSixS219I0CSF8m52CAe0P0cNQBEQAFQ+L8TEoiOgIlBLRhrTGaFBrwOQthI2DDwbWltI4KaLRFAlxGqEw0EITwE15K4mq7iN6a2xgo3xeV1y5JeMbJhBdorlNaYhNcncqnGkhEBWprx6nmEFK9AZy4UlNBbnMoZCzVagGmsnfw4NprkLwGAfijACAsHYFAOAiBkDoCwAAJgoRZfqTgKzAmBJtZwDgOmnh0NTO0jzHZg1Cdqd0OUvygAAGQgtAFTEQEh-GcyipFaKXzHwSGBLszW0xQi0gIcBEJ457lIqeS8rB2EiIYvcFIF66NPGuExZ3YFRh-AGP+ZC6FCgKxUCxRMtJtzCQQxtHaUlHhpq-JJv8rBJLqVkqSes0pXLN53O1H0DMZ9hUhVxdqR5zyvJEo+dExVFL0mULCXy3onoAn4JVeDMVerkmBKkLKzWCz1GKrpYytVzL-Fso5cq+1GTpjLLFhMnFkcybIs1a8r4dCiL+s0PquVPLo3l1tS6rZTKoUeokOyhQ7rWUZq9Y8LSXLNYJuGZcI0JouSwvyamllnqc2ZsIT6w1f4xEQPGcqoNekQ0Eq1W8yNmdhHfBwcsdioAAA+o6GxdrDdq2pxFJDGQkM2O0Q66AjvHZOh5obCW9uJXFFdJBY1xpuvuvBfpk1-LVY6v6zrs21obR4jJJ7pojPLW2x4Ha7C3tzXWvNspupNIyYUmasiB2HwAo6RVOhn2luqXQC1ore1EX7W+fdUrIPSqiC+sZjb5XopdAaGDoyantqrWqqd26I3ErDHqAj4IiOrsLRk6jrpSqejcKeoJ56RVqvCbap1nodBfvrcBf9vFPH4Y4VwytrrI5Cc-HekTOGeVAZ1OGWjZaxkKFY+VdEwMpEfpCIh5j6nYMHp0Npr0OcdBSNRb6pwe6W3oMrQASAZSmsjm7u3hvebO6JDmj6ttjZrfz4GzjOuk+5yOajLAEDoRgRjTaQviOXBZiqXHVVRbecUtadCrkJflUl1tknozYtI5l-2MW6EAGZ8s8pC4+Ggoo44oY-OlgpxrkODsc46FxV1DVgeSya-onNbGbBU8ZrD9xev+EK4BN0HodM51VtN8ws3cEJSQUpm6jdcUBxyaVgol98XTp3TqoiWSKyVxjbVm6g1COvq4+DOTSDbNNumALJm+MSMyc7Z5k7lGzsfZVE0e7Yy10Tv5ORntAPfNIdlp9po2SEhBYyUDoWRlNpUHZkq99Y9LVZcq9heLD6m1o-lk162PnvsXvK98QnOq8sk-lWT5mMxwromVjj2UxN8cVZy9hGrr3cNX2tkWRe+thVHY1RR9cwdiKwJECjptCu9sJABMHSS5hDvVvTZmjXN3hB9znld2XS8ec6-FyHJnPLZ6q8QYnSX-za0O+t9tpw5sVCWwV5b4JeP-nTBIZ+F3lK7M6lzvPH3juPO9F-j+yPW3hDTDYW1-3f2ZeRrYUr+VbDisp7dWmuPhDXfCBU8npHPgDNisz8ky7CDEhC55dMGkGJ6S4nxE50rrmteRd+xozITBDLN7pNiNvzIK3YvXZDpwTIgSD7RC3kfjJ29QWAsXvF8iB9dHn8Phk9Rl-Edx13swP28XS+h1ToYZ1+9z9pJiRfe+x8HoN3imfm+h9393zPlfgajBH6Lj30-Ldc-DPdvN-bfD-UfQCLPHld-ekVZCLGnPSaLfnHVYnEPRLNuLfWkcUPPWnbLWLbCRndA+VJMAWLA9wHAhA7jPA+nXzQXADJtFTQSLHdBVqOjV9USEEJ+BISbKEeDNVMVZg9mYdUbTYNgjTZYTg4Ebgt8UHE+BPOwWA+-L-FkRrIQjvH-cYJhJQwuJQjjX9dYV6I7DfG-BfT-ffcfCZVCJg9kFgx0FTZ1JQyZKZfwLBI3cg4RGFRTX8Gw+YOw+4Bw01Jw0QuxNwzAofSg8WFbZqUg2WDwyIzlBQuCWw4Qyw6nag3vM-bzSNdQwkaAm6cQ0zR7C3BTTlNfayUEOQiRKgp7AvWtUo71WVfAA5ZgNgDgM5bgS5NAKrblN3R8CmamPYC4fg4NafEoKQKFFYYY--d4YIC4X8I6AiC4YiBoRoSY0QK4A8eQD+EKIsKgVSMUfIxPezPRIYzXcGAAQnVQGJpgUGGI4jel6JL2NXUlS102s04WqCJjKyQMQw8kyn4ilTeKs2YU+OTjE1D3+K8nUgIBGMyKAOyIIGIihO8kNSOLsBKgW0s0qnOIQz51iyRNAGJ0eKPUN0xlz1hOMAy1+PxOvB0EZxJOC3JIsQ6mnEpPpV5zpxy0JMF0ZMA2NRKWGlmnWEr0Q0FNaClWFJ8HKJ2yXFpSFQMyh2yI2WiXFMV2f2pOXGfSlPXAVJ+M-TqO-SFSSMLBbDuBIEqOyksWnDyU1Num-RmT5IwLLntDKjKS6Q5It0dI+iYURQ90thZPaULkDy4lJKNSKSOVNQWWBmml9ztMBQImjKg1KVsidIKzdP0MqjdNxPzxZUjOyE4jTLqwzNjOvGzKpPBlrXzK7geINXlXSnfiyjEHanaTNT9BjJsWYXgjtDyRPxCA0GBGpjbNSThVUQHKHMiAklQgTIUBU2rOHP9GTP9G-DqG7KbKITSAmItKHOjMMAAB5+ztyqYFBJyiFyQmB8IFAiJMQaBeUSBqgKiZCDZQB6AKg-DNo0giJQAABqGYpqL4YyC0mSPYXcn86JYiMC6Il88mfEYEYCk8vRZBXCC846a8koQgEQCiR8tcRgV82wj86JSCr+AC2C+C0C38qVL838qCkioCggPYU8pIlsMoCofQ2lBZb48YZpPQZwEoKGXsiYB1XeBcjs5c9OcOaPQPESohCYckHi5i-i8gM02Cpsls5CbmKCtIBZUciFAvXcqC4IbNU8zSl84S53W1GuWtRi1eR4iYb2fYPQHSv0i2QyQMtcFVQ6FCxM21K-BoTyUAPVaRQoEeZyBhCYJhaswudw+cmZHuf5IRFYaszMssz0b8JK0s6s-9CYXieyPs0YXi1EBygwBvG6OZNiluDijDTimbDJfKhSoqjy1bDJBKkSpc33OKyS2PfSr+OSsQAqxSw8Ggc0y05s60-KDSr+LS21HS7Nbq5qYIJMb4IyzsyIGS5aUy4ROPXcz5I0xCoK5IByC0ey0YJyyFc4Fy1Ssa8+MKwoRYhc3y-ecUAKz0R6fSDCNcClbK1OUKlKCKt0qKzAmKleDqyOFqpK6MlKgsnQdKlMyGrufagIHK4ePK+Svihq3ZZozGQ5Y5dorgC5XgFAJ4vFRSZSagVSVEu5E6OEwArzNw0gYiEm0yQ9TWRmsmu0JSeYOvVgzSCsko79LqWs3AJhVm-YsyQ1FRQzCNPkMVd1KVcwd1VKZwgIMVT1OWswT1RW0bMVBMtW0ABMzW6WozN5XWn6A2woMVAPX+KVS20hd4JW1wxDCUegeYCQaoKVJ2l2h8zYe28wMVRYtWxYkMH2swMVa0amGYOoegJJMOqmCOxgCYYOyW9cIib83W8wO4nQaoQwSKeGeiX8r2xOsVBiNOswDO0ALOqJeiZiAurWxDBiEwtW+ifwHO8wZiJuwuxDRJHQZIMuiulu+iGJcuswDuiNIiYAEuuSZY8u7O3O0AMAGuw20egAUgnt7pntAHoiXqHtABHuTvhUijTrXsrp0qztrtHouPhUPqnr7tnovuilPsXuTr3NXuvvXvogPLMAfvNsQz3IPu7v8CPv7tAF-s-t3qvNhhfszrftAHhlAbPuTthj-p7tfuPsQbgcfqvIuIno3oCBbrMCuLMGGL5DRmFuMlJtFoptwWjKinGCAXdXMzIdMkofkK4lIZMjZuYdvBoDqAACstiVFaHZgTooltbGG2apVnsupE69axGKGDk0ZsA2HyHybOsJasExUXYNpDidBNG3ZpGpkxVIASBXZXA3bu6jGTG7p9H6lQ65BY7YBIA1aY7HAHHrHXFbHw6ABRXW5xzxtx0IxDAAOQkECYnuCcCbWq-hIdkRkfYYoc60zJof8CATICiWzTIG-BFpUZA2rGiZfFieUeAxfFA1jKSfMBSbScNPrS0gYbieyeKdydDKLXZEMiybFspqsjEh+mpv0haccHxD733CYCEhUp4YkEkB3mMk9wKhqjaf6diAmLXG5pIG-C6beSSMWtYrcunB6YbMym2fyjfhwLmbiiTKguajmYSe2vOfeCOf8ROfJO4b4coGcRcP5EuZyfzhTP8eamcs91cqtNZOlI3l9LOuBBbFXJB0BaDOik2cqAOfXAUeaUVH3ToQEvMDKsdRbgtBPXgPFj-ICHKSfVKV4LfVlGRgtFioANAF0c2l2SYVYFaZYGBDKkLlKiTCvPpQmIinomigwAeKYQfOiiuQeLzvLtrIpXKUZaMhoBZayE+TBYhfCARc4iAA","body":"function eval_declaration(component, env) {\n    assign_symbol_value(\n        declaration_symbol(component), \n        evaluate(declaration_value_expression(component), env),\n        env);\n    return undefined;\n} "},{"body":"\n\tThe result of evaluating the body of a function is determined by\n\treturn statements, and therefore the return value\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"undefined"},{"body":" in\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_declaration"},{"body":" only\n\tmatters when the declaration occurs at the top level,\n\toutside of any function body. Here we use the return value\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"undefined"},{"body":" to simplify\n\tthe presentation; exercise ","tag":"#text"},{"tag":"REF","body":"4.8","href":"/sicpjs/4.1.2#ex-4.8"},{"body":"\n\tdescribes the real result of evaluating top-level components\n\tin JavaScript.\n\n\t","tag":"#text"}]},{"tag":"TEXT","id":"#p16"},{"tag":"EXERCISE","title":"Exercise 4.1","id":"#ex-4.1","child":[{"body":"\n\tNotice that we cannot tell whether the metacircular evaluator\n\t\n\tevaluates argument expressions from left to right or from right to left.\n\tIts evaluation order is inherited from the underlying JavaScript:\n\tIf the arguments to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"pair"},{"body":" in\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":" are evaluated from\n\tleft to\tright, then ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list_of_values"},{"body":"\n\twill evaluate argument expressions from left to right; and if the\n\targuments to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"pair"},{"body":" are\n\tevaluated from right to left, then\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list_of_values"},{"body":" will evaluate\n\targument expressions from right to left.\n\t\n\tWrite a version of ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list_of_values"},{"body":"\n\tthat evaluates argument expressions from left to right regardless of the\n\torder of evaluation in the underlying JavaScript. Also write a version of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list_of_values"},{"body":" that evaluates\n\targument expressions from right to left.\n\t","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-1","count":1,"href":"/sicpjs/4.1.1#footnote-link-1","child":[{"body":"There is no\n\tneed to distinguish between statements and expressions in our evaluator.\n\tFor example, we do not differentiate between expressions and\n\texpression statements; we represent them identically and consequently\n\tthey are handled in the same way by the\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n\tfunction. Similarly, our evaluator does not enforce JavaScript's syntactic\n\trestriction that statements\n\tcannot appear inside expressions other than\n\tlambda expressions.","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-2","count":2,"href":"/sicpjs/4.1.1#footnote-link-2","child":[{"body":"\n\tThis test is a deferred operation, and thus our evaluator will give rise to a\n\trecursive process even if the interpreted program should give rise to an\n\titerative process according to the description in\n\tsection ","tag":"#text"},{"tag":"REF","body":"1.2.1","href":"/sicpjs/1.2.1"},{"body":". In other\n\twords, our metacircular evaluator implementation of JavaScript is\n\t\n\tnot tail-recursive.\n\tSections ","tag":"#text"},{"tag":"REF","body":"5.4.2","href":"/sicpjs/5.4.2"},{"body":"\n\tand ","tag":"#text"},{"tag":"REF","body":"5.5.3","href":"/sicpjs/5.5.3"},{"body":"\n\tshow how to achieve tail recursion using a register machine.\n      ","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-3","count":3,"href":"/sicpjs/4.1.1#footnote-link-3","child":[{"body":"We\n    chose to implement ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list_of_values"},{"body":"\n    using the\n    \n    higher-order function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":", and we will use\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":" in other places as well.\n    However, the evaluator can be implemented without any use of higher-order\n    functions (and thus could be written in a language that doesn't have\n    higher-order functions), even though the language that it supports\n    will include higher-order functions. For example,\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list_of_values"},{"body":" can be\n    written without ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":" as follows:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":11,"eval":true,"prependLength":461,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKqY7bHlqdUAFMAbgEMANkQkURACjJsADnREkKAGlEkxASlABvbKDOgmIikSYlQVegH0pVeU2lLV6zftPn-5gD8oC5u0o6SMorKrGokGhS+AckAXPZOJBKs0V7xPn7JQSE0NADWRCqO9ACerABGNFIR0kSKNfWNjjQEjpnZnrHeiToaBgWFoGkOjhIqKi5kcrQkA3EJSRNmwbPz1QriLXKKApTLjiIAHiqW9PTLq0P6I3pP45vJLvQUXT2RrfQKCRMADm5yuNzudABMTWPmeBg2mymThoKhE7goNCYjhidSomSEKxhjzeyWCBxkRwUqPRcixOLYeIJZ0xMzmCyWdAeeWGpPeyVGiImyIZJAAJq5lh5iTyhYVyZFRRLCdLcgl4XLUulnFk6mKJGDriJbvcZes+f5gqwJKURI4ToSFFJdfrHCogVkrOiqrUGlJoWq4Rb+RNnfVXQ0xXszXDdGN+SL6CIAI6tcg5Qay4NbUSKpOpjRkNoptNFqoUI7ZTQBzPrDXZybaupSGhkUrc838hXhZut9sx7RxzUBEWWay2cuVhId-Jd3PhMc2EiT+RVigzweChsih1nMUiMjOjGmwOJBvdynyBS7uiOfeHxys5QMCuaO8HqQbp5D7fa+9HzkiVPYdLXnJp-w9R0B3rBNtQkE1gRINcv3PMCZgQpDp2gn9YPRFgmA3HQACJSFKEgaAAdzsGpNAkC5QAAWgYsDZHkIj9AAbmwABfXAbzsHYpD2AQdCBYF6EMEx-CoAhQAUaZrioVhJTEO1+OvUh9Eki1F1sUBBOqN0mCUlS1NIU4uRE-SQQkrj-G40R-REexZPkpxiVIMV7XMx0BC04wLWfL4LGNIgpAoUAAF4WKpfjHEjYTNK0BsQ02S55HFc49CoFhMM0BQUtS-k4vddxsjcAE-OSoqasKMT6Gq2qmrMOLRhyuhkL8rS7MKXS7GmPrmiiBQbjCs8auCQa-jtZ8MvXUbwpAwo0k8kQCHxEQxR6swHJEJyAomPCsQ0khiNI8iqMIHzllAChqjRRjmIM9jttAXjeP4a7hE+b5uiG-59iuBqhwO8w+tAa0VEBEEooAPhiq8xI1EYgc4ni+K+uwKSVSU6FVWtNA1UGzHB6YKCYIgKAACz2ClWJycVccyJojQlRYrwHb9BSWnM6apZ9lSlJogpLLDgJg940j5jm6EFvGmmkNxmVUr8NS4j7+LQ-NSzaChWAoYHBWJly5OmERYjuqpRfTBQvn1iTtImcHVvW+ItvGXb9pk02nGdL4V3N6c7YN-ypN6qwlwR44cv9r4p3y4OJLVj3HKTY3-CCiL1qYWO9e+aaotAFLpejnPvjj1cg7zpOh1e6TXIGiOJ2m68Y-LvP-pEUOUvB7Pc-1zu6-MT207D95wex7XC0UG52-jg3berrmXiHnaPfRz7BBu+hFmXGhKffQ9IOWGtYUSY3SacKebc51CJDIMgiFYMKqR2DQxUa5r-BIMKpE-r+zCQ1trvLoB8ILHihP-AB-hr5lgroHasX4tK-mmOAwCKE5w-QUGgwkPoOifk5jzRsP8pBSHVhjLewhsa9jbIREGY9QCZ1AAlQuNDSjxRoFGL8r0mEtkWP6QuO8JB7zAR+Y+UIFAJTRhnKEEVSDwTuIhTajBoo-R+I4eRGFNpOlbNIWy4wJ5-CpAlFGGUvJtVyshPheioHQK-poxRbtgaFTse8bm5DNZqL+g4qgSixS219I0CSF8m52CAe0P0cNQBEQAFQ+L8TEoiOgIlBLRhrTGaFBrwOQthI2DDwbWltI4KaLRFAlxGqEw0EITwE15K4mq7iN6a2xgo3xeV1y5JeMbJhBdorlNaYhNcncqnGkhEBWprx6nmEFK9AZy4UlNBbnMoZCzVagGmsnfw4NprkM3hZLGiocE1LPkTBhcy8F+k7gVCYRzbyrM5joC05TbnLmmiMk0XIHlDlsWYGZBjQmgBdhtd2H18D8UYAQFg7AoBwEQMgdAWAABMFD9nagrMCYEm1nAOA6aeHQ1M7TosdmDAFCkJA5S-KAAAZFS0AVMRASH8ZzKKkVooEsfBIYEuzNbTFCLSAhwEQnjn6k4dFmKvJYOwkRPl7gpAvXRp41w-KrnMqMP4f5wq6UMv8RWKgAqJlpJRYSCGNo7Qyo8NNYlJMAVYOlUq2VST1mlMNXs410w+gZjPlakKmqyacvFdir4dCiIevlekyhYTTW9E9AE-B3rwa2tDckwJUgXWawWeoj1lL8kAvpYyhQur9VerTRk6YyyxYTKFZHP1GKsWSrxdE8tmgw2upuk28uKbs0asjnmnV5LPy9oLf2pB3UFUZPbcMy4RoPnjK9VWvSg7C1Dr1SO7lpanAvK7Vs0lor-V1pxcGzOwjvgvPYqAAAPuehsNaA31tqcRSQxkJDNjtKewwl7r27trRKg9Uq4pvrXRG0ALyLmNC3SSzVGa-pZsXcOwhhrNYgbeVO6pnzBU5s1bBldS74OAdRYUmasjj2HwAo6D1OhkPglGcseNNqD1ESPW+U9OhyNOqiO8sZJagO8pdAaFD1G0OVow9Wr9t7f0NulbxjjywW2eKk6VT0bhQP+nA9azV4SU2Zs9DoLDRbHijt4nJ8MBoEqqZ9T27Vy7Pw4eAgZo1N0CM6mM9JrkCnyromBlI+ddhbVhj1HxqjM7HVua9DnHQUi8NuqcP+sREDZ2PGMAASHVdu31on91Br-ZjEj4iSCyYyTFo+cXo39FVd2vSajLAEDoRgBDBXssgZCxVMzCacXFLWnQxFdWgOFdI2cUzZXUuR0qx17CABmbrqLeuPhoKKOOTGPwtYBY5xjJ7YvoJcVdCNOXitZoeZtxzfnXT8Zndc5qvXctug9O5nOqtNv+Au8VgbtmuOosbsKgOOT0MFEvhy79gbcX3uiVkisldm2TeNYNE7YzVPg100gyLN1pgCyZvjOdwm9I3oy4Dk50SUcqiaNDmT76r38ixz+zLEn8dC0+wkfLQHqfyyMptKg7NPUJbHq1-2VWasQ5uoz5mc3rY445z9uj3PRsNq6x4jJAvwiK3RMrdnspiZc++Dz8br2otWwLDbYOVrftiux4vfWxFYEiHp6i83tPEH6+MOYMXmHLNLv13z4Qfc55g-XInA3ubLM+5l0B2eNuF4+9VwCl3S9A9vacObFQltzcm5DuHtLvRf5J-0YZ9dOpc7zwz771PJDrPDp91rpHTg2FLdT0binIueTETYZb41bCOFcMGxBiz+abMGuj8axzlfsnrG8yEejjfkmg4QYkRHwhpg0gxPSXE+J0GquSw7obmOnDyKYIZOfdJsSL+ZIJudH6ycV6X9vroaJ5-78ZEvqCwFe-l40ZkC-u-MQ3-qHf45HPV9mHKyKv7MTSnIHEiF-HfK-PfBkT-Q-PLN3AApkIEcA2kd-KAhA+-ITX-IudfAAmvAHYNBA1-CAlAg-QCJvG6N-eke5b7bAkfCXarbCWrR-d3NuS-WkcUKvYbNrDXKXOA0AJMAWVg9wdg9vNTTguguhCbafSNIpQSVndBVqQLMZUSEEJ+BIFzBgWjTVW1WQ9mGTH5TYBQ6dJQ6yYEVQt8InKEMvYQCgj-NAlkWbHQ5fag8wJhGwwuGw5Tbhf-bULfJA6-VAr-I-EkOcRzRwx0RzLNGwyZKZfwLBD3QQ4RJlF7X8UI9kOQ8IqNSIogrEaImIswOIlg3fYQ8We7L+fg2WBI4og1KwgAsI7-FXTnHdQA43KVOougMg93bLCw+LBox3TvPtFdQhJggSEEdQ0+UXDvBdZ3YdbvYtF1MFTGCFKFDgWFbgBFNAMbezGfUVCmamPYC4TQkTDhRoBlFYA4rA94YIC4X8I6AiC4BvEoKQU40QK4A8eQD+EKIsKgVSMUDogAggPRfYySczPSAAQjRV2JpgUAOI4jei2OkLMgjQUCaw83C04WqFOW8NtQ8kyn4mC2u1C083ROTiz243ci8E8m8iRIIEOI32aNr2vGIhxK8jxN4JKgJOaxpPtzV3a2qwIB0EYLhNbU6O21My5LVR5J535NAGlyFM1lamyksWnHFJBJ8y4I62lMkLlIyUcxKWGlmiHwxzVKDSIj1NaEdQNJ8GGO1DNMUEtWH3JzwI2WB0qWmj+NVOGUtPXHtKNK1S72HUtRqN0EPBoDuBIFBAsQ6mnDyVVNumHRmW1J6xYMhRjRjLh0swTI+iYXZTj0tkjPaULiLy4mFIRPtDKjaBTWBmmmCQlIBXdApQWSrNKVskTKm3LOU0qnLOBPTPzRTOyE4lbONT7LtGrOvC7O5Ij2HWHIHPDVRXSnfiyjEHanaVjT9CbP9HC3gjtDySxI0GBGplXNSRZVUT3IPMiAklQnrIIkc2HMPI3LYxrjqC3MXKITSCePDIPMbMMAAB4QhTyqYFBzyiFyQmB8IFAiJMQaATUSBqgTCzCDY+CKh5gqBNo0giJQAABqC4pqL4YycMmSPYL8zC6JYiYi0oswXC-EYEAiwCvRZBXCUC46CCkoQgEQCiOCtcRgegJClwVC6JMiso8mKimioirCx1dCrC8ivgoS-CggPYICoMlsMoCoZTK5BZTEh7DJUYZwEoKGHciYdNXeO89cmsnuJoovYyohCYckPQHS1EfYcgFsMMiMxUqM-KbmKStIBZY8v0-xL8qS4IQdICzyvgoyl3Ss78JdBS1eOEiYb2BysQHynMi2QyfMtcb1Q6RigidS6JUgBoTyUAUNaRQoEeZyBhCYJhYcwueI28v5EMcGIRFYYcjsscz0b8Zq0c6c4q5IXieybw7SpSvSleJpcdDCVSluHKyIDS8wZpWywahKjKmajJRq4yijOi9OcOQvdPfyr+GysQOyoakM5yxc5c5CDyr+LylNHywdHa5qYIJMb4IKmxNjKy5aUK4RKzSy-FAMui7qgIByC0eK0YJK+lc4FKk6pUnwDagULKu8s6EgfK8UQqz0R6fSDCNceVCYUq6GgISq8s6q5M8shamKmgla5qxs1q-snQDq5symruP6vqxmyYrGOa3S4mjeBYiNJYtgFYrgeFXgFAeE7URSZSagVSKk-ZE6WknAvdBkqyIiEW0yFtEs0ARWsWu0JSeYSfeQzSCcp3f0ldLqWErM2RVW4yUW74xE-ZFRWg9cPkW1XtR1cwXtVKXI2I+jQtJ2swQtV2n5W1K8r21W8lJgX2+2+jH6QOn6UOwoW1d1X+R1OO0hd4N28wW1CUegeYCQaoR1dOzO2CzYFO-I+jW4r224kMQu228C60amGYOoegJJauqmWuxgCYCu21DCwO8waEnQaoQwSKeGeiLC-Otu+jBiTuswbu0AXuqJeiZiYev20e3wr2+ifwfu8wZiFekek0xJHQZISe6ete+iGJKeswLe9cIiYAceuSe4qevuge0AMAeesOk0gAUivv3rvtAHohfpPtADPvAtZUik7o-pnp8t7oXpNNBNZWAZvoPvvqgeinAefvPu-Pftgc-vol-LMCQZjvo2-KAd3v8BAcPtAHwewf-qIlhjQZ7owdAHhnIYgfPthgIb3vQdAeYYYeQfAtBKvq-oCDXrMHBLMAOL5DRiYTVstoltwUbKinGCAV7R0AkfFvBTEdNqUattwRoDqAACs3iVE5HZgTool-bzaladNpjDbNItJ9D1GpGT40ZsBxHTH1a5tXwELVED1bUgU3ZHVvHNoK6YjbVIASBXZXBs7d7gnQm7oAmplbVG7HBYBIAvb4nEmYn6k4m5Am6ABRQO+JrJtJ1xW1AAOQkCKavpKaKdeq-lUZfDNpMhcdWw7Nkf8CATICiUHTIG-FsdW30ScfqckcaerOafMFafaYsYIWsbqYtvFp6Ycc1gMiMn6eUcxhOmUOBB+mlv0nZEMnxGf33CYCEioscG0YkEkB3mMnjzO1Slsc1qeLXB1pIG-DEg2akL4IjkqDSunE2fnMyk+fyjfnYNsbikbP0LyLMG6aIzfC-NBegQBf8SBeyy0d0coGcTBc2AhZfGI2rIKa-mSvj1StcvaRdWzNBvWa0fCD+YimigepUspYUDmYyS8V+FpqnUNi6V9MTs-FZf0ES1QiL1-CvP2CMSvEHW5eRmwpqiZc7gBCXTFaHGJdNtYEMkZTlmXG6MLlKiTHAowGIsRQ4nlSldHKwU1cUCIgwH1e-CVZmDFFVfUMUaBC1aIgAHYLWcXzB2UyWnzCdCX0qOIgA","body":"function list_of_values(exps, env) {\n    return is_null(exps)\t\n           ? null\n           : pair(evaluate(head(exps), env), \n                  list_of_values(tail(exps), env));\n} "}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-4","count":4,"href":"/sicpjs/4.1.1#footnote-link-4","child":[{"body":"In this case, the language being implemented and the\n    implementation language are the same. Contemplation of the meaning of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"is_truthy"},{"body":"\n    here yields\n    \n    expansion of consciousness without the abuse of\n    substance.","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-5","count":5,"href":"/sicpjs/4.1.1#footnote-link-5","child":[{"body":"The treatment of return statements in\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"eval_sequence"},{"body":"\n\treflects the proper\n\tresult of evaluating function applications in JavaScript, but the\n\tevaluator presented here does not comply with the ECMAScript\n\tspecification for the value of a program that consists\n\tof a sequence of statements ","tag":"#text"},{"tag":"EM","child":[{"body":"outside of","tag":"#text"}]},{"body":" any function body.\n\tExercise ","tag":"#text"},{"tag":"REF","body":"4.8","href":"/sicpjs/4.1.2#ex-4.8"},{"body":" addresses this issue.\n\t","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-6","count":6,"href":"/sicpjs/4.1.1#footnote-link-6","child":[{"body":"\n\tThe application of the function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_return_value"},{"body":" to the result\n\tof evaluating the return expression creates a deferred operation, in\n\taddition to the deferred operation created by\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":". See\n\tfootnote ","tag":"#text"},{"tag":"REF","body":2,"href":"/sicpjs/4.1.1#footnote-2"},{"body":" for details.","tag":"#text"}]}]