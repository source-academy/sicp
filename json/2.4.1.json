[{"id":"/sicpjs/2.4.1","tag":"TITLE","body":"2.4.1  \n    Representations for Complex Numbers"},{"tag":"TEXT","id":"#p1","child":[{"body":"\n    We will develop a system that performs arithmetic operations on complex\n    numbers as a simple but unrealistic example of a program that uses generic\n    operations.  We begin by discussing two plausible representations for\n    complex numbers as ordered pairs: rectangular form (real part and imaginary\n    part) and polar form (magnitude and angle).","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-1","body":"1","href":"/sicpjs/2.4.1#footnote-1"},{"body":" Section ","tag":"#text"},{"tag":"REF","body":"2.4.2","href":"/sicpjs/2.4.2"},{"body":"\n    will show how both representations can be made to coexist in a single\n    system through the use of type tags and generic operations.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p2","child":[{"body":"\n    Like rational numbers, complex numbers are naturally represented as ordered\n    pairs.  The set of complex numbers can be thought of as a two-dimensional\n    space with two orthogonal axes, the \"","tag":"#text"},{"body":"real","tag":"#text"},{"body":"\" axis and the\n    \"","tag":"#text"},{"body":"imaginary","tag":"#text"},{"body":"\" axis. (See\n    figure ","tag":"#text"},{"tag":"REF","body":"2.20","href":"/sicpjs/2.4.1#fig-2.20"},{"body":".)  From this point of view,\n    the complex number ","tag":"#text"},{"body":"$z=x+iy$","tag":"LATEX"},{"body":" (where\n    ","tag":"#text"},{"body":"$i^{2} =-1$","tag":"LATEX"},{"body":") can be thought of as the point in\n    the plane whose real coordinate is ","tag":"#text"},{"body":"$x$","tag":"LATEX"},{"body":" and whose\n    imaginary coordinate is ","tag":"#text"},{"body":"$y$","tag":"LATEX"},{"body":". Addition of complex\n    numbers reduces in this representation to addition of coordinates:\n    ","tag":"#text"},{"body":"\n      \\[\n        \\begin{array}{lll}\n      \\text{Real-part}(z_{1}+z_{2}) & = & \n         \\text{Real-part}(z_{1})+\\text{Real-part}(z_{2}) \\\\[1ex]\n      \\text{Imaginary-part}(z_{1} +z_{2}) & = & \n         \\text{Imaginary-part}(z_1)+\\text{Imaginary-part}(z_2)\n        \\end{array}\n      \\]\n    ","tag":"LATEX"}]},{"tag":"TEXT","id":"#p3","child":[{"body":"\n    When multiplying complex numbers, it is more natural to think in terms\n    of representing a complex number in polar form, as a magnitude and an\n    angle (","tag":"#text"},{"body":"$r$","tag":"LATEX"},{"body":" and ","tag":"#text"},{"body":"$A$","tag":"LATEX"},{"body":"\n    in figure ","tag":"#text"},{"tag":"REF","body":"2.20","href":"/sicpjs/2.4.1#fig-2.20"},{"body":"). The product of two\n    complex numbers is the vector obtained by stretching one complex number by\n    \n    the length of the other and then rotating it through the angle of the other:\n    ","tag":"#text"},{"body":"\n      \\[\n        \\begin{array}{lll}\n      \\text{Magnitude}(z_{1}\\cdot z_{2}) & = & \n      \\text{Magnitude}(z_{1})\\cdot\\text{Magnitude}(z_{2})\\\\[1ex]\n      \\text{Angle}(z_{1}\\cdot z_{2}) & = & \n      \\text{Angle}(z_{1})+\\text{Angle}(z_{2})\n        \\end{array}\n      \\]\n    ","tag":"LATEX"}]},{"tag":"TEXT","id":"#p4","child":[{"body":"\n    Thus, there are two different representations for complex numbers,\n    which are appropriate for different operations.  Yet, from the\n    viewpoint of someone writing a program that uses complex numbers, the\n    principle of data abstraction suggests that all the operations for\n    manipulating complex numbers should be available regardless of which\n    representation is used by the computer.  For example, it is often\n    useful to be able to find the magnitude of a complex number that is\n    specified by rectangular coordinates.  Similarly, it is often useful\n    to be able to determine the real part of a complex number that is\n    specified by polar coordinates.\n    ","tag":"#text"},{"tag":"FIGURE","scale":"60%","src":"img_original/ch2-Z-G-59.svg","id":"#fig-2.20","captionHref":"/sicpjs/2.4.1#fig-2.20","captionName":"Figure 2.20 ","captionBody":[{"body":"Complex numbers as points in the plane.","tag":"#text"}]}]},{"tag":"TEXT","id":"#p5","child":[{"body":"\n    To design such a system, we can follow the same \n    \n    data-abstraction strategy we followed in designing the rational-number\n    package in section ","tag":"#text"},{"tag":"REF","body":"2.1.1","href":"/sicpjs/2.1.1"},{"body":".  Assume that the\n    operations on complex numbers are implemented in terms of four selectors:\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"real_part"},{"body":",","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"imag_part"},{"body":",","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"magnitude"},{"body":",\n    and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"angle"},{"body":".  Also assume that we have two\n    functions\n    for constructing complex numbers:\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_from_real_imag"},{"body":"\n    returns a complex number with specified real and imaginary parts, and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_from_mag_ang"},{"body":"\n    returns a complex number with specified magnitude and angle. These\n    functions\n    have the property that, for any complex number\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"z"},{"body":", both\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":1,"eval":false,"body":"make_from_real_imag(real_part(z), imag_part(z));"},{"body":"\n    and\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":2,"eval":false,"body":"make_from_mag_ang(magnitude(z), angle(z));"},{"body":"\n    produce complex numbers that are equal to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"z"},{"body":".\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p6","child":[{"body":"\n    Using these constructors and selectors, we can implement arithmetic on\n    complex numbers using the \"","tag":"#text"},{"body":"abstract data","tag":"#text"},{"body":"\" specified by the\n    constructors and selectors, just as we did for rational numbers in\n    section ","tag":"#text"},{"tag":"REF","body":"2.1.1","href":"/sicpjs/2.1.1"},{"body":".  As shown in the formulas\n    above, we can add and subtract complex numbers in terms of real and\n    imaginary parts while multiplying and dividing complex numbers in terms of\n    magnitudes and angles:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":3,"eval":false,"body":"function add_complex(z1, z2) {\n    return make_from_real_imag(real_part(z1) + real_part(z2),\n                               imag_part(z1) + imag_part(z2));\n}\nfunction sub_complex(z1, z2) {\n    return make_from_real_imag(real_part(z1) - real_part(z2),\n                               imag_part(z1) - imag_part(z2));\n}\nfunction mul_complex(z1, z2) {\n    return make_from_mag_ang(magnitude(z1) * magnitude(z2),\n                             angle(z1) + angle(z2));\n}\nfunction div_complex(z1, z2) {\n    return make_from_mag_ang(magnitude(z1) / magnitude(z2),\n                             angle(z1) - angle(z2));\n}"}]},{"tag":"TEXT","id":"#p7","child":[{"body":"\n    To complete the complex-number package, we must choose a representation and\n    we must implement the constructors and selectors in terms of primitive\n    numbers and primitive list structure. There are two obvious ways to do\n    this: We can represent a complex number in \"","tag":"#text"},{"body":"rectangular form","tag":"#text"},{"body":"\"\n    as a pair (real part, imaginary part) or in \"","tag":"#text"},{"body":"polar form","tag":"#text"},{"body":"\" as a\n    pair (magnitude, angle).  Which shall we choose?\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p8","child":[{"body":"\n    In order to make the different choices concrete, imagine that there are two\n    programmers, Ben Bitdiddle and Alyssa P. Hacker, who are independently\n    designing representations for the complex-number system.\n    Ben chooses to represent\n    \n    complex numbers in rectangular form.  With this\n    choice, selecting the real and imaginary parts of a complex number is\n    straightforward, as is constructing a complex number with given real and\n    imaginary parts.  To find the magnitude and the angle, or to construct a\n    complex number with a given magnitude and angle, he uses the trigonometric\n    relations\n    ","tag":"#text"},{"body":"\n      \\[\n      \\begin{array}{lllllll}\n      x & = & r\\ \\cos A & \\quad \\quad \\quad & r & = & \\sqrt{x^2 +y^2} \\\\\n      y & = & r\\ \\sin A &             & A &= & \\arctan (y,x)\n      \\end{array}\n      \\]\n    ","tag":"LATEX"},{"body":"\n    which relate the real and imaginary parts (","tag":"#text"},{"body":"$x$","tag":"LATEX"},{"body":",\n    ","tag":"#text"},{"body":"$y$","tag":"LATEX"},{"body":") to the magnitude and the angle\n    ","tag":"#text"},{"body":"$(r, A)$","tag":"LATEX"},{"body":".","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-2","body":"2","href":"/sicpjs/2.4.1#footnote-2"},{"body":"\n    Ben's representation is therefore given by the following selectors\n    and constructors:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":4,"eval":true,"prependLength":22,"program":"chap=2&prgrm=PTAEGUEkGEAVQFLlAJgHQBY0EYBQuAzAVwDsBjAFwEsB7E0AQwBMmB9MmgWwAcAbAUwAeACgBe2ADShRKAJSgA3rlArQAJ34Uia+pwYBrfqwJqurDQ16sqegObCLV7gzUUx2eQGp1-S62euYnISyqph4RGR4TYMtv4ubuJeoDFxAYlysgDcuAC+hKSUtPQAzkQARuxcfELuUjLySmEaWjqgeobGppzmvlapDn3xgUmgALQ+fulBsiFR8wthqcOJHuMpdisz2XkF5NR07URWHDwCIuL1coqhKi3augZGJmabDCT2diRUWkz87vIAFTtWLfX7-BpzRbQ8LvWwCAGgbxwhENHb5Yj7YqgJhUABuVTOtUu0muTVU9zaHWe3VYbw+wi+PyIf0RYCZ4JmUJhPJRELWEz52xy+T2RUOJQAjkQXP9BI1bj5WvRBKBgYIRfhMeL6I4tqJGkqHqAABa+JhibKgUXag70ZbTA2KI1tCgMKi8S1Za1awp2kG2MEsiEK5qaY16Cgm1hSwJSmUaQZTBKW5Lx2XCB0pg2ydFi-1Cp3ku7hqkMKOscvvFCZzaO2aTJzZ3Oa23Y6ldMx6gaCKQAT0NlPozioamEvdAA+9Nr97aenZ69PsaikDFDFNLw-dY7UapBFY4JWEa6ku+BkejJSoJGPLd2uA4JBKFHafaqrBIRB62FAAF4QZ0Lw9N2djCOgACsUhjAADGg4E7I+z6vu+n49Cgf4ATSXZDAMEFQbB8E5A+dBIRoZS8C+-7MGwpw1CInBvhwH5fqwkiKjy8ycMchJ0YyjE0MxaHchxInhAxKEsZkRFZoEZHHBQ2RAA","body":"function real_part(z) { return head(z); }\n\nfunction imag_part(z) { return tail(z); }\n\nfunction magnitude(z) {\n    return math_sqrt(square(real_part(z)) + square(imag_part(z)));\n}\nfunction angle(z) {\n    return math_atan2(imag_part(z), real_part(z));\n}\nfunction make_from_real_imag(x, y) { return pair(x, y); }\n\nfunction make_from_mag_ang(r, a) {\n    return pair(r * math_cos(a), r * math_sin(a));\n} "}]},{"tag":"TEXT","id":"#p9","child":[{"body":"\n    Alyssa, in contrast, chooses to represent complex numbers in\n    \n    polar form.\n    \n    For her, selecting the magnitude and angle is straightforward, but she has\n    to use the \n    \n    trigonometric relations to obtain the real and imaginary parts.\n    Alyssa's representation is:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":5,"eval":true,"prependLength":22,"program":"chap=2&prgrm=PTAEGUEkGEAVQFLlAJgHQBY0EYBQuAzAVwDsBjAFwEsB7E0AQwBMmB9MmgWwAcAbAUwAeACgBe2ADShRKAJSgA3rlArQAJ34Uia+pwYBrfqwJqurDQ16sqegObCLV7gzUUx2eQGp1-S62euYnISyqph4RGR4TYMtv4ubuJeoDFxAYlysgDcuAC+hKSUtPQAzkQARuxcfELuUjLySmEaWjqgeobGppzmvlapDn3xgUmgALQ+fulBsiFR8wthqcOJHuMpdisz2XkF5NR07URWHDwCIuL1coqhKi3augZGJmabDCT2diRUWkz87vIAFTtWLfX7-BpzRbQ8LvWwCAGgbxwhENHb5Yj7YqgJhUABuVTOtUu0muTVU9zaHWe3VYbw+wi+PyIf0RYCZ4JmUJhPJRELWEz52xy+T2RUOJQAjkQXP9BI1bj5WvRBKBgYIRfhMeL6I4tqIFc1NA8QbYwSyIUCQRQABZVErCIUG9Fig70ZbTA03I3K03m1le4F6W2sEpUEiOj6o2Qu7Vuv3MgONJUmm2+JhibKgUVx7FO5OU+gUBhUXiZrLZrWFePUrpmPUDQRSACehopxrazioakZDBDUsCUplGmE8qRoCHsuErdmiuhwbtffeKGnUnlser2NrLx69PsaikDALHfoXZ7B8YWdFHBIJQo7WbVVYJCIPWwoAAvCDOjven4BugACsUhjAADGggE7Ded4Pk+L49Cgn7fjS9ZDABEEgeBkE5Lg0H3hoZS8PeX7MGwpw1CInCPhwz6vqwkhzjyUScMchIUYy1E0LRCHckxfHhFRcF0ZkOEegkgyERQ2RAA","body":"function real_part(z) {\n    return magnitude(z) * math_cos(angle(z));\n}\nfunction imag_part(z) {\n    return magnitude(z) * math_sin(angle(z));\n}\nfunction magnitude(z) { return head(z); }\n\nfunction angle(z) { return tail(z); }\n\nfunction make_from_real_imag(x, y) {\n    return pair(math_sqrt(square(x) + square(y)),\n                math_atan2(y, x));\n}\nfunction make_from_mag_ang(r, a) { return pair(r, a); } "}]},{"tag":"TEXT","id":"#p10","child":[{"body":"\n    The discipline of data abstraction ensures that the same implementation of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"add_complex"},{"body":",\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"sub_complex"},{"body":",\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"mul_complex"},{"body":",\n      \n    and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"div_complex"},{"body":"\n    will work with either Ben's representation or Alyssa's\n    representation. \n  ","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-1","count":1,"href":"/sicpjs/2.4.1#footnote-link-1","child":[{"body":"In actual computational\n    systems, rectangular form is preferable to polar form most of the time\n    because of \n    \n    roundoff errors in conversion between rectangular and polar form.  This is\n    why the complex-number example is unrealistic.  Nevertheless, it provides a\n    clear illustration of the design of a system using generic operations and a\n    good introduction to the more substantial systems to be developed later in\n    this chapter.","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-2","count":2,"href":"/sicpjs/2.4.1#footnote-link-2","child":[{"body":"The arctangent function\n    referred to\n    here,\n    \n\tcomputed by JavaScript's\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"math_atan2"},{"body":" function,\n      \n    is defined so as to take two arguments\n    ","tag":"#text"},{"body":"$y$","tag":"LATEX"},{"body":" and ","tag":"#text"},{"body":"$x$","tag":"LATEX"},{"body":"\n    and to return the angle whose tangent is ","tag":"#text"},{"body":"$y/x$","tag":"LATEX"},{"body":".\n    The signs of the arguments determine the quadrant of the angle.","tag":"#text"}]}]