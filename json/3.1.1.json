[{"id":"/sicpjs/3.1.1","tag":"TITLE","body":"3.1.1  \n    Local State Variables"},{"tag":"TEXT","id":"#p1","child":[{"body":"\n    To illustrate what we mean by having a computational object with\n    \n    time-varying state, let us model the situation of withdrawing money\n    from a\n    \n    bank account.  We will do this using a\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":", which takes as argument an\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amount"},{"body":" to be withdrawn.\n    If there is enough money in the account to accommodate the withdrawal,\n    then ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":" should return the balance\n    remaining after the withdrawal.  Otherwise,\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":" should return the message\n    ","tag":"#text"},{"tag":"EM","child":[{"body":"Insufficient funds.","tag":"#text"}]},{"body":" For example, if we begin with $100\n    in the account, we should obtain the following sequence of responses\n    using\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":":\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":1,"eval":true,"prependLength":12,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsBsBTAF1ACMBDPcgOwGMDQBeUDABlYG5cAzAVzqIBLAPbVQAd0FEAFgBMATuXEAKcgFth-IgEpQAb2ygjoQd1DKKVOgwB8zdZuo79h428s16TMpU8MAtKAOWlxubvLEvPJiHtahxgC+oAR4AM4MBmHGEURRYgBEkNSpvNzcgrSCBE6gfNSyqfnxRgnYrdiSMgpKygBMAKzaHEA","body":"withdraw(25); ","output":"75"},{"tag":"SNIPPET","latex":false,"id":2,"eval":true,"prependLength":14,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsBsBTAF1ACMBDPcgOwGMDQBeUDABlYG5cAzAVzqIBLAPbVQAd0FEAFgBMATuXEAKcgFth-IgEpQAb2ygjoQd1DKKVOgwB8zdZuo79h428s16TMpU8MAtKAOWlxubvLEvPJiHtahxgC+oAR4AM4MBmHGEURRYgBEkNSpvNzcgrSCBE6gfNSyqfnxRgnYrdiSMgpKygBMAKzaXB1ScooqA0NAA","body":"withdraw(25); ","output":"50"},{"tag":"SNIPPET","latex":false,"id":3,"eval":true,"prependLength":16,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsBsBTAF1ACMBDPcgOwGMDQBeUDABlYG5cAzAVzqIBLAPbVQAd0FEAFgBMATuXEAKcgFth-IgEpQAb2ygjoQd1DKKVOgwB8zdZuo79h428s16TMpU8MAtKAOWlxubvLEvPJiHtahxgC+oAR4AM4MBmHGEURRYgBEkNSpvNzcgrSCBE6gfNSyqfnxRgnYrdiSMgpKygBMAKzaXB1ScooqA0O4nWM9AGysQ0A","body":"withdraw(60); ","output":"\"Insufficient funds\""},{"tag":"SNIPPET","latex":false,"id":4,"eval":true,"prependLength":18,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsBsBTAF1ACMBDPcgOwGMDQBeUDABlYG5cAzAVzqIBLAPbVQAd0FEAFgBMATuXEAKcgFth-IgEpQAb2ygjoQd1DKKVOgwB8zdZuo79h428s16TMpU8MAtKAOWlxubvLEvPJiHtahxgC+oAR4AM4MBmHGEURRYgBEkNSpvNzcgrSCBE6gfNSyqfnxRgnYrdiSMgpKygBMAKzaXB1ScooqA0O4nWM9AGysUyNd48oYgxxAA","body":"withdraw(15); ","output":"35"},{"body":"\n    Observe that the expression\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw(25)"},{"body":",\n      \n    evaluated twice, yields different values.  This is a new kind of\n    behavior for a\n    function.\n    Until now, all our\n    JavaScript functions\n    could be viewed as specifications for computing mathematical functions.\n    A call to a\n    function\n    computed the value of the function applied to the given arguments,\n    and two calls to the same\n    function\n    with the same arguments always produced the same\n    result.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-1","body":"1","href":"/sicpjs/3.1.1#footnote-1"}]},{"tag":"TEXT","id":"#p2","child":[{"body":"\n\tSo far, all our names have been ","tag":"#text"},{"tag":"EM","child":[{"body":"immutable","tag":"#text"}]},{"body":". \n\tWhen a function was applied, the values that its parameters\n\treferred to never changed, and once a declaration was evaluated,\n\tthe declared name never changed its value.\n        To implement functions like\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":", we introduce\n\t","tag":"#text"},{"tag":"EM","child":[{"body":"variable declarations","tag":"#text"}]},{"body":", which use the keyword\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"let"},{"body":", in addition to constant\n\tdeclarations, which use the keyword\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"const"},{"body":".\n        We can declare a variable\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":"\n\tto indicate the balance of money\t\n\tin the account and define\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":" as a function that accesses\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":".\n      \n    The ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":"function\n    checks to see if ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" is at least as large\n    as the requested ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amount"},{"body":".  If so,\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":" decrements\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" by ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amount"},{"body":"\n    and returns the new value of ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":". Otherwise,\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":" returns the ","tag":"#text"},{"tag":"EM","child":[{"body":"Insufficient funds","tag":"#text"}]},{"body":"\n    message. Here are the\n    declarations\n    of ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":":\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":5,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsBsBTAF1ACMBDPcgOwGMDQBeUDABlYG5cAzAVzqIBLAPbVQAd0FEAFgBMATuXEAKcgFth-IgEpQAb2ygjoQd1DKKVOgwB8zdZuo79h428s16TMpU8MAtKAOWlxubvLEvPJiHtahxgC+oAR4AM4MBmHGEURRYgBEkNSpvNzcgrSCBE6gfNSyqfnxRgnYrdiSMgpKygBMAKzaHEA","body":"let balance = 100;\n\nfunction withdraw(amount) {\n    if (balance >= amount) {\n        balance = balance - amount;\n        return balance;\n    } else {\n        return \"Insufficient funds\";\n    }\n} "},{"body":"\n    Decrementing ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" is accomplished by the \n    expression statement","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":6,"eval":false,"body":"balance = balance - amount;"},{"body":"\n\tThe syntax of\n\t","tag":"#text"},{"tag":"EM","child":[{"body":"assignment","tag":"#text"}]},{"body":" expressions is\n    ","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\n$name$ = $new$-$value$\n      "},{"body":"\n    Here\n    ","tag":"#text"},{"tag":"META","body":"name"},{"body":"\n\thas been declared with\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"let"},{"body":" or\n\tas a\n\t\n\tfunction parameter\n      \n    and\n    ","tag":"#text"},{"tag":"META","body":"new-value"},{"body":"\n    is any expression.  \n    The assignment \n    changes\n    ","tag":"#text"},{"tag":"META","body":"name"},{"body":"\n    so that its value is the\n    result obtained by evaluating\n    ","tag":"#text"},{"tag":"META","body":"new-value"},{"body":".\n      \n    In the case at hand, we are changing ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" so\n    that its new value will be the result of subtracting\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amount"},{"body":" from the previous value of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":".","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-2","body":"2","href":"/sicpjs/3.1.1#footnote-2"}]},{"tag":"TEXT","id":"#p3","child":[{"body":"\n\tThe function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":" also uses a\n\t","tag":"#text"},{"tag":"EM","child":[{"body":"sequence of statements","tag":"#text"}]},{"body":" to cause two statements to be evaluated\n\tin the case where the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"if"},{"body":" test is\n\ttrue: first decrementing  ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":"\n\tand then returning the value of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":".  \n\tIn general, executing a sequence\n\t","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\n$stmt$$_{1}$ $stmt$$_{2} \\ldots$$stmt$$_{n}$\n          "},{"body":"\n        causes the statements ","tag":"#text"},{"tag":"META","body":"stmt"},{"body":"$_{1}$","tag":"LATEX"},{"body":"\n\tthrough\n\t","tag":"#text"},{"tag":"META","body":"stmt"},{"body":"$_{n}$","tag":"LATEX"},{"body":" to be evaluated in\n\tsequence.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-3","body":"3","href":"/sicpjs/3.1.1#footnote-3"}]},{"tag":"TEXT","id":"#p4","child":[{"body":"\n    Although ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":" works as desired, the\n    variable ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" presents a problem.  As\n    specified above, ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" is a name defined\n    in the\n    program environment and is freely accessible to be examined or\n      modified by any\n      function.\n      It would be much better if we could somehow make\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" internal to\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":", so that\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":" would be the only\n      function\n      that could access ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" directly and\n      any other\n      function\n      could access ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" only indirectly\n      (through calls to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":").  This would\n      more accurately model the notion that\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" is a local state variable used by\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":" to keep track of the state of the\n      account.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p5","child":[{"body":"\n    We can make ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" internal to\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":" by rewriting the definition as\n    follows:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":7,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQHcKyALAEwBODDmwBGDADYNS7DAAY5ACgCUoAN7ZQW0BJZlQ4qTNABeUPLkBuTdoF6CA2gzpVi+kwD51N7b7+gKPFBFQ2kSFlAPM2dXIjJVDX8k-1DjM1Tw0ABaUBi3a2TCrTsyB1oMlgKi3wBfUBYJAGcIxOqkkrLQACJIIkaCPDwKEgoWONBCIj5Grqq20BqfZJrrRZIaRv0iFhEuXkFhU3pmdj3+IREKtgsVa2xt3e5z4UUANjllawfOJ4OON4+liAA","body":"function make_withdraw_balance_100() {\n    let balance = 100;\n    return amount => {\n               if (balance >= amount) {\n                   balance = balance - amount;\n                   return balance;\n               } else {\n                   return \"Insufficient funds\";\n               }\n           };\n}\nconst new_withdraw = make_withdraw_balance_100(); "},{"body":"\n        What we have done here is use ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"let"},{"body":"\n\tto establish an environment with a local variable\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":", bound to the initial\n\tvalue 100. Within this local environment, we use a lambda\n\texpression","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-4","body":"4","href":"/sicpjs/3.1.1#footnote-4"},{"body":" to\n\tcreate a function that takes ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amount"},{"body":"\n\tas an argument and behaves like our previous\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":" function.  This\n\tfunction—returned as the result of evaluating the body of the\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_withdraw_balance_100"},{"body":"\n\tfunction—behaves in precisely the same way as\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":", but its variable\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" is not accessible by any\n\tother function.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-5","body":"5","href":"/sicpjs/3.1.1#footnote-5"}]},{"tag":"TEXT","id":"#p6","child":[{"body":"\n    Combining \n    \n        assignments with variable declarations\n      \n    is the general programming\n    technique we will use for constructing computational objects with\n    local state.  Unfortunately, using this technique raises a serious\n    problem: When we first introduced\n    functions,\n    we also introduced the substitution model of evaluation\n    (section ","tag":"#text"},{"tag":"REF","body":"1.1.5","href":"/sicpjs/1.1.5"},{"body":") to provide an\n    interpretation of what\n    function\n    application means.  We said that applying a\n    function whose body is a return statement\n    should be interpreted as evaluating the\n    return expression of the function\n    with the\n    \n    parameters replaced by their values.\n    \n\tFor functions with more complex\n\tbodies, we need to evaluate the whole body with the\n\tparameters replaced by their values.\n      \n    The trouble is that,\n    as soon as we introduce assignment into our language, substitution is no\n    longer an adequate model of\n    function\n    application.  (We will see why this is so in\n    section ","tag":"#text"},{"tag":"REF","body":"3.1.3","href":"/sicpjs/3.1.3"},{"body":".)  As a consequence, we\n    technically have at this point no way to understand why the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"new_withdraw"},{"body":"function\n    behaves as claimed above.  In order to really understand a\n    function\n    such as\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"new_withdraw"},{"body":",\n      \n    we will need to develop a new model of\n    function\n    application.  In section ","tag":"#text"},{"tag":"REF","body":"3.2","href":"/sicpjs/3.2"},{"body":" we will\n    introduce such a model, together with an explanation of \n    assignments and variable declarations.\n    First, however, we examine some variations on the theme established by\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"new_withdraw"},{"body":".\n      ","tag":"#text"}]},{"tag":"TEXT","id":"#p7","child":[{"body":"\n\tParameters of functions as well as names declared with\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"let"},{"body":" are\n\t\n\tvariables.\n      \n    The following\n    \n\tfunction, ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_withdraw"},{"body":",\n      \n    creates \"","tag":"#text"},{"body":"withdrawal processors.","tag":"#text"},{"body":"\"\n    The  parameter\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" in\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_withdraw"},{"body":"\n    specifies the initial amount of money in the\n    account.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-6","body":"6","href":"/sicpjs/3.1.1#footnote-6"},{"tag":"SNIPPET","latex":false,"id":8,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQHcKyALAEwBODDgAoARgwA2DUiwCUoAN7ZQq0AJZkCA2gzpViZUAF4AfEpVqr11RTyhxUmSRahTx0HoNEyC5TYCbCWlZE1Bg51cAWk99QwBuS0DkjS0dcKdZROSbAF9QFkkAZ1d-HMDU7VoAIkgiIoI8PAoSChYfUEIiPiLq7PK1XKTA3MSh7BIaIqMAdQwwxlZObn4hUQwABg25RMn62YAmBeZ2Ll5BYRFN7figA","body":"function make_withdraw(balance) {\n    return amount => {\n               if (balance >= amount) {\n                   balance = balance - amount;\n                   return balance;\n               } else {\n                   return \"Insufficient funds\";\n               }\n           };\n} "},{"body":"\n\tThe function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_withdraw"},{"body":"\n    can be used as follows to create two objects ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"W1"},{"body":"\n    and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"W2"},{"body":":\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":9,"eval":true,"prependLength":12,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQHcKyALAEwBODDgAoARgwA2DUiwCUoAN7ZQq0AJZkCA2gzpViZUAF4AfEpVqr11RTyhxUmSRahTx0HoNEyC5TYCbCWlZE1Bg51cAWk99QwBuS0DkjS0dcKdZROSbAF9QFkkAZ1d-HMDU7VoAIkgiIoI8PAoSChYfUEIiPiLq7PK1XKTA3MSh7BIaIqMAdQwwxlZObn4hUQwABg25RMn62YAmBeZ2Ll5BYRFN7figA","body":"const W1 = make_withdraw(100);\nconst W2 = make_withdraw(100); "},{"tag":"SNIPPET","latex":false,"id":10,"eval":true,"prependLength":15,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQHcKyALAEwBODDgAoARgwA2DUiwCUoAN7ZQq0AJZkCA2gzpViZUAF4AfEpVqr11RTyhxUmSRahTx0HoNEyC5TYCbCWlZE1Bg51cAWk99QwBuS0DkjS0dcKdZROSbAF9QFkkAZ1d-HMDU7VoAIkgiIoI8PAoSChYfUEIiPiLq7PK1XKTA3MSh7BIaIqMAdQwwxlZObn4hUQwABg25RMn62YAmBeZ2Ll5BYRFN7cTsOZEAVhugA","body":"W1(50); ","output":"50"},{"tag":"SNIPPET","latex":false,"id":11,"eval":true,"prependLength":17,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQHcKyALAEwBODDgAoARgwA2DUiwCUoAN7ZQq0AJZkCA2gzpViZUAF4AfEpVqr11RTyhxUmSRahTx0HoNEyC5TYCbCWlZE1Bg51cAWk99QwBuS0DkjS0dcKdZROSbAF9QFkkAZ1d-HMDU7VoAIkgiIoI8PAoSChYfUEIiPiLq7PK1XKTA3MSh7BIaIqMAdQwwxlZObn4hUQwABg25RMn62YAmBeZ2Ll5BYRFN7cTsOZEAVhvcGYORAHYboA","body":"W2(70); ","output":"30"},{"tag":"SNIPPET","latex":false,"id":12,"eval":true,"prependLength":19,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQHcKyALAEwBODDgAoARgwA2DUiwCUoAN7ZQq0AJZkCA2gzpViZUAF4AfEpVqr11RTyhxUmSRahTx0HoNEyC5TYCbCWlZE1Bg51cAWk99QwBuS0DkjS0dcKdZROSbAF9QFkkAZ1d-HMDU7VoAIkgiIoI8PAoSChYfUEIiPiLq7PK1XKTA3MSh7BIaIqMAdQwwxlZObn4hUQwABg25RMn62YAmBeZ2Ll5BYRFN7cTsOZEAVhvcGYORAHZnu7eAFhugA","body":"W2(40); ","output":"\"Insufficient funds\""},{"tag":"SNIPPET","latex":false,"id":13,"eval":true,"prependLength":21,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQHcKyALAEwBODDgAoARgwA2DUiwCUoAN7ZQq0AJZkCA2gzpViZUAF4AfEpVqr11RTyhxUmSRahTx0HoNEyC5TYCbCWlZE1Bg51cAWk99QwBuS0DkjS0dcKdZROSbAF9QFkkAZ1d-HMDU7VoAIkgiIoI8PAoSChYfUEIiPiLq7PK1XKTA3MSh7BIaIqMAdQwwxlZObn4hUQwABg25RMn62YAmBeZ2Ll5BYRFN7cTsOZEAVhvcGYORAHZnu7eAFi-7v47IA","body":"W1(40); ","output":"10"},{"body":"\n    Observe that ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"W1"},{"body":" and \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"W2"},{"body":" are completely independent objects, each\n    with its own local state variable ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":".\n    Withdrawals from one do not affect the other.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p8","child":[{"body":"\n    We can also create objects that handle\n    \n    deposits as well as\n    withdrawals, and thus we can represent simple bank accounts.  Here is\n    a\n    function\n    that returns a \"","tag":"#text"},{"body":"bank-account object","tag":"#text"},{"body":"\" with a specified initial\n    balance:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":14,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQZJKuLIAoARgwA2DUiwCUoAN7ZQ80IVKUaoAO4UyACwAmAJwZq+DOjyJkpshddAU8oQSLEkWoAHwBeUCbMWZcm0ChUXFQL2DnVwBab1NeAG4AwOs9FjICPVoI8UTk0ABfUBZhAGdXKzyFVPTM0AAiSCISgjw8ChIKFnNFYh0Sutzk-KSCkaVyalodFgAHKhLNYzjzSxHrbJcw0A3XAGpY30HA6oyspxyR4etxlSmKEpmGMhItPjpVvJPaujCPLzqNNp9IY6mtKqAAPzqTS6AxqMGVABc9F+-2mcwWZFB4JsUPR800CLyyJYej0VD0bwANPViEwiFQ1LRUgBHAgsEpkUBRGKMVgcLi+OoSI6jFJpU6gHT3R7PLSJYbYbhNLmcEhbPnsNW+PgYAAMepFuDVfABMOBamFfAArIb4kA","body":"function make_account(balance) {\n    function withdraw(amount) {\n        if (balance >= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return \"Insufficient funds\";\n        }\n    }\n    function deposit(amount) {\n        balance = balance + amount;\n        return balance;\n    }\n    function dispatch(m) {\n        return m === \"withdraw\"\n               ? withdraw\n               : m === \"deposit\"\n               ? deposit\n               : error(m, \"unknown request -- make_account\");\n    }\n    return dispatch;\n} "},{"body":"\n    Each call to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_account"},{"body":" sets up an\n    environment with a local state variable ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":".\n    Within this environment, ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_account"},{"body":" defines\n    functions","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"deposit"},{"body":" and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":" that access\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" and an additional\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"dispatch"},{"body":"\n    that takes a \"","tag":"#text"},{"body":"message","tag":"#text"},{"body":"\" as input and returns one of the two local\n    functions.\n    The ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"dispatch"},{"body":"function\n    itself is returned as the value that represents the bank-account object.\n    This is precisely the \n    ","tag":"#text"},{"tag":"EM","child":[{"body":"message-passing","tag":"#text"}]},{"body":" style of programming that we saw in\n    section ","tag":"#text"},{"tag":"REF","body":"2.4.3","href":"/sicpjs/2.4.3"},{"body":", although here we are using\n    it in conjunction with the ability to modify local variables.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p9","child":[{"body":"\n\tThe function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_account"},{"body":"\n    can be used as follows:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":15,"eval":true,"prependLength":24,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQZJKuLIAoARgwA2DUiwCUoAN7ZQ80IVKUaoAO4UyACwAmAJwZq+DOjyJkpshddAU8oQSLEkWoAHwBeUCbMWZcm0ChUXFQL2DnVwBab1NeAG4AwOs9FjICPVoI8UTk0ABfUBZhAGdXKzyFVPTM0AAiSCISgjw8ChIKFnNFYh0Sutzk-KSCkaVyalodFgAHKhLNYzjzSxHrbJcw0A3XAGpY30HA6oyspxyR4etxlSmKEpmGMhItPjpVvJPaujCPLzqNNp9IY6mtKqAAPzqTS6AxqMGVABc9F+-2mcwWZFB4JsUPR800CLyyJYej0VD0bwANPViEwiFQ1LRUgBHAgsEpkUBRGKMVgcLi+OoSI6jFJpU6gHT3R7PLSJYbYbhNLmcEhbPnsNW+PgYAAMepFQA","body":"const acc = make_account(100); "},{"tag":"SNIPPET","latex":false,"id":16,"eval":true,"prependLength":26,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQZJKuLIAoARgwA2DUiwCUoAN7ZQ80IVKUaoAO4UyACwAmAJwZq+DOjyJkpshddAU8oQSLEkWoAHwBeUCbMWZcm0ChUXFQL2DnVwBab1NeAG4AwOs9FjICPVoI8UTk0ABfUBZhAGdXKzyFVPTM0AAiSCISgjw8ChIKFnNFYh0Sutzk-KSCkaVyalodFgAHKhLNYzjzSxHrbJcw0A3XAGpY30HA6oyspxyR4etxlSmKEpmGMhItPjpVvJPaujCPLzqNNp9IY6mtKqAAPzqTS6AxqMGVABc9F+-2mcwWZFB4JsUPR800CLyyJYej0VD0bwANPViEwiFQ1LRUgBHAgsEpkUBRGKMVgcLi+OoSI6jFJpU6gHT3R7PLSJYbYbhNLmcEhbPnsNW+PgYAAMepFuDVfABMOBamFfAArIb4kA","body":"acc(\"withdraw\")(50); ","output":"50"},{"tag":"SNIPPET","latex":false,"id":17,"eval":true,"prependLength":28,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQZJKuLIAoARgwA2DUiwCUoAN7ZQ80IVKUaoAO4UyACwAmAJwZq+DOjyJkpshddAU8oQSLEkWoAHwBeUCbMWZcm0ChUXFQL2DnVwBab1NeAG4AwOs9FjICPVoI8UTk0ABfUBZhAGdXKzyFVPTM0AAiSCISgjw8ChIKFnNFYh0Sutzk-KSCkaVyalodFgAHKhLNYzjzSxHrbJcw0A3XAGpY30HA6oyspxyR4etxlSmKEpmGMhItPjpVvJPaujCPLzqNNp9IY6mtKqAAPzqTS6AxqMGVABc9F+-2mcwWZFB4JsUPR800CLyyJYej0VD0bwANPViEwiFQ1LRUgBHAgsEpkUBRGKMVgcLi+OoSI6jFJpU6gHT3R7PLSJYbYbhNLmcEhbPnsNW+PgYAAMepFuDVfABMOBamFfAArIbEtgTWagXCrQA2O1AA","body":"acc(\"withdraw\")(60); ","output":"\"Insufficient funds\""},{"tag":"SNIPPET","latex":false,"id":18,"eval":true,"prependLength":30,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQZJKuLIAoARgwA2DUiwCUoAN7ZQ80IVKUaoAO4UyACwAmAJwZq+DOjyJkpshddAU8oQSLEkWoAHwBeUCbMWZcm0ChUXFQL2DnVwBab1NeAG4AwOs9FjICPVoI8UTk0ABfUBZhAGdXKzyFVPTM0AAiSCISgjw8ChIKFnNFYh0Sutzk-KSCkaVyalodFgAHKhLNYzjzSxHrbJcw0A3XAGpY30HA6oyspxyR4etxlSmKEpmGMhItPjpVvJPaujCPLzqNNp9IY6mtKqAAPzqTS6AxqMGVABc9F+-2mcwWZFB4JsUPR800CLyyJYej0VD0bwANPViEwiFQ1LRUgBHAgsEpkUBRGKMVgcLi+OoSI6jFJpU6gHT3R7PLSJYbYbhNLmcEhbPnsNW+PgYAAMepFuDVfABMOBamFfAArIbEtgTWagXCrQA2O3Grim-GYq0AFjtQA","body":"acc(\"deposit\")(40); ","output":"90"},{"tag":"SNIPPET","latex":false,"id":19,"eval":true,"prependLength":32,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQZJKuLIAoARgwA2DUiwCUoAN7ZQ80IVKUaoAO4UyACwAmAJwZq+DOjyJkpshddAU8oQSLEkWoAHwBeUCbMWZcm0ChUXFQL2DnVwBab1NeAG4AwOs9FjICPVoI8UTk0ABfUBZhAGdXKzyFVPTM0AAiSCISgjw8ChIKFnNFYh0Sutzk-KSCkaVyalodFgAHKhLNYzjzSxHrbJcw0A3XAGpY30HA6oyspxyR4etxlSmKEpmGMhItPjpVvJPaujCPLzqNNp9IY6mtKqAAPzqTS6AxqMGVABc9F+-2mcwWZFB4JsUPR800CLyyJYej0VD0bwANPViEwiFQ1LRUgBHAgsEpkUBRGKMVgcLi+OoSI6jFJpU6gHT3R7PLSJYbYbhNLmcEhbPnsNW+PgYAAMepFuDVfABMOBamFfAArIbEtgTWagXCrQA2O3Grim-GYq0AFg9Dq9TthIIkfHdIqAA","body":"acc(\"withdraw\")(60); ","output":"30"},{"body":"Each call to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"acc"},{"body":" returns the locally defined\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"deposit"},{"body":" or ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"withdraw"},{"body":"function,\n    which is then applied to the specified ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amount"},{"body":".\n    As was the case with\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_withdraw"},{"body":", another\n\tcall to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_account"},{"tag":"SNIPPET","latex":false,"id":20,"eval":true,"prependLength":24,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQZJKuLIAoARgwA2DUiwCUoAN7ZQ80IVKUaoAO4UyACwAmAJwZq+DOjyJkpshddAU8oQSLEkWoAHwBeUCbMWZcm0ChUXFQL2DnVwBab1NeAG4AwOs9FjICPVoI8UTk0ABfUBZhAGdXKzyFVPTM0AAiSCISgjw8ChIKFnNFYh0Sutzk-KSCkaVyalodFgAHKhLNYzjzSxHrbJcw0A3XAGpY30HA6oyspxyR4etxlSmKEpmGMhItPjpVvJPaujCPLzqNNp9IY6mtKqAAPzqTS6AxqMGVABc9F+-2mcwWZFB4JsUPR800CLyyJYej0VD0bwANPViEwiFQ1LRUgBHAgsEpkUBRGKMVgcLi+OoSI6jFJpU6gHT3R7PLSJYbYbhNLmcEgAJi2fPYat8fAwAAYDSKgA","body":"const acc2 = make_account(100); "},{"body":"\n    will produce a completely separate account object, which maintains its\n    own local ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":".\n  ","tag":"#text"}]},{"tag":"EXERCISE","title":"Exercise 3.1","id":"#ex-3.1","child":[{"body":"\n    An \n    ","tag":"#text"},{"tag":"EM","child":[{"body":"accumulator","tag":"#text"}]},{"body":" is a\n    function\n    that is called repeatedly with a single numeric argument and accumulates its\n    arguments into a sum. Each time it is called, it returns the currently\n    accumulated sum. Write a\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_accumulator"},{"body":"\n    that generates accumulators, each maintaining an independent sum.  The\n    input to \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_accumulator"},{"body":"\n    should specify the initial value of the sum; for example\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":21,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChslALYCGA1gKYD6RAxtQK4F0A2RALgPYBOoHoARmVAB3TgEtWrMgDt+AT1ABnVnQAm01guzV2UpaCKgAvIVKUa9Riw6cAFAFYAlAG4gA","body":"const a = make_accumulator(5); "},{"tag":"SNIPPET","latex":false,"id":22,"eval":true,"prependLength":4,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChslALYCGA1gKYD6RAxtQK4F0A2RALgPYBOoHoARmVAB3TgEtWrMgDt+AT1ABnVnQAm01guzV2UpaCKgAvIVKUa9Riw6cAFAFYAlAG5cRGxgAMzoA","body":"a(10); ","output":"15"},{"tag":"SNIPPET","latex":false,"id":23,"eval":true,"prependLength":6,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChslALYCGA1gKYD6RAxtQK4F0A2RALgPYBOoHoARmVAB3TgEtWrMgDt+AT1ABnVnQAm01guzV2UpaCKgAvIVKUa9Riw6cAFAFYAlAG5cRGxgAMz1+69OgA","body":"a(10); ","output":"25"}],"solution":[{"tag":"SNIPPET","latex":false,"id":24,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQZJILoIBsGZKgCcAFN2HCWRMgEpQAb2ygVoQqUo1QDACY7RDYQHN5S1edASpM0AF5LBSdLKgA1NuMBuZRZVSyjrRWzt7mAL4+fiwBwrS6Ot4R2CQ0AM4uDHb0zOyc3LwCQmIArLLeDKIYAAxl2BXVZUA","body":"function make_accumulator(current) {\n    function add(arg) {\n        current = current + arg;\n        return current;\n    }\n    return add;\n} "}]},{"tag":"EXERCISE","title":"Exercise 3.2","id":"#ex-3.2","child":[{"body":"\n    In software-testing applications, it is useful to be able to count the\n    number of times a given\n    function\n    is called during the course of a computation.  Write a\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_monitored"},{"body":"\n    that takes as input a\n    function,","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"f"},{"body":", that itself takes one input.  The result\n    returned by \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_monitored"},{"body":"\n    is a third\n    function,\n    say ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"mf"},{"body":", that keeps track of the number of times\n    it has been called by maintaining an internal counter. If the input to\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"mf"},{"body":" is the\n    string ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"how many calls\""},{"body":",\n      \n    then ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"mf"},{"body":" returns the value of the counter.  If\n    the input is the \n    string ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"reset count\""},{"body":",\n      \n    then ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"mf"},{"body":" resets the counter to zero.  For any\n    other input, ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"mf"},{"body":" returns the result of calling\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"f"},{"body":" on that input and increments the counter.\n    For instance, we could make a monitored version of the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"sqrt"},{"body":"function:","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":25,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChslALYCGA1gKYD6BA9gHYCWALtQE5kAmoAZgK60DGjenVDNQAIzKgA7iyaMytCQE9QAZ0Y92ixmuz86G9aAC8hUpRoNmbdgApijABYU1ARxaMAlAG4gA","body":"const s = make_monitored(math_sqrt); "},{"tag":"SNIPPET","latex":false,"id":26,"eval":true,"prependLength":4,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChslALYCGA1gKYD6BA9gHYCWALtQE5kAmoAZgK60DGjenVDNQAIzKgA7iyaMytCQE9QAZ0Y92ixmuz86G9aAC8hUpRoNmbdgApijABYU1ARxaMAlAG5cauwwABiDfIA","body":"s(100); ","output":"10"},{"tag":"SNIPPET","latex":false,"id":27,"eval":true,"prependLength":6,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChslALYCGA1gKYD6BA9gHYCWALtQE5kAmoAZgK60DGjenVDNQAIzKgA7iyaMytCQE9QAZ0Y92ixmuz86G9aAC8hUpRoNmbdgApijABYU1ARxaMAlAG5cauwwABiDffzsAIidqaXNaVX4iABsktQjfIA","body":"s(\"how many calls\"); ","output":"1"}],"solution":[{"tag":"SNIPPET","latex":false,"id":28,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsGMB7AOwGcAXUE0AXlAFsBDAawFMB9O4gSzIICcWAEwAUjMgAs2JAI58yASgDc2EsIwAGdUuyCuJAA4AbBgE9hqgETiCAd3oMiJ0HgaHDJC-O2qArNt0GxmaW1naMjs6u7p5KQA","body":"const s = make_monitored(math_sqrt);\ns(100);\ndisplay(s(\"how many calls\"));\ns(5);\ndisplay(s(\"how many calls\")); "},{"tag":"SNIPPET","latex":false,"id":29,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfTporKoCcWAJgAo8ASlABvbKBmgANizKgSVYmRa9QAXlAAGANygQFItwoM5FAF6DQPPdNmFSlGvTxCSdAeKmz-oBR4oJ7e2lo6AEQAFlQA7vQMRACeyhZyAM6Rvo4BAfxkBLy0Kmoa+rkBAL6gLJksgcGhAuFR-BmKyqpEZNmSlXkypT0a2noVg-mKRSXd6rwTgzV1Hf2T-sPzY5ujANSgGIvroAUzoB5ePkfVlVWVp8XuFXfYKkQZShljjKwcXDz8YSMMjRNgZACOvDIogqGSEGF0uhh2AEFAyAAc5AxkkI4TF4okUmk5Jlssi4QBWZGojFYnF42IJRhEkjpLKiGFAA","body":"function make_monitored(f) {\n    let counter = 0; //initialized to 0\n    function mf(cmd) {\n        if (cmd === \"how many calls\") {\n            return counter;\n        } else if (cmd === \"reset count\") {\n            counter = 0;\n            return counter;\n        } else {\n            counter = counter + 1;\n            return f(cmd);\n        }\n    }\n    return mf;\n} "}]},{"tag":"EXERCISE","title":"Exercise 3.3","id":"#ex-3.3","child":[{"body":"\n    Modify the \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_account"},{"body":"function\n    so that it creates\n    \n    password-protected accounts.  That is, \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_account"},{"body":"\n    should take a\n    string\n    as an additional argument, as in\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":30,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChslALYCGA1gKYD6RAxtQPYCuAdgC6gBmz1LAlnU6BZ1QAIzKgA7gCceLFmQEiAnqADOLBgBMFLVdnpN1oGtVABeQqUonGrABQYADI4A0oAESqy1KWTYAHIlVVCTopTXcASgBuIA","body":"const acc = make_account(100, \"secret password\"); "},{"body":"\n    The resulting account object should process a request only if it is\n    accompanied by the password with which the account was created, and\n    should otherwise return a complaint:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":31,"eval":true,"prependLength":4,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChslALYCGA1gKYD6RAxtQPYCuAdgC6gBmz1LAlnU6BZ1QAIzKgA7gCceLFmQEiAnqADOLBgBMFLVdnpN1oGtVABeQqUonGrABQYADI4A0oAESqy1KWTYAHIlVVCTopTXcASgBuXBM7T29fAKCQsIi3dwlZAAtNKSIJKLsAFkcYoA","body":"acc(\"secret password\", \"withdraw\")(40); ","output":"60"},{"tag":"SNIPPET","latex":false,"id":32,"eval":true,"prependLength":6,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChslALYCGA1gKYD6RAxtQPYCuAdgC6gBmz1LAlnU6BZ1QAIzKgA7gCceLFmQEiAnqADOLBgBMFLVdnpN1oGtVABeQqUonGrABQYADI4A0oAESqy1KWTYAHIlVVCTopTXcASgBuXBM7T29fAKCQsIi3dwlZAAtNKSIJKLsAFkcYuNoE1ToCcToWHLIpUEDg0PD3TO1-OlVZYrKYoA","body":"acc(\"some other password\", \"deposit\")(40); ","output":"\"Incorrect password\""}],"solution":[{"tag":"SNIPPET","latex":false,"id":33,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQBbAQwGsBTAfQZJKuLIAoARgwA2DUiwA0oAA4BKUAG9soFaEKlKNUAHcKZABYATAE4NtfBnR5Ey8paoegKeUIJFiSLUAD4AvKEtrW0VlRzChUXFQfwiPLwBaAKteAG5QsIdjFjICY1pY8TSM0ABfUBZhAGcve2LVLJy80AAiSCJKgjw8ChIKFhs1YkNK5qKMkvTSyfVyalpDFmkqSr0LZJs7SYcCz2jQHa8AaiSgsbCG3Pz3QsmJhxnNeYpK6QYyEn0+OikAR03i5yuaTRXz+P4hOr1bKXegg-zNXQGExmZpbSEOAD8Oj0RlM2jR6JUAC5YaD4QslisyKjCRksRTlnoCYSSc0AKpEJhEKjaWhZH4EFiVMgkxisDhcIKjZllCrVCHoi5NH7RbwtNrcYxZcigWAMSqVbRUYyGaXFO6qC0qJVPF5vD5pCbYbjtMgBPZi9icbi8PgYAAM-qkzRYADcGM1ZGkGHwETjkdpmsGwxHZHwAKz+qOgECI3FmSqgTPYGNxpF4pMtAT9SN8AAsWZSOeAFFIxu1bteBqNJqAA","body":"function make_account(balance, p) {\n    function withdraw(amount) {\n        if (balance >= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return \"Insufficient funds\";\n        }\n    }\n    function deposit(amount) {\n        balance = balance + amount;\n        return balance;\n    }\n    function dispatch(m, q) {\n        if (p === q) {\n            return m === \"withdraw\"\n                   ? withdraw\n                   : m === \"deposit\"\n                   ? deposit\n                   : \"Unknown request: make_account\";\n        } else {\n            return q => \"Incorrect Password\";\n        }\n    }\n    return dispatch;\n}\n\nconst a = make_account(100, \"eva\");\na(\"withdraw\", \"eva\")(50); //withdraws 50\na(\"withdraw\", \"ben\")(40); //incorrect password "}]},{"tag":"EXERCISE","title":"Exercise 3.4","id":"#ex-3.4","child":[{"body":"\n    Modify the \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_account"},{"body":"function\n    of exercise ","tag":"#text"},{"tag":"REF","body":"3.3","href":"/sicpjs/3.1.1#ex-3.3"},{"body":" by adding another\n    local state variable so that, if an account is accessed more than seven\n    consecutive times with an incorrect password, it invokes the\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"call_the_cops"},{"body":".\n      ","tag":"#text"}],"solution":[{"tag":"SNIPPET","latex":false,"id":34,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQEZMChsDMBXAOwGMAXASwHsjQSBDAG0YH0yALAUxZKoAcAzgAoATp3oCaASlABvbKEWgxZAiNoAiBswpEA5qA6c6-AaABGnBgQHGNoANTLxkogG5sAX3zFy1WgC29ADW3PQkvMRkQuZM9KScADSgfDLyCkqMnGSgugBuTBQAJiz0ZGScAXxkZgC8oAAMbqAguhSUhQBenGZkVI24SqCEpJQ0oADu7exFIvQTQvQBVFFpGUOKFHigMXEJoAB89UsrRGRrG5cWeyTG9bGM8begALSgJ1EeVxsqarQPT04XyunlAnEYtjk62+zlU6lAGkgRAEBDweAoJAonDOw2IRQEGmBl28Q280JGfnGRU4fCoAnai2Wqyh3wB+3uN2MTg+ZyJP2yf2ujwSfLJQwpY1o2kYuj0bC4PFMQhYFyuv3h0vl3F4giEGgAnitQOx6HljJwAB63TjUooIxzQmFOy4aIygIIW0BEfpUbZ4egULJ2soVKo1DRSUWDJQS-ygIoUAR8MokdhCALJACOqsuWx2+UKJRDlWqZgAPKAAOw5mF5oR8UC1JugbMs51DdWBRvNjRTDizeYaR3ty4Afkm0wHE2HI6GAC53d36hpqbT6WQh7OYePV3T2jOt6AFxoAKpEYLeia0MSZgg9MgLoKhUoRU4bvnfUHgyHyQ8FmVFuUJY1I2uREAUAGlEBYZmE4GAfs6nagJ6tQHAiSK8CIYjkKAsASAIExUCIRSEgepIHl+ELGL+iEChqTAyvoWqKoICGKCSShikoSEJkmKbsB4Xi4LwyI5PQoFPmEr5REIGANA0yQaCIdKcOYBAkZG2D0HqfYzHMEwaIpym2LEGlCAArA0mnab2k76YZCLGap9BmZZ1k6XZg5GSppkRhZVkeDZulTg5Sk+S5fluYFHn9vZ3kmRFUj+e5tmxV5jnha5AVaTFenpWFCVZSlwVxRlhWRQFQA","body":"function call_the_cops(reason) {\n    return \"calling the cops because \" + reason;\n}\nfunction make_account(balance, p) {\n\n    let invalid_attempts = 0; //initializes to 0\n\n    function withdraw(amount) {\n        if (balance >= amount) {\n            balance = balance - amount;\n            return balance;\n        } else {\n            return \"Insufficient funds\";\n        }\n    }\n\n    function deposit(amount) {\n        balance = balance + amount;\n        return balance;\n    }\n\n    function calling_the_cops(_) {\n        return call_the_cops(\"you have exceeded \" +\n                             \"the max no of failed attempts\");\n    }\n\n    function dispatch(m, q) {\n        if (invalid_attempts < 7) {\n            if (p === q) {\n                return m === \"withdraw\"\n                       ? withdraw\n                       : m === \"deposit\"\n                       ? deposit\n                       : \"Unknown request: make_account\";\n            } else {\n                invalid_attempts = invalid_attempts + 1;\n                return x => \"Incorrect Password\";\n            }\n        } else {\n            return calling_the_cops;\n        }\n    }\n\n    return dispatch;\n\n} "}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-1","count":1,"href":"/sicpjs/3.1.1#footnote-link-1","child":[{"body":"Actually, this is not quite true. One exception was the \n    \n    random-number generator\n    in section ","tag":"#text"},{"tag":"REF","body":"1.2.6","href":"/sicpjs/1.2.6"},{"body":".  Another exception\n    involved the\n    \n    operation/type tables we introduced in\n    section ","tag":"#text"},{"tag":"REF","body":"2.4.3","href":"/sicpjs/2.4.3"},{"body":", where the values of two\n    calls to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"get"},{"body":" with the same arguments\n    depended on intervening calls to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"put"},{"body":".\n    On the other hand, until we introduce assignment, we have no way to\n    create such\n    functions\n    ourselves.","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-2","count":2,"href":"/sicpjs/3.1.1#footnote-link-2","child":[{"body":"\n\tThe\n\t\n\tvalue of an assignment is the value being assigned to the name.\n\tAssignment expression statements\n\t\n\tlook similar to and should not be\n\tconfused with constant and variable declarations of the form\n\t","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nconst $name$ = $value$;\n          "},{"body":"\n\tand\n\t","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nlet $name$ = $value$;\n          "},{"body":"\n\tin which a newly declared ","tag":"#text"},{"tag":"META","body":"name"},{"body":"\n\tis associated with a ","tag":"#text"},{"tag":"META","body":"value"},{"body":". \n\tAssignment expressions look similar to and should not be confused with\n\t\n\texpressions of the form \n\t","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\n$expression_1$ === $expression_2$\n          "},{"body":"\n\twhich evaluate to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"true"},{"body":"\n\tif ","tag":"#text"},{"tag":"META","body":"expression"},{"body":"$_1$","tag":"LATEX"},{"body":" evaluates to the\n\tsame value as ","tag":"#text"},{"tag":"META","body":"expression"},{"body":"$_2$","tag":"LATEX"},{"body":" and to\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"false"},{"body":" otherwise.\n      ","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-3","count":3,"href":"/sicpjs/3.1.1#footnote-link-3","child":[{"body":"We have already used \n        \n        sequences implicitly in our programs, because in\n\tJavaScript the body block\n\tof a function can contain a sequence of function declarations\n\tfollowed by a return statement, not\n\tjust a single return statement,\n\tas discussed in\n\tsection ","tag":"#text"},{"tag":"REF","body":"1.1.8","href":"/sicpjs/1.1.8"},{"body":".","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-4","count":4,"href":"/sicpjs/3.1.1#footnote-link-4","child":[{"body":"Blocks as bodies of lambda expressions were\n\tintroduced in section ","tag":"#text"},{"tag":"REF","body":"2.2.4","href":"/sicpjs/2.2.4"},{"body":".","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-5","count":5,"href":"/sicpjs/3.1.1#footnote-link-5","child":[{"body":"In programming-language jargon, the variable\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" is said to be \n        ","tag":"#text"},{"tag":"EM","child":[{"body":"encapsulated","tag":"#text"}]},{"body":" within the\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"new_withdraw"},{"body":" function.\n\tEncapsulation reflects the general system-design principle known as the \n        ","tag":"#text"},{"tag":"EM","child":[{"body":"hiding principle","tag":"#text"}]},{"body":": One can\n        make a system more modular and robust by protecting parts of the\n        system from each other; that is, by providing information access only\n        to those parts of the system that have a \"","tag":"#text"},{"body":"need to\n\tknow.","tag":"#text"},{"body":"\"","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-6","count":6,"href":"/sicpjs/3.1.1#footnote-link-6","child":[{"body":"\n    In contrast with\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_withdraw_balance_100"},{"body":"\n    above, we do not have to use\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"let"},{"body":"\n    to make ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"balance"},{"body":" a local variable, since\n    \n    parameters are already\n    local. This will be clearer after the discussion of the environment\n    model of evaluation in\n    section ","tag":"#text"},{"tag":"REF","body":"3.2","href":"/sicpjs/3.2"},{"body":".\n    (See also\n    exercise ","tag":"#text"},{"tag":"REF","body":"3.10","href":"/sicpjs/3.2.3#ex-3.10"},{"body":".)","tag":"#text"}]}]