[{"id":"/sicpjs/3.2.5","tag":"TITLE","body":"3.2.5  \n    CSE Machine"},{"tag":"TEXT","id":"#p1","child":[{"body":"\n\tThe environment model as presented so far focuses on how functions can refer\n\tto their parameters, locally declared names, and names that are declared\n\toutside the function. We achieve this by evaluating statements and expressions\n\twith respect to a ","tag":"#text"},{"tag":"EM","child":[{"body":"current environment","tag":"#text"}]},{"body":". It does not specify how\n\twe keep track of environments as computation proceeds. For example, when we\n\tevaluate an expression ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"f(x) + y"},{"body":", we\n\tneed to evaluate ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"x"},{"body":" in the current\n\tenvironment, establish as the new current environment the environment of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"f"},{"body":" extended by a binding of its\n\tparameter to the value of ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"x"},{"body":", and\n\tevaluate the body of ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"f"},{"body":" in this\n\textended environment. But what environment should we use for evaluating\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"y"},{"body":" after\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"f"},{"body":" returns?\n\tIn this section, we extend the \n      ","tag":"#text"}]},{"tag":"SUBHEADING","id":"#h1","child":[{"body":"Evaluating arithmetic expressions","tag":"#text"}]},{"tag":"TEXT","id":"#p2","child":[{"body":"\n\tExercise ","tag":"#text"},{"tag":"REF","body":"3.8","href":"/sicpjs/3.1.3#ex-3.8"},{"body":" shows that the presence of\n\tassignments makes the result of a program depend on the order in which\n\tthe operands of an operator combination are evaluated. To remove\n\tambiguities that arise from this, the JavaScript standard specifies\n\tleft-to-right evaluation of operands.\n\n\tAs an example, consider the evaluation of the arithmetic expression statement\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":1,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHQCY0FYBQuBGUAalAAoNQAqVASgG4g","body":"1 + (2 * 3); "},{"body":"\n\tThe expression is decomposed into its operands\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"1"},{"body":" and\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"2 * 3"},{"body":", followed by the\n\t","tag":"#text"},{"tag":"EM","child":[{"body":"instruction","tag":"#text"}]},{"body":" to add their results.\n      ","tag":"#text"}]}]