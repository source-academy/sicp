<SUBSECTION> 
   <NAME>
    寄存器机
  </NAME> 

  <LABEL NAME="sec:cse-machine"></LABEL>
   <INDEX>寄存器机<OPEN></OPEN></INDEX> 

   <SPLIT>
    <JAVASCRIPT>
      <TEXT>
	环境模型如上所述，侧重于函数如何引用其参数、局部声明的名称以及函数外部声明的名称。我们通过相对于<EM>当前环境</EM>求值语句和表达式来实现这一点。它没有指定随着计算的进行，我们如何跟踪环境。例如，当我们求值表达式<JAVASCRIPTINLINE>f(x) + y</JAVASCRIPTINLINE>时，我们需要在当前环境中求值<JAVASCRIPTINLINE>x</JAVASCRIPTINLINE>，建立一个新当前环境，该环境是<JAVASCRIPTINLINE>f</JAVASCRIPTINLINE>的环境通过绑定其参数到<JAVASCRIPTINLINE>x</JAVASCRIPTINLINE>的值来扩展，并在此扩展环境中求值<JAVASCRIPTINLINE>f</JAVASCRIPTINLINE>的主体。但是在<JAVASCRIPTINLINE>f</JAVASCRIPTINLINE>返回后，我们应该使用哪种环境来求值<JAVASCRIPTINLINE>y</JAVASCRIPTINLINE>？
在本节中，我们扩展了
      </TEXT>

      <SUBHEADING><NAME>求值算术表达式</NAME></SUBHEADING>
      
      <TEXT>
	练习<SPACE></SPACE><REF NAME="ex:3_8"></REF>表明，赋值的存在会使程序的结果依赖于运算符组合的操作数的求值顺序。为了消除由此引起的歧义，JavaScript标准指定操作数从左到右进行求值。

	例如，考虑算术表达式语句的求值
	
	  <JAVASCRIPT>
1 + (2 * 3);
	  </JAVASCRIPT>
	
	该表达式分解为其操作数
	<JAVASCRIPTINLINE>1</JAVASCRIPTINLINE>和
	<JAVASCRIPTINLINE>2 * 3</JAVASCRIPTINLINE>，然后是
	<EM>指令</EM>将它们的结果相加。
      </TEXT>
  <INDEX>寄存器机<CLOSE></CLOSE></INDEX>
    </JAVASCRIPT>
  </SPLIT> 
</SUBSECTION>
